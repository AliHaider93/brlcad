commit 127d915986a0fc153c0886b11ea6f6f06661e3d0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Aug 11 16:49:24 2025 -0400

    Bump version numbers for 7.42.0 release

commit 38d96748e1df7715d4878a57ca8c7f5d3e175d4b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:56:35 2025 -0700

    looks like we're done, start release steps

commit 24419f4eaca3182616b558d1448d2a2c8f4ca552
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:53:51 2025 -0700

    document the bext sbom/architecture changes

commit 2f11f4981e9bda144c961e3cf5186017dc10d5e6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:42:02 2025 -0700

    not updated strclear though commit failed to document version or other identifier

commit 1f34ea68d7addaf2b29fd750900ad01b97a5638a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:35:24 2025 -0700

    didn't notice any other user-visible changes, but some commit messages were cryptic or otherwise lacking to say the least

commit 256120de62c62a5baa6532c298313572d2cc8ddc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:33:57 2025 -0700

    summary note on bot written

commit 3dbb8bb8d21fdd404e3b068b9f4ef1829356c171
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 11 02:33:08 2025 -0700

    write up a summary paragraph on the bot work and not a few more user-visible changes.  call out adrt a little more explicitly since it was a significant feature for such a long time.  also note the MAXPSW bump up to 4096, replacing x with solid_report, and the nirt -T option MIC.

commit 2b2a4fc2f98d839934c7e74416e306e22b21233f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 21:04:26 2025 -0400

    and 1.1 is sometimes a bit too dark.  see if 1.2 is a better sweet spot.

commit f47071c0392c9cfd961688a10ae3ad0665f356ad
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 20:02:07 2025 -0400

    don't need or want this rt_cline_radius extern here on Windows
    
    it's provided in rt/global.h via raytrace.h with the proper import/export toggle.

commit 3c94dbe1cb47aa8d8a21dcb1e39ce6c692432233
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:45:49 2025 -0400

    the bot change is confirmed improvement.
    
    gqa changes observed on a particular model were attributed to a couple arb8 that had non-planar saddle face definitions that triggered concave handling.  In reviewing the new vs old shotline results, the old was missing significant portions ortho to that non-planar surface.  new behavior captures the arb8 volume as intended.
    
    in reviewing other independent testing changes encountered, all were attributed to the same geometry in question with non-planar faces and all now reporting more correct and accurate results.

commit b15d536b961fb7e378770a2bc60ef5b745f33c76
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:17:56 2025 -0400

    pull the latest 17f3f0c802dc7a60e5f25751019c0626cdbc7094 with qt headless tweak

commit b886374b8ceaccf4f552abfa0d8479c1624aab03
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:13:50 2025 -0400

    on other hand, it's already in deprecated status so no need

commit a0c9c7b4d3318498f734a10616a1212a2ec819be
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:13:07 2025 -0400

    ugh, cline override is technically user visible

commit 6f6c14d79560941874d9f6eb5a3a73de0560e5b1
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:09:46 2025 -0400

    restore documented CLINE behavior on windows.  we just forcibly set the offset before using the structparse table

commit 43cb3c4aff416cc1e07a076f809ed93095378030
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 17:05:14 2025 -0400

    mark unused

commit 4a754452cde8582fecea6933fa3879c3867d4cad
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 16:36:37 2025 -0400

    replace commentary and doubt-casting about what is not known with what is known.  rt_cline_rai documented in the rtg3 manpage

commit 753417364f3d937554896de2748db036c47661cb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 16:23:41 2025 -0400

    restore the bot_minpieces command, properly deprecated

commit eb0f0bd22b4311643f484442c3751c15eb208876
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 09:57:28 2025 -0400

    not helpful checking soltab if not doing anything with it

commit 28837e0c6b3944ddecda49bc9ce444ff30ffef42
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 09:52:43 2025 -0400

    give structparse an address for stashing values if they are specified by a user

commit 07897f02c3d30337912481b9f2b426830dfb9c4a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 04:06:17 2025 -0400

    bah, use name, ignore sp

commit e7eb8a9b899438d78c22edcb92fdefeaa8ba1187
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:56:04 2025 -0400

    that's right, we have to consult two git logs now

commit 8b7597923856439f3d2a8334e89a431cd1e6be06
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:53:42 2025 -0400

    backtrace tool reliance is entirely an implementation detail.
    
    never intended to be public API that it's using lldb or gdb or any other mechanism under the hood, and definitely not complexity that seems worth exposing all the way to userland as settings, docs, etc.
    
    since this interface was developed, there are now some 3rd party library options available that could be considered/investigated for achieving similar capability.

commit 6fb5eddfe6fdce6358a628a5f2472321b95d8b0d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:47:59 2025 -0400

    nirt -T is obsolete

commit 58b6333153afe4f74ec8dcf69a573d626cf00886
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:46:19 2025 -0400

    document the remaining tails so we can hopefully tag later today.
    
    did encounter some minor changes in the last round of testing with robert that need to be validated.  rt matches, but getting different thickness (e.g., as gqa or nirt see) on just a handful of bot.  need to determine if it's an improvement or regression.
    
    there's also a vertible slew of commits to look through for publicly visible changes.  we should toss the commmit log into gpt and see if it can help.

commit ec4e4ee8e936fb57fdb50eaaec0aee60c2972288
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:35:41 2025 -0400

    note vslew also in addition to fixing the center view button as it was underlying and also broken due to refactoring

commit b43fde5425a22c0f1d671a6bd0f7df8936cfe2dd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:30:55 2025 -0400

    clean up wording for release.
    
    note -o means oriented (unfortunately, major inconsistency), not output; and consolidate two command failure entries that had same root symptom for brevity.

commit d137567276246c2cc7d27a16a0559b581c07526b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:09:24 2025 -0400

    clean up indent on the new material logic

commit 230fc148af8efac46f472dfe50e973e580cda0b0
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 03:00:32 2025 -0400

    restore -B option so it can be properly obsoleted per policy.
    
    not seeing any way to defensibly say it's minimally impacting either.
    conveniently had already deprecated the -T option though and has been
    several minors, so it can just go.
    
    CLI option handling seems wildly inappropriate for an analysis lib...

commit 38b72a95f982b2ba87bbf312e6a8c5e5ca2574df
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 02:58:54 2025 -0400

    document a 7.34.2 missed change, that nirt -b backout became default back in jan 2023

commit 629d810bc1390699e6811c11f9c846c1893052db
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 02:40:25 2025 -0400

    restore pieces and mintie options to rt/rtshot/nirt due to deprecation policy.
    
    notices posted.  still need to deal with nirt's but it moved.

commit 256d4a8175648f1fbbc8442470e7a1bd8c50ef01
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 02:38:03 2025 -0400

    libanalyze would get a failing grade were this for a software design course.  needs serious debt paydown.

commit 032f34eea1c43c20f2dc40205f0479eed328ada4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 01:48:45 2025 -0400

    restore LIBRT_BOT_MINTIE to adhere to policy and avoid churn.
    
    since we still want a setting, no benefit changing the name and no apparent harm if users have scripts that set the value (if we don't want them doing that, we should announce deprecation). in testing, prep was fairly invariant to value changes; and shot was mildly influenced linearly by very large increases if the bots were big enough.

commit 6ecf34b753512e4ae97f54728b1c92053cc29eb7
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 8 01:35:35 2025 -0400

    datums need to serialize to ascii

commit c8c521b730b4a54c9d26d48ea0ff838b71922c6d
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Fri Aug 8 00:15:02 2025 -0400

    unnecessary zeroing
    
    warnings from static analyser

commit e5e4b69ab7bfa5aa193b144a3b82967656b9c1cd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Aug 7 21:19:14 2025 -0400

    If dp == NULL, don't continue processing

commit 5814a737f2f710d29955b8ca058706d03f3e340a
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Aug 7 12:35:48 2025 -0400

    bump bext

commit 638c0ba7f184d3e2608fb7f9e0c11e53c86af830
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Aug 5 01:48:28 2025 -0400

    credit the whole team effort on the new fast bot ray tracing support.  effort was conceived and planned by sean and chris, worked by team of 5 in spring of 2024 at texas a&m university as a capstone project, mentored by chris and sean.  changes were reviewed, merged, and deduped by cliff.  testing and V&V performed by chris, and performance tested and parallism bug fixed by sean.

commit 0c8e0e5c452fec9a8f298b788e1e876042f9d5d4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Aug 5 01:44:22 2025 -0400

    add a based twisted unit cube, created by doing full rotation, but then only keeping the new top face values

commit 3ea3bb291cda734626c3a9f20c08d821c062c526
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 13:17:37 2025 -0400

    credit the spring 2024 team that works on what accelerated BoT ray tracing, ultimately landing on hlbvh construction and shot integration.  gaultier debarre, connor mclean, ian beckett, samuel reed, and timothy reynolds.

commit b23697ffe203589ce258a2f8720148b787a3e3fe
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 13:03:32 2025 -0400

    adjust wording to make more clear this is 8-vertex arbs only)

commit 3da73c52dcdef8690915939628d8fa2c0c16ce54
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 12:59:21 2025 -0400

    summarize concave arb8 support

commit dd93f8d9ab949885b8a9e9222cc8fba6021790e8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 12:49:16 2025 -0400

    staging

commit d1423f2280382eae8e2146f3fa0fd9dfc1fe1b21
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 12:47:18 2025 -0400

    all seems to be behaving, so consolidate face orderings to previously existing face array

commit cd807d4d7de9d53b84154ec68dd8a75d98552ceb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 12:40:13 2025 -0400

    convert arb8 concave/nonplanar debugging to use existing RT_DEBUG_ARB8 flag

commit 98e28f21be6798efaf52b50db8c01c4dc105c0d4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 06:46:46 2025 -0400

    finding some old arb8 in the wild that are 0.00x val from non-planar, but quell for now

commit 887b063d5e8fde68cd8d79a2e784a891e1812148
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 06:17:42 2025 -0400

    still a couple cases to chase down, but set the stage to quell the blather

commit 3ec64ec3587b75318e3e1c42213d3100116b25cb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 06:13:20 2025 -0400

    these test cases aren't near the origin

commit 9cfc1dafb026b2b01f89ff174f0d779332158490
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 06:03:57 2025 -0400

    unitize our normal and take span into account

commit 8a365b99bd0df1b58d0bc9b1784bdca20e5846ee
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 05:13:40 2025 -0400

    make sure we use the same face vertex mapping and only test arb8

commit 5044d9500a80d7f1f15fed9d49044655481e902d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:48:37 2025 -0400

    install the new primitives.g data files also

commit 0be7d9e45d775b94d007eaf65ffc1fdc6c0a2aff
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:42:13 2025 -0400

    ebm_logo.bw, not data

commit 1134c76cf7babc258762e2e35d606a55c6df0ba9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:40:24 2025 -0400

    credit mitchell roberts for his work back in 2014 on creating a primitives.g with all types

commit cc17afaf566d87ae5cda1a6833fe26083fcddc55
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:37:58 2025 -0400

    add a primitives.g sample model by mitchell roberts.
    
    this is a model that's been sitting around for over 10 years that I came across recently.  the contributor made one of nearly every object supported at the time including complex types like vol, ebm, dsp, submodel, grip, etc.  useful test model as several as-is provoke bugs and crashers, things that should otherwise be working.

commit 6ccd92af92970890170f1fdcc297c155c5404419
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:19:04 2025 -0400

    fixed one issue only to hard kill all vol edit/write support...
    
    copy-paste error from ebm made all vol fail to mat transform, which affected all editing and writing (e.g., g2asc).  fortunately, looks like this was caught prior to user-visibility.

commit a8e3ed8eb5571fbcb19e0bd247092f9e1d0d4d84
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 03:04:50 2025 -0400

    just as important as upgrades is noting removal of dependencies.  note gdiam is out.

commit 4858869bcc73a81841aa3ddebd86af5fed629a82
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 02:59:00 2025 -0400

    date was wrong and empty block unhelpful

commit e6fa9d7b05627aa8e1f9045095a8f976c71f900a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 02:38:37 2025 -0400

    reduce nirt commentary from 8.5 to 3.5 lines.
    
    elimianted potentially alarming/confusing narrative and massive parentheticals.

commit 266aeeea5c02a8223d972454d1c3513b0eeee8bd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 02:13:22 2025 -0400

    mged crash encountered simply switching databases after having run rt.
    
    stack was in the tcl io handler callback registered by ged/libtclcad during open, but the subprocess was corrupt/gone (as we'd just switched to a new db).  handler was still registered, so fix was to manually ensure the subprocess channels (for in/out/err) get closed.

commit 03cf0cafdf2927746d876abd0510dc3885e85551
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 02:06:12 2025 -0400

    add additional test cases that erroneously fail convexity test

commit 53e733259b6d9b05f3e381f1205c491ca43205fd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 02:05:05 2025 -0400

    poor naming, ged_subp isn't a pointer (it's an embedded bu_hash).  delete io handlers on close, otherwise corruption and crashes after rt.

commit 135cc0c1835ff1b65e27821c7c49ad0abfa2d224
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 01:43:10 2025 -0400

    not checking gedp before use, and later checking for null is pointless.  hunting down a crasher.

commit bd1ad5ffbeb40d01e203cf4b1b7f7c4f5d275b0a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Aug 4 01:33:58 2025 -0400

    validate rrtp before accessing it

commit 5397ab0abb320636bbb213e7aeeafc6f3faa1135
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Aug 2 15:08:51 2025 -0400

    simplify tol init, same values.

commit 953f0c08f2d52f5e86bfac4526ba9a4364538c4d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Aug 2 15:04:44 2025 -0400

    avoid crash on null rtip, and earlier deref for mild opt

commit d4c392e4ccb99df7e56e14f19333f221f5e5091e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 1 22:02:48 2025 -0400

    update bext to fe856ea7167f15a0f6df70637f88c355e4ceebce for qt mod

commit 986fc995b349464bae3567672e973f70910a2582
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 31 11:34:40 2025 -0400

    Explicit cast for bg_coplanar_pts with gcc

commit 4e87567487b08ca45b59ee1c7f2289918fe17a64
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 31 11:01:57 2025 -0400

    Make a note to look into --first-parent option for git logging.

commit bdfccaf45921072ec07e93a1fc15e5a22be7b230
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 31 10:58:26 2025 -0400

    Add convenient gitk line to view commits to check for user visible changes

commit 75a6d9059682349b0300cad71489047df428fdb9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jul 28 13:23:04 2025 -0400

    Add the cino bit to all the vim lines, not just the initialization

commit 86eba8daea35e31915340e526fa1ec48260b415d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 09:43:14 2025 -0400

    so we are working unoriented, so something is awry with the winding

commit 27459b573fd63d534a70b390c568bceb874a18df
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 08:57:05 2025 -0400

    clarify comment, planar only for now

commit abe1db1c6b79fa242e6ce1e88fbf0159ecd845e7
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 07:56:43 2025 -0400

    since we're converting concave to bot, this simplifies quite a bit

commit 9adba89ee29e73516dbe52fa00a484ca4fd42c6a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 07:40:47 2025 -0400

    after many iterations, the simplest that works without threading or other issues is to just convert it to a bot

commit 08cd6daa369ac1e5daa5a47ba594f768a07f760d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 07:25:14 2025 -0400

    also protect from null directory

commit d8739cd0f13b70a1ed6727b525fbae3cb0edd45e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 03:26:50 2025 -0400

    implement preliminary arb_to_bot logic.  still needs to split based on concavity.

commit 7328dbe9a4103c9863814b723cc509cc9d286cfd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 02:57:51 2025 -0400

    no such thing as libbt. fixed, librt.

commit ebee2395fdabd193429b919086ce493ad3a8e2ec
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 01:18:56 2025 -0400

    pass concave definitions through bot prep/shot.
    
    note several areas for improvement, which could also include stashing the bot soltab but not doing that for now to avoid dynamic memory

commit 0e840eb34e168de30cc293d55034a5e18d8d6b20
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 28 01:15:34 2025 -0400

    support null rtip on bot prep, use defaults

commit 3acf34a45c14ae7e0419fca717941bb28927485b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 23:43:35 2025 -0400

    optionally save the arb8 definitions out to a .g

commit 650cebc1278f3afaace2b5f335086980ab5c29f6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 22:38:06 2025 -0400

    start with just a single ray expected results.
    
    we shoot a ray from 2,.5,.5 towards -1,0,0 (i.e., through center of 1st quadrant cube).  note that arb8 prep is noisy about non-planar but does not reject them (intentionally per history).

commit e6284a1c3877ffd3293db118527130a100ebefd3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:59:24 2025 -0400

    messy and noisy, but now shoots low-level w/ direct calls to prep and shot

commit 3c9b29dcfdf7617eee0a01b59df94f8850ab18ee
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:56:46 2025 -0400

    st_name is a convenience. need to check st_dp, so be a bit more rigorous.

commit 3e04bcd3abed78d88790b5a7cb46fc540a4d245d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:51:12 2025 -0400

    let name be optional

commit 3538672cb1b20b9a03cb918d21479e6d06495f14
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:44:06 2025 -0400

    ref_seghead is unused

commit 27cddcbad6ded8977ef987843a146e803d78539a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:34:24 2025 -0400

    if caller doesn't want segs, don't calculate them

commit 87d172511c616bb3cd646c2f27f32254ab1cb57d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:28:16 2025 -0400

    more streamlining sans-rtip for direct unit testing

commit 6262ec1eb10f2d48b9ba1dd33dd270a1e7652f2e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 20:15:39 2025 -0400

    make rtip optional

commit b5b8fa931ba9d48352dfcf268b34e5374ea41c43
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 19:51:49 2025 -0400

    make sure ip is valid before dereference

commit 19e184e5a4ede6d32f43177548f3eac9e9eba128
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 19:41:20 2025 -0400

    only fail assertions when required.  these could be null from a minimally-required perspective.

commit 275eb38176984602abb9a4eef07c9babc2e7b00d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 19:39:08 2025 -0400

    stp shouldn't be required just to print a name for debug

commit 4be5a984010283f4b01dbb17a3cffaf414ad30a0
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 16:59:27 2025 -0400

    xml ids can't start with numbers

commit 05fcd764fa2e8f650e80e5b5c33c817f59157ce5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 16:59:00 2025 -0400

    another helper to detect when an arb8 isn't planar

commit 95a5b22535fa15e94df6750d925aac8f87e2427b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 16:35:10 2025 -0400

    implement different method for determining concavity.
    
    we look at every line segment pairing and if the midpoint of any line is outside the arb, then we know we have a concave surface.  this is more resilient to vertex ordering issues and avoids needing to wind the right direction since we also make sure all faces go outward from the centroid.  in testing, this general approach appears to be far more robust, and considerably faster than convex hull methods.

commit 453e8ea19f7323cd019e85defde7a821f2bb1973
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jul 25 18:07:10 2025 -0400

    additional configurations of concave and non-planar

commit 20905ca9e00830000c6917af4090871f33c4b937
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jul 23 20:21:19 2025 -0400

    document configurations with a bit more detail so I can keep them straight

commit 03798eb7eab2a10ec8f2de1ccc06cc0a1cda0103
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 09:27:30 2025 -0400

    fix refentries

commit 8f4e4e716f759fcc3c4c15a242d17947aa9f6f8d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 27 09:26:47 2025 -0400

    useful if axis colors were configurable (and worked with flipped output)

commit 23842e3859995ab137c3ebfe73f54ea72b30d602
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 25 14:50:07 2025 -0400

    Note fix for brep solid edit crash.

commit 6f14e4fa5f747c06702d2406df39f4be5463cb13
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 25 13:59:03 2025 -0400

    Note man page updates by Josh

commit 87ff166ad427ce97b982a812b8cbf4eaa4245d4c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 25 12:53:28 2025 -0400

    Note Kenneth Davis bu_log contributions from PR #106

commit ed18ca34171ac0978edf2d0d45a7cdd483a47f4d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 24 08:43:51 2025 -0400

    Bump bext hash

commit 84a37d9076503ffc54d926dab2e7a92cfa1fc678
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 23 15:41:17 2025 -0400

    Whoopsie - don't match the name of an in-src directory, or in-src build isn't happy.

commit 878ce88114adf2e7ff33c882842393c2b5c20f62
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Jul 23 15:16:30 2025 -0400

    make our volume estimate looser but faster
    
    generic 2mm grid size is way overkill for a volume estimate in larger
    objects. Have the grid size instead be relative to the bounding box -1
    order of magnitude on the smallest size

commit beac0dae03f4d77269bb2a44176a0af114d8db51
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 23 13:28:12 2025 -0400

    Add some outputs to distclean

commit eac1f432b97244dc115ebec7ff860a9cf9427edd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jul 22 23:21:17 2025 -0400

    Bump bext for assimp build and strclear update

commit db451ca5474227b88a9ee0fe08fc88849115e2a7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jul 22 14:16:21 2025 -0400

    Same as bext - warn if we're not in a REAL_PATH

commit 6dc35d276b286b44bca8cc7bcc55e691ea2278cc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 21 15:54:27 2025 -0400

    1.5's a bit too bright for some models at such a low sample.
    
    increase ambient by about a third from default 0.8.  also drop ambSlow, no longer a thing.

commit 3758795b0e79236a4e17aa0838df99e263ee6c17
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jul 21 15:50:48 2025 -0400

    restore drawing of coordinate axes on the front/left/top views.
    
    noticed by bill c., looks like the option was lost on a consolidation refactoring.

commit d76192c826ce8b62c85d450152c8a93841c86237
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Jul 20 21:01:58 2025 -0400

    Looks like we were getting WINSOCK from libbu - try listing directly.

commit 277e807417dc7417c7619865fedc4c3eb24a20fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Jul 19 07:57:28 2025 -0400

    Hmm - were we getting Windows lib linking from libbu?

commit b84b0533a18eb1c5d42aea2a1f67598ed4dd7bf2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 18 10:30:10 2025 -0400

    Adjust comment

commit 81860658a763a6ebb4166151413a86637a5c21e2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 18 10:07:10 2025 -0400

    set_deps ordering is important - restore, add comment to that effect.

commit c725c5a0ecd765b3328308a025ae957763c53964
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jul 17 18:01:52 2025 -0400

    misnomer, doesn't appear to do anything with ged (any more)

commit 49a4d9269a04eea1e22e8c8208e8711736b4e990
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jul 17 17:51:23 2025 -0400

    note direct libbu dependency, all but three libs (fft, pkg, pc)

commit e02c482dc862d77a4a6a853426a21f3378d164ed
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jul 17 17:46:03 2025 -0400

    note direct call dependency to libbn, nearly all libs

commit 616c554ff85d4f9331dcf4ce34c52175c031f230
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jul 17 17:36:59 2025 -0400

    libbv is directly called by 7 other libs

commit 152fdeab20c7805504d39799259dda5c497cee50
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jul 17 17:29:15 2025 -0400

    cleanup comments

commit 774a9fe2c618384f751a2d6d51d8ace73f43bd6d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 16 22:46:41 2025 -0400

    add TODO note

commit a4d8eaf4a15ddff08acf5ba2aa3557c1963b31be
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jul 15 13:39:15 2025 -0400

    Explain the implications of nirt reading settings from .mgedrc

commit e713cf3739b777e26204c2b74f90a64973ef7df9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jul 9 01:37:42 2025 -0400

    technically user visible with nurbs recursive threading.
    
    if we exceed 1024 active threads, there were issues.  now limit is 4096 threads.

commit b030e570e752173af6d7b451aaa17bf084f501a9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jul 9 01:15:01 2025 -0400

    some indent cleanup

commit 9aa03acf83654fa93612b5f58e26137a53f35d26
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jul 9 01:06:08 2025 -0400

    temporary fix for the bu_parallel unit test failure on a 48 core workstation.
    
    our recursvie unit test invoked 48*48 workers which exceeded the 1024 limit.  libbu's book-keeping detects the condition but continued 'optimistically' instead of bombing.  this meant handing out id's that were greater than our MAXPSW arrays which would then either segfault or corrupt the unit test tally.
    
    proper fix will be to rework the book-keeping to either halt at the limit when creating threads so we don't create too many, or to eliminate the limit (complicated across all the code).

commit e69aeda441963e731f246f307bfa427c5e085cf3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 6 12:59:48 2025 -0400

    initial unit testing for rt_boolweave().
    
    this doesn't do much more than call rt_boolweave at this point, doesn't even validate that it worked, but does at least exercise the function.

commit c9aec16ab5c003af4ad4c3614fd5d0ea37dc3d47
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 6 12:41:06 2025 -0400

    towards making boolweave not require a solid since it's only used for validation and debug

commit f0e29d72cc1cfd0a6c0d28fc9a814f52fd3864d6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jul 6 12:18:47 2025 -0400

    get rid of commented deadcode

commit 0087aa1f16bb7f14432b3b227890b7855c2c711d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jul 4 13:01:49 2025 -0400

    don't access rtip before we make sure it's valid

commit cbee5d6a4a304c4a9fa1e86c73022ca6ad408c87
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jun 27 02:46:57 2025 -0400

    confirmed parallelism bug on rhel8 host with 48 cores.
    
    unit test catches the bug on the recursive case where 48*48 threads are created.  upon investigation, looks like there's either potential for book-keeping collision or thread id being out of expected bounds.  closing in on confirming the specific cause and fix needed.

commit df37ba52c76b40b52b82e7e69a985015faabe23f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jun 27 02:41:38 2025 -0400

    hlbvh work is merged and finally all validated

commit df04666717371c2252e640cec308b4e32d1bf677
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 26 13:31:25 2025 -0400

    Bump to latest bext SHA1

commit 7c4fd2a83f57cfcc82b37cd2757e6695d3522c66
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 26 10:35:47 2025 -0400

    Only do the stdfd management if we're not using TCL_CHAN

commit 44520009e7ab0d6db964228e15a54490d6ce0be2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jun 25 17:35:31 2025 -0400

    sync with header, add support for public domain

commit c2fbc35a5f41d4858e5d12b484cbaad245558cf4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jun 25 09:36:12 2025 -0400

    use rhel8 fix

commit 7d396c43e97fb54548e24131f683fa2491a33c68
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 24 10:03:19 2025 -0400

    Add TODO note to look at BoT subcommands for debugging

commit eacd570a94aa01b95a93b96f5d726a3ced81dc28
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 24 08:31:40 2025 -0400

    Add a few more missing doxygen entries

commit 34ed4d889dd81fc27aea31819403b4499f7b133f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 24 08:18:18 2025 -0400

    Add a commented out section demoing the local clone settings to gitconfig

commit 451338b768bf8e10988018b24714bbf25968edf6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jun 23 19:17:40 2025 -0400

    update assimp to not use ccache also, bext fa1149406792dce4c47d7603ed8d2cab1f177a25

commit 717118e3aa34565cc050dbf7e5bed9a6ac83ca1c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 23 12:09:04 2025 -0400

    Restore default value for mged_rel_tol
    
    Plotting after solid edit for rpc and rhc needs this value to be set or the
    "restored" wireframe ends up coarse until a zap and redraw is completed.
    
    Previous default was removed in e157a9e0a6, but the replacement of mged_rel_tol
    took place in dc2fbcaf6561 so that would have been where we lost the default
    global initialization.

commit d209c40ba0824ba93ee51afc52a7b34524909c53
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 23 11:36:12 2025 -0400

    Back out keypoint and label MGED changes
    
    Something isn't quite right about this logic - epa editing crashes,
    and user report indicates BoT editing keypoints weren't behaving.
    
    Reverts changes from around commits 50f9e29bc81e and 3d12a3452.

commit 257ab559a7c057240b38db52712bcf0947fe1aac
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 20 12:40:21 2025 -0400

    Add assignment for alpha value in BU_COLOR_INIT

commit 28374070115798c3889083037aeae3d0ccd80934
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 20 12:37:35 2025 -0400

    Now that we've got ged_init actually creating the view, we can simplify our setup elsewhere.

commit 1e8ac2aa6831d8596cbb24ca950cac8af33e4b9f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 20 12:14:29 2025 -0400

    Have ged_init create an initial bview
    
    Fixed the Archer issue that was causing it not to tolerate an initial ged_gvp
    being present.  This way we can always depend on ged_gvp being valid.

commit 53d977f196db6478634bf39426c4380e20f25fba
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 16:36:53 2025 -0400

    Various changes for doxygen.

commit 2eb54707b1b954fcbe76d92e5bcbd8a583071811
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 15:12:18 2025 -0400

    Update copyright

commit f7c762ed412e3bc055f84ba237c40642e7c6d407
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 11:39:14 2025 -0500

    Correct data being assigned to search callback (de52d5e58515563d)
    
    Hopefully we've got all the key commits - needs testing.  The idea is to roll
    back MGED for release to avoid problems introduced in editing with the newer
    code. Since we also capture functional and build fixes made after that point,
    we have to cherry-pick some changes and backport them.

commit 22dad69e4608849d67defe34d777a1d02df1631b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 13:55:29 2025 -0500

    Reapply mged quit cmd crash fix. (ed4b0588e9d9a)

commit 7f34b0756e0034e29e679b73921bbfd63ef063ce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 16:12:46 2025 -0400

    Need to pass ctp through be_s_trans call (9cf98f2d0373)
    
    If we don't do this, editing operations like translate crash due to not getting
    the state information passed through the callbacks.

commit 84a346cbf92e0ddd51aa06bba2c810394d91e753
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 11:22:07 2025 -0400

    Fix CLBK defines (from commit 2367c1c9f39269)

commit a580e0d60c15159069105c495dda8e63491e52d5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 11:20:55 2025 -0400

    Fix includes (from commit a5e5daf7e458d3cb)

commit a0e50a5be21adbd6fe8e599160e7d6bdebef5017
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 11:19:47 2025 -0400

    Fix includes
    
    This change more or less re-applies commit da4a8e11f3ed9d67d29 related to
    libged header externs.

commit af72449b766c0a3f4b19e8be79d60b593909736b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 11:00:21 2025 -0400

    Re-apply bu_editor related changes
    
    This re-applys the MGED changes related to using the new bu_editor
    API.
    
    Re-applys commits:
    
    be76b13b8159aa3f875038f21a892231db07e2bf
    26d24eba47c655f2453dca8d9fd33eb05d0cdc5f
    7fa42e8bb5587946be4387d225041e3735b71c62
    da26bcf4556a9e33628b34760fd93d42840f27fe

commit 33abe7c196d9b90ca82a62ca35e78aeffc1e8636
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 10:59:48 2025 -0400

    Re-apply MGED changes from ac6c6dd2b2
    
    Deprecated code removal.

commit fa815d00b2c725aaecc7e483401d78e0cb8d938a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 10:59:04 2025 -0400

    Re-apply "Shift view limit defines into bv/defines and rename"
    
    Re-apply MGED changes from commit 76802549f4dda43140de13db14c89fae5634c7c9
    to adapt to moving view size limit defines into libbv headers.

commit ce85a8839fe0f54543e70e84498ca863c0a82dc6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 10:58:32 2025 -0400

    Re-add drawable display list updates
    
    Re-add commits 6f97a7c68cb6babf93db6d6feb9c002d2d6d1520 and
    4e1448766b217574733693a9aca8f4370ad26a50 related to making
    the ged_drawable structs private.

commit 6449f8331358621fa78179a2316e31e24935d91b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 10:57:52 2025 -0400

    Fix what appears to be a copy/paste error from 1997
    
    Re-apply fix from commit ccd263a34cefb0e11a54593ff28919cb5cc109c4
    
    The if conditional here is checking X rather than Y - this doesn't fit the
    pattern of the other wrapping logic.  Digging back in the history, it appears
    to originate from a 1997 mode to f_knob() in SVN commit 14080 (Git SHA1
    b3fc3be99).
    
    The prior blame commit (SVN 12861, SHA1 e78e1b2252) does not seem to have an
    equivalent, and the commit that introduced it  does not mix X/Y/Z indices in
    any of the other wrapping checks.

commit 11a7e5b845192184adf3e0e87baef4c5a4b5da19
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 18 10:57:03 2025 -0400

    Back up MGED to commit 2a705a734c29502c1028

commit 9831cf6ef123e18ffdbe613393c8727ca75ac91f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 16 16:47:36 2025 -0400

    Make a note to try similarity meshing on PCA mesh data.

commit d67d4fafd5cc99fa0ccc104eb5662379a4fffb65
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jun 16 16:56:53 2025 -0400

    assetimport allegedly needs 3.22, so we need 3.22.  release was '21 so seemingly not a big deal to bump.

commit 5a309e13f921f85a601e10ffad536bd7df54f01a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 16 10:40:37 2025 -0400

    Remove db_cache_init - premature, may not be needed.  (Will do experiments in dbi2 branch.)

commit 79cd479270a6b94aa0e1e2b1cbef48ea941f31f6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 15:29:27 2025 -0400

    Correct expected FLAT search cnt

commit 554a93d62d6aacc6e5465654f19d7435f0f940c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 15:20:02 2025 -0400

    Add a way to get a bv_mesh_lod struct from the dbip LoD cache.

commit b47878d4225437f062ea1484573745887e98e309
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 13:59:26 2025 -0400

    From an API standpoint, name is more flexible than struct directory here - allows us to use update to clear the cache on a removed object we no longer have a valid dp for.

commit 764fac8c1d79b5619163333bbdd951d56edf0e8a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 13:25:13 2025 -0400

    Figuring out the limits of BoT hashing
    
    The necessity of tolerance clamping means we remain sensitive to "almost but
    not quite the same" points ending up getting clamped in opposite directions.
    That is in the nature of clamping - you have to have some decision criteria,
    and given enough inputs there will always be some cases that fall right on the
    line.
    
    What this means in practice is that bg_trimesh_hash can't be a full substitute
    for bg_trimesh_diff, but it does still do enough to be interesting.  It might
    be helpful, for example, to use to check if a BoT's data changed after an edit
    operation - it might bias in favor of "changed" in cases like rotation or
    translation but could still confirm unchanged if the original data is intact.
    
    In testing with PCA meshes on a large .g file, it was also able to identify
    about 80% of the matches the full bg_trimesh_diff check identified via matching
    hash values.  In principle we might be able to combine the non-matching hash
    values with additional info from bg_trimesh_diff results to do some intersting
    things, but for the moment we'll file that for future consideration.

commit 9f8e485fb03a359bd266f29839368539328c7756
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 11:06:32 2025 -0400

    Check diff results against hash results to identify disagreements for further study.

commit af071826700504ecd29794fb21237af0044e533c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 10:57:04 2025 -0400

    Clean up msg printing a little

commit ea6aaeb1a125051dfea40f5a36f96a0178dea303
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 10:41:37 2025 -0400

    If db_search is called with no paths and a DB_SEARCH_FLAT flag, have db_ls pull the list of everything.

commit b56e6e9b65d7b0cd3d10e41bd618115444437b90
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 10:29:27 2025 -0400

    Test out mesh hashing as a diff check

commit b65e998cedc0e5b966307a8f872409762c850544
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jun 13 08:34:46 2025 -0400

    Stash a demo of how to truncate float numbers
    
    May come in handy when trying to do a tolerance-based hash of mesh data, since
    for that to work (i.e. generate an identical hash for meshes that are only the
    same within tolerance) we'd need to clamp the number we're hashing to the data
    subset that is above the tolerance specified.

commit e505e9705730308e3f87d9b0dd924e3d0110faa7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 20:06:04 2025 -0400

    Add missing void

commit 259ae3c04b55556641b977bab3ca3c88ee060d01
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 17:09:04 2025 -0400

    Initialize, explicit void

commit 01d454276d2ebb794b6c9935cf913d34f6a8c910
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 17:05:45 2025 -0400

    Make sure we've got mesh_c

commit 620c073186f6a7869eb42885140314f1f791c8bd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 17:02:27 2025 -0400

    Start setting up logic for a dbip LoD cache
    
    Haven't tried triggering it yet, but getting the pieces in place to make this
    actually usable.  Once ready, it should replace ged_lod in libged.

commit f452e77ef111b85b2fef54d265ad850b39bf5351
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 15:36:41 2025 -0400

    Stub in a hidden internal struct for db_internal
    
    Not moving anything yet, but figuring out the pieces needed to establish a
    db_internal hidden struct.

commit 95d4ce4c284d71c3839a132c8979634bc30ef1fb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 14:17:02 2025 -0400

    Adjust scene_obj functab signature to use directory/db_i rather than rt_db_internal
    
    This is necessary to take advantage of cached data properly - by the time we
    have cracked the rt_db_internal, we have already had to hit the .g disk data
    and incur the memory penalty of loading all of the geometry information.  For
    large BoTs, we want to get things like bounding boxes and coarse approximation
    meshes without ever having to handle the full BoT at all (beyond the initial
    pass to cache the LoD data, of course.)  The LMDB cache lets us do that, but
    only if our processing flow allows us to completely avoid the rt_db_internal.
    
    The reason this is possible with the OBJ functab is the d_minor_type entry in
    the struct directory.  While we typically do OBJ lookups using ip->idb_type (or
    its expanded form ip->idb_minor_type) it is also possible to do lookups with
    the directory pointer itself.  I.e. OBJ[dp->d_minor_type] will also let us
    access the per-primitive methods the same way OBJ[ip->idb_minor_type] would.
    We can thus take advantage of this to provide a per-type method that does not
    necessarily require the caller to crack the rt_db_internal (although it will
    under the hood if that ends up being necessary.)
    
    This also means that the scene_obj method will need to be passed the data
    container holding any specialized cache data info that is not part of the
    struct directory entry.  Right now that's just a stub for the function
    definitions, but eventually it will most likely be a variation of the ged
    draw_update_data_t container under the hood.
    
    It might actually make more sense to associate the caches with the db_i struct,
    since that's what they actually correspond to - cached database instance data.
    If we go that route then we don't need a separate public cache struct at all...
    both ged_lod and the dbi state ged_cache should be subsumed under the db_i
    version, and will be accessible to the scene_obj method as part of dbip. It has
    the further appeal of allowing the librt database I/O routines to see to the
    clearing (and potentially the regeneration) of the cache data directly - that
    would avoid a whole host of possible "forgot to sync the cache" scenarios.
    
    Also document explicitly in a few places the expectation that
    dp->d_minor_type == ip->idb_minor_type.

commit 5278cc8f066e6bf1bf88ae4ca7312759037acb4f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 13:27:56 2025 -0400

    Break BoT plotting out into its own file

commit bdcfe25826197422e373c00858f11c1e75831655
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 12 11:35:03 2025 -0400

    Add a functab slot for populating scene object data.
    
    Haven't migrated the primitive specific functions like BoT yet, but this
    establishes a general API pattern for handling multiple modes via a primitive
    specific functab interface.
    
    It felt a little off having primitive specific logic for drawing in libged -
    hopefully this will give us a way to push the per-type details down to the
    primitive implementations.
    
    In support of this, the object point sampling routine got moved from libanalyze
    to librt (it is fundamental to the mode 5 drawing.)  For the moment the
    libanalyze version is deprecated rather than being removed outright.

commit 3ca2c45cdf12f553944ea9eb4b5da2125fb196ab
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 11 17:03:44 2025 -0400

    Adjust come comments, add some TODOs

commit 93ab4a4b9854668cbdf3f1aaf986823eecfd9771
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jun 11 16:48:49 2025 -0400

    Remove the bv_obj_settings container from bview
    
    Not really getting used, and doesn't fit well there conceptually.

commit 7501a5f7ae7ba241706bcf246f83d709e96ca1d0
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jun 10 17:10:47 2025 -0400

    bump up to 3211ee1861eb87231dcb790d0eeb4cfa2e120aa7 for rhel8 fix

commit 324406a7f0d11e21a977324fc17ad6d47b7e1adc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jun 5 16:58:05 2025 -0400

    List make_pkg.sh for CMake

commit 60cdeafc9ded9624f4fc0ee9b4a0209a134b822a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jun 4 18:52:14 2025 -0400

    restore make_pkg.sh for mac release

commit 2dfef62422427924657ae729953d447f4af9bff9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 3 14:55:55 2025 -0400

    Add lint solid raytrace checking to bot repair
    
    Ideally we don't want bot repair returning something that will fail a lint check,
    so add by default a step that throws those tests at the candidate BoT output.
    
    One downside to doing this is we lose repairs that DO produce a manifold, which
    may still work for facetize boolean evaluation even if they're not exactly what
    we want for solid raytracing purposes.  Hence we add a setting that will allow
    code to disable lint check.  This will let facetize proceed with repairs that
    would be rejected at the user level to prepare boolean inputs and allow the
    facetize process to continue.  There is no guarantee the final facetize output
    will always make lint happy, but that was true in any case.

commit ca1d5ae98c24bcc4a063ca5940cf473c760f6622
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 3 14:54:38 2025 -0400

    Allow remesh to run successfully
    
    Fix an output error, apply some settings.

commit 266fd30e14a56504f624fbb3a825528c58b30d26
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jun 3 08:42:16 2025 -0400

    Pull in crt change from https://github.com/malxau/yori upstream commit 431dc07 to disable memcpy optimizations

commit d343813824949c7a94e7bc6861db013520158530
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jun 3 02:02:57 2025 -0400

    pull the lief fix for linux gcc13

commit 9dc827499e52274ea3a605476a9246f589d6ee0f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed May 21 08:45:35 2025 -0400

    will need to rethink as wdb_ followed by db_ looks like api error.
    
    they're also not technically equivalent as a failed open results in a crash on null dereference, and was encountered unexpectedly.

commit fc9a3a0eb099f7c8bfcb10acd35294d7ec192743
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 2 16:28:31 2025 -0400

    Nix on the volume check - experimentation showed that the before calculation isn't reliable.

commit 10ecbc3273ca65d22a8eef7d46d3be765f21cca4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jun 2 14:41:29 2025 -0400

    Note work need to add BoT post-repair checks.

commit 2a211f65c54848a014fae88c70bdfadfc1baa239
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 29 13:52:17 2025 -0400

    Fix doxygen comment

commit e207ad1c714df9cf2d0add00c6586d01c171a443
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 29 10:41:14 2025 -0400

    Print info about how many BoTs ended up in groups.

commit efaee1b13d079b57efdcdcd3bef669017475d9f4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 29 09:58:01 2025 -0400

    Don't hit the disk for every BoT/BoT check
    
    It didn't matter much for the GenericTwin small case, but the grouping problem
    is fairly nasty when it comes to time complexity, assuming most geometry in a
    .g database is distinct.  As a database gets bigger, if we have no groups at
    all that can be defined we will have to check every object against every other
    object to prove there are no matches - the only efficiencies we can get are to
    not repeat an already performed check (e.g. if we've done A->B don't do the
    B->A comparison) and pulling any matches we DO find out of the active set
    (since we already have their group, there's no further need to check them.)
    
    However, the initial implementation left some I/O performance on the table we
    can recover.  Although it's true that in the worst case we might have to do PCA
    comparisons for everything against everything, in practice counts will almost
    always give us a negative answer immediately. There is no need to hit the disk
    over and over just to pull the vert and face counts from the BoT internal
    struts, since the memory overhead of storing just that data is basically
    insignificant.  Accordingly, just pull that data once up front for all objects
    and store it in maps.  Vastly speeds up runtimes on larger files needing lots
    and lots of comparisons, since the previous way was unnecessarily hitting the
    disk over and over.

commit 8d8aa4cebe38708edec7b8dbfe32ecd3cba36e1f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 29 09:40:08 2025 -0400

    Set up a test to find PCA BoT matches
    
    This logic tests out a scheme to use the PCA alignment of meshes in a .g file
    to identify meshes that are copies of the same geometry relocated in space.
    
    This is potentially useful in an "unpush" type scenario in that it would allow
    us to identify candidates that could be replaced with references to a single
    BoT and a matrix.  Less invasively, if this can be done fast enough it could
    serve as a pre-processing step for drawing codes that would allow for a single
    in-memory copy of the wireframe data that could be reused to draw all matching
    objects.

commit d43659b5c25983607063f91a32623b3a068d930c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 28 14:47:12 2025 -0400

    Make pca a libbg function, have BoT code use it.

commit be02dbc41c03e8712964a6442e8c02e6e112d9e6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 28 12:17:36 2025 -0400

    Rough in a principle component analysis subcommand for BoTs
    
    Principle Component Analysis (PCA) lets us take an input mesh (or really, any
    point set) and "fits" a coordinate system to the data such that the axis
    vectors of that system "line up" with the data.  The command will print out
    the calculate data for the mesh.
    
    If given an option for an object name, it will also produce a version of the
    input mesh that has its center at the the global model origin and rotate it
    according to the PCA - intuitively, it will be "lined up" with the global XYZ
    model space coordinate system.
    
    One potential application of this might be an "unpush-like" functionality for
    meshes which would allow us to compare and recognize when meshes are the same
    except for translations and rotations in model space.  The immediate motivator
    is testing to see if we could use this to help minimze the number of vlists we
    need to generate to represent solids - a view object could reference the
    at-the-origin aligned data and provide the inverse matrix to the one used here
    to restore the actual model position for drawing.  However, to catch such cases
    we might need to do a slightly fuzzy comparison of the mesh vertcies to allow
    for floating point drift due to the math operations involved in xpushing.

commit c1090376d51f44564e73e0c9244d9dce6de1af4e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 28 10:06:21 2025 -0400

    Point dev to actual geometry generation start point.
    
    At least at the moment, we don't seem to be reusing leaf node geometry for
    mulitple instances in the new drawing path.  One more thing to think about...

commit de2c0da2d4ac0c0693c73f2f8e95a6093d48a195
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 28 09:07:40 2025 -0400

    Add some mechanisms to manage child drawing
    
    These are inactive in current code, but the idea is to set things up to allow
    an rt_edit scene obj to have children inserted, and use the edit obj's settings
    to draw them without disturbing the state of the child objs.
    
    We won't be able to leave the original scene objs completely untouched, since
    the main drawing loop will still need to know not to draw objs currently being
    managed by the rt_edit scene obj, but this should help minimize the disruption.
    
    Need to also look into whether the logic in the new drawing path is reusing
    vlists for scene objs that are multiple instances of the same solid - if not,
    this mechanism or something like it will be needed there as well.

commit 2de42a215f540b881d49b1f7bfa0ff6f786bd8ed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue May 27 16:14:14 2025 -0400

    Add a TODO note to look at hiding librt only db_i elements

commit 58e1ceb8587c827bdc6222ce2935103e4f4d9146
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue May 27 13:42:45 2025 -0400

    Move the db open/create/close defines to db_instance.h
    
    They were in db_io.h, which is more or less reasonable, but since the idea
    isn't to create a raw db_i struct without using the open/create functions, and
    db_close does the destruction operation let's put these with the struct
    definition itself.
    
    Looking at db_i, it should have a private internal where the non-public aspects
    of the struct are stored.  Since we have open/create and close doing the work
    of setup and teardown anyway, that should be practical.

commit e09209d28e5f47b3795f9e501699c25ad9e6ea89
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue May 27 11:21:26 2025 -0400

    zero out capacity and items

commit 2bc7f3713cc09f498aec6d23ef34dc3bd8288155
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed May 21 08:42:20 2025 -0400

    adjust to not rely on libbu threading.
    
    if we're not using libbu, then bu_parallel_id() will be always zero and we'll get collisions.  instead utilize a C11 thread local data container, that way we're always collision-free.  this could still be improved (avoid dynamic allocation altogether), but should be a minimal adjustment step towards release testing if we can rely on the C11 construct.

commit 4ed69d75ef0c4465d52e28309c1e57e5df43389d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 16 10:51:28 2025 -0400

    Remove leftover comment from earlier comb_tess experiment.

commit d1dc6a4fae8af8544b4b53ee289c39c311064415
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 16 10:34:02 2025 -0400

    Take another stab at setting up an rt_comb_tess method
    
    Revisits the work from d6bb98eda833, but this time we use the comb_internal to
    hold the dbip and name rather than the higher level rt_db_internal structure.
    
    comb primitives have to know about dbip and their origin object name, but that
    is due to the specifics of how combs are defined rather than a general property
    of rt_db_internal entities.  Accordingly, make that awareness an "internal"
    detail of the comb definition.
    
    It doesn't get us away from the awkwardness that a comb rt_db_internal can't
    simply be used as-is with a different dbip (most other objects can do that) but
    that limitation is innate to how combs are defined.  This approach should let
    us make better use of the comb functab interface for methods beyond just import
    and export, while not disturbing the broader rt_db_internal ecosystem.
    
    Right now this is unused - should eventually replace the nmg boolean version of
    tess in the facetize command, but there are also other considerations for a
    general purpose comb facetizer to think about.  From an API perspective, we
    arguably could/should wrap the entirity of the facetize csg->bot/nmg logic
    under this call, but to fit it into this API we would need to solve the problem
    of converting NMG polygons to triangles, doing a Manifold boolean, and then
    simplifying the output triangles from Manifold back into NMG polygons to
    produce the expected result.  (Manifold is triangle only, and we know we need
    its robustness for boolean evaluation - if we can solve the problem of
    converting back from evaluation triangles to NMG polygons we can probably just
    remove nmg_boolean completely.)
    
    Manifold has some abilities to track things like face IDs that should be
    helpful - we could, for example, assign NMG ids and keep intact any NMG
    polygons that weren't involved with the boolean changes - but there is no
    question we would also have to solve re-creating NMG polygons from coplanar
    output triangles.  Even though the face ID abilities recently enhanced for
    Blender will help, there is no getting around that data structure translation.

commit b45c7dc9d281c1b4e8921a6f8256b75c2f46231c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 16 08:51:44 2025 -0400

    Eliminate internal ptr parameter - we're always passing in s->es_int

commit f21a4f6597a88f8b5c6f175cea86bd24ca194801
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 16 08:39:59 2025 -0400

    Untested, but stub in handlers for parameter specified matrix edits.

commit 228759556863b47bd04ffaf8788de928d0d6eead
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 16 08:27:11 2025 -0400

    Make it clearer that the matrix XY tra ops are in the view plane, but the non-uniform scale ops are defined in relation to the model coord system.

commit b5f436ce75ba2757b56fa43e031df3069f2bf702
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 16:11:18 2025 -0400

    Reject non-uniform scaling edit op requests for TOR

commit 190a5cfc19cb0773902a3b6755fb69a244595708
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 16:04:28 2025 -0400

    Add a TODO note for a lint capability to investigate

commit 9710ac0da372ab9cf23c58e4e40356426dbaae26
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 15:47:13 2025 -0400

    Stash a couple TODO notes

commit 6a8cbedff083f525712e15a804bf849935575906
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 15:08:22 2025 -0400

    Pull in latest librt_edit librt changes
    
    Aside from the removal of the PSCALE define, which we add in sedit.h, there
    shouldn't be any impact on MGED from these changes.
    
    Renamed private functions for brevity, set up the oedit matrix editing logic in
    functions.  Need to figure out if MGED exposes oed manipulations via the
    command line as well as the mouse...

commit 3d98651c057e39fee28c5ef93a5effd9c4c04e51
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 12:04:59 2025 -0400

    Clarify the material_name based warning in rtweight
    
    The previous message made it look as if there was an error in the pinewood
    rtweight calculation - the material_name attribute is set and there are no
    material objects in his database, which is what prompted the warning, but
    material_id is set and valid so the calculation can still proceed successfully.
    
    Adjusted the reporting to be conscious of whether we also have a material_id to
    use.  Since material_name IS set the user still needs to know we're not using
    it, but until material objects become more commonplace a more mild sounding
    note would seem to be in order.

commit 8eb60b19d5f3efe16d5867927480408bae0b1823
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 15 11:42:12 2025 -0400

    Add some more example density data to the misc file

commit 88302bb178a184b9877322551b141ff1625091d1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 12 14:48:14 2025 -0400

    Don't crash if we have an invalid path specifier
    
    Check that db_ls actually found something before proceeding.  Do a little more
    memory cleanup while we're at it.

commit cd2dc572cfbc1833a752f41a47ce54ad631e0108
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 12 09:07:52 2025 -0400

    Based on user feedback, make the standard attribute table in the search man page a little clearer.

commit 96f90e503754859fc9b0771b8e6f21973120a22a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 9 15:56:50 2025 -0400

    Wrap all the edit flag save/restore ops into functions.

commit 2a8011da3aeb96645126ba5041b0c9c33e78f0ad
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 9 15:23:42 2025 -0400

    Note something to test to see if it might help with problem brep triangulations.

commit 0a904b9d68c2bb557b428c845ce311c95e64b0ed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 9 11:10:30 2025 -0400

    Rename rt_solid_edit struct, various related renames
    
    If we're going to do oed style operations on comb instances this API will be
    more general than just solids, so rename accordingly.
    
    Also, since objedit (i.e. matrix edit) can be attempted on both solids and comb
    instances - and hence also operate on "solids" - refer to RT_SOLID_ defines as
    RT_PARAMS_ instead to emphasize that those code paths are updating
    rt_db_internal parameters rather than just the model_changes matrix.

commit 3a7c82f35d4c45adfe1fcce68c5abba710fffcb0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 9 09:45:07 2025 -0400

    Remove model2objview calc from librt edit code
    
    Studying this more confirms my initial impression that this likely doesn't make
    sense to do at this level.  Instead, try to explain what might drive the use of
    a model2objview style matix and document how to set it up in the header
    comments.
    
    Thinking about this, I'm starting to wonder if it might be possible and beneficial
    to apply a principle component analysis to meshes when they are first loaded and
    establish a database-level hash map of origin centered and PCA aligned meshes to
    try and spot xpushed meshes for drawing data reuse...

commit 3963ed9398eff19fe15f7be7c7369238609b3768
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 15:36:30 2025 -0400

    Still not sure if we want model2objview here, but if we do have it we need to init it to IDN.

commit 2e7770604bca5cd4db27432a72d4c4ab27d8d46b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 12:38:21 2025 -0400

    Pull in branch librt translate and scale editing funcs
    
    Not hooking these up to MGED in main, just minimizing the diff between main and
    the branch.

commit e7a35c874da40d4a12ac42c964d9aff00096e379
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 12:09:48 2025 -0400

    Back mged (more or less) up to de8716f88b
    
    Kept the c24d00d8 comment about how oedit data is applied and the local incr
    matrix from 9b36104ad but otherwise back up MGED to avoid using the librt
    functions for rot/tra/sca.  Will work in the branch to get a better sense of
    what those should look like to handle both sed and oed ops.

commit 9b36104ad78ffaab40f4b97a1cfb9f42ca76a63f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 09:36:45 2025 -0400

    Use local incr_changes in oedit_mouse
    
    This is the localized change I was after - this logic looks like it should be
    similar to other scale logic, so rework to get it a little closer.  The
    incr_changes matrix beings and ends life as an IDN matrix here, so a local matrix
    is equally viable as long as we reproduce setting incr_change to IDN.

commit 0352e5718f35a952c362ff2bad2394ce8046eedb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 09:20:12 2025 -0400

    Revert "Rather than using incr_change for the matrix math, use a local temp matrix."
    
    Need to check more carefully that an incr_change delta here isn't used elsewhere.
    
    This reverts commit 3dcab322873ec3ac77b4c39c15fa9b9207288539.

commit 3dcab322873ec3ac77b4c39c15fa9b9207288539
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 09:11:52 2025 -0400

    Rather than using incr_change for the matrix math, use a local temp matrix.

commit e37950bd5b549bda9078d63a3754ae7bd856a91d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed May 7 08:51:53 2025 -0400

    Missed a solid_edit var

commit 069136aca0a3f32956987793c90dd87324d27893
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue May 6 19:35:47 2025 -0400

    Invert solid flag, refer to matrix edit instead
    
    Rather than solid and object edit, at the API level it may be better to
    think about the two behaviors here as solid edit - i.e. modify primitive
    parameters - and matrix edit - apply the operation to the model_changes
    matrix rather than the primitive parameters themselves.
    
    MGED's objedit code is capable of editing both individual solids and
    comb instances (see mover.c)  In the former case, it simply applies the
    matrix directly in the final save-to-disk step (which may or may not
    succeed, depending on the primitive.)  Comb instances, of course, only
    support the matrix operations since they have no parameters to apply the
    matrix to.
    
    In theory, an xyz scale operation via solid edit or object edit ought to
    wind up producing the same result, and there may be other cases where
    the individual operations in isolation are the same, but there are
    definitely some operations that will only work as matrix edits and
    cannot be reliably assigned to all primitives - for example, an x-only
    scale on tor will not work.  Another consequence will be wireframes -
    solid editing the parameters will allow the generation of a new, data
    appropriate wireframe, but a matrix edit will only provide enough
    information for the application to distort the pre-existing wireframe
    generated from the original primitive.
    
    This may mean that capturing both matrix and solid operation logic for
    rot, tra and sca ops at the librt API level will be enough to give us
    what we need to express the MGED editing operations.  As MGED is
    currently implemented I think it would suffice, but a more consistent
    approach would be to have the matrix mode immediately attempt to update
    the rt_db_internal instance of the solid when a new matrix is written to
    model_changes.  Rather than manipulating the drawing of the scene solids
    in the application's refresh loop based on a flag, it would be better to
    have editing specific data associated with the edit object that could be
    manipulated at will - that would provide more flexibility.
    
    If the "solid" being edited is a comb or comb instance (neither of those
    - particularly the latter - is supported yet but we clearly will need
    to) that will always work as long as the matrix satisfies the general
    criteria for all BRL-CAD geometry matrices.  Updating the rt_db_internal
    for a comb would amount to applying the matrices to the comb child (or
    all children if we're editing a "whole" comb rather than an instance in
    its tree.  The child wireframes associated with the edit object created
    for the comb would then be altered the same way MGED uses
    new_edit_matrix and do_zoom to alter their scene appearance - since the
    matrix would never be written to the leaf solids in that case, there
    would be no strong motivation to regenerate the wireframes (and it
    wouldn't always be possible anyway.)
    
    On the other hand, a matrix application to a solid could be immediately
    tested.  If it would succeed, a new and improved wireframe could be
    generated, just like for solid edits.  If it would fail, we can (and
    probably should) reject the attempt to apply the matrix and report an
    error.
    
    Conceptually, that may eventually make a matrix edit just another
    category of input for an edit, along with e_mvalid and e_inpara...

commit c24d00d8d4888bd7ef394f685781664a5514cad7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue May 6 10:48:21 2025 -0400

    Explain a little about how oed scaling operations are being applied.

commit 634ea01ff0cc21c2c33b24deb05ae08ea0115a72
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 5 11:04:19 2025 -0400

    Consolidate sca knob editing code into chgview.c
    
    Also do a preliminary separation of input setup and execution calls.  This one
    is interesting in that it is the first blocker so far where the BE_O defines
    are active.  They are specific to object editing rather than solid editing, so
    they have not (as yet) been considered for the librt refactor.

commit c0619c57507c88cb167333f6e1fa4dc493783140
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 5 09:58:33 2025 -0400

    Stage edit_tran setup code in a function
    
    To push this one down to librt, we'll need to have the functab
    get_solid_keypoint replacement become live.  That is probably viable - it
    should be one of the safest code migrations - but need to check over the logic
    again so for now just get as close to a ready-to-move function as we can
    without making that switch.

commit f3a38316fe2ed2cafb020c1b90edd4fefc41a0ac
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 5 09:52:39 2025 -0400

    Use s_edit vars for units and view pointer

commit 5b8046e7e51686a4a83c9b373f24045b89c05f00
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon May 5 09:39:23 2025 -0400

    Set e_inpara in the lower level code
    
    Higher level code should only be doing things that are related to app state
    management.
    
    Eventually, once we have gotten the librt editing code to the point where it
    can replace sedit, rt_knob_edit_rot should probably take over doing the sedit
    call as well.  For now, however, since MGED still needs to do its own thing,
    rt_knob_edit_rot can only take care of input setup.

commit d53985c6f7eca764dfb09e882c4f141737c43c14
Author: Daniel Rossberg <33295041+drossberg@users.noreply.github.com>
Date:   Sat May 3 17:27:58 2025 +0200

    Match bext sha1 to latest main
    
    - build more static libraries
    - made lmdb static library usable

commit a0936a6fe7dd890e501439594b6230063d6fe72d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 2 16:07:27 2025 -0400

    Separate the setup and editing execution for edit rot
    
    That was more tangled than it appeared at first glance - separate out the
    mged_state aware parts of the rot matrix logic and the setup.
    
    This logic has setup for both sed and oed - still need to get a good handle on
    how the latter works and how it relates to the solid edit data structures.

commit de8716f88b559f4dbbde18aecd357440179585d1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri May 2 11:36:39 2025 -0400

    Remove unused function

commit 100dcd52084e8580e80561ea5e8d43218ccc6dc4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 15:58:20 2025 -0400

    Relocate rot/tra/sca edit functions to top of chgview.c
    
    Need to break these up into a form that is viable for relocation to librt -
    right now they incorporate MGED state awareness directly.

commit 75dfbaca985b8c272cd03655408d00fbea1f4fa8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 15:01:01 2025 -0400

    Separate edit and view knob logic more clearly.

commit aef8a26f13e2f005c547ab4dd6f4cb12232193fd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 14:51:01 2025 -0400

    Use the librt copy of the edit knob processing.

commit 091afba56bee3143ab064e61e52ceee82c76e385
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 11:47:30 2025 -0400

    Adjust edit_flag saving, use rt function
    
    If we're saving the edit_flag state, also save solid_edit_mode.  For the big
    mode switch table, wrap both solid and obj edit state saving in a function.

commit 36e3b84b5dfd19bf5eb0f789bc563f8f1432f77a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 10:06:35 2025 -0400

    Use s_edit edit_flag var, remove es_edflag global.

commit 170510c31fd9637a08961f2dc743fb4936c0932d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu May 1 08:48:29 2025 -0400

    Put main set_e_axes_pos logic in callback func
    
    More setting the stage for eventual librt editing.  Leaving the original
    function signature intact, just having it call the callback signature
    internally.

commit df985390a6f09622803fd2d64c069e575a330ab2
Author: FORCHA PEARL <forchapearl1@gmail.com>
Date:   Wed Apr 30 22:33:12 2025 +0100

     return success in ged_plot_core()

commit 49677443a3096eb507b49cf819e2fc3d58841b04
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 17:05:26 2025 -0400

    See if we can just use one var to indicate rot/tra/sca/pick mode

commit f731f8ca53f823c91cccd042faff35df64ad6f69
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 15:00:29 2025 -0400

    Replace MGED edit state struct with librt struct
    
    The librt structure is now defines a superset MGED's active editing varibales,
    modulo a couple things like the global MGED state variable.  Use that struct
    rather than the MGED version and put the few that aren't present there in
    mged_state.
    
    This again should amount to a rename, since we are still using one global copy
    of the struct for all operations, but it gets us closer to using transient edit
    states and having editing logic live in librt.

commit bde655a5372122fc73705841560b0c017d9d6a5c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 13:55:26 2025 -0400

    Add a librt function for processing of edit knob commands

commit 234649ae4973a71b28b6ab5f5ce1583f4a1982f4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 10:36:20 2025 -0400

    Use the knob reset function for the edit state knobs

commit 98d6436bf7c1082ffdae826fd632676a36d6c3c3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 10:09:37 2025 -0400

    Return after printing error message.

commit d095bdf56ee7bd2ca3b1b7d8210f52f8fc7cd4da
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 10:08:05 2025 -0400

    Remove unused global vars

commit ce6d914896e869f5266c85d5ea3771f10d32d88b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 10:02:47 2025 -0400

    Got bit by local definition - fix dozoom.c

commit 43a2713de18a944cd1db1f2c748c7be5333fb4d8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 09:31:28 2025 -0400

    Move most of the editing related globals to edit_state struct.

commit 2479b8bca597f1d38b0309d28a32448c0f5afda5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 08:16:23 2025 -0400

    Move update_views into mged_state struct

commit 310982977415363316104fac820e349c6f81e80e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 30 07:58:55 2025 -0400

    Sort CMake file lists

commit 9a2b5d5024feae68bc7d1fd80ae5c47b8b63f582
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 15:50:13 2025 -0400

    Move a few globals into the edit_state struct.

commit 97361e201c7f041aa52917fd6cfab96816121a20
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 15:02:41 2025 -0400

    Set up to use knobs struct in rt_solid_edit as well.

commit 90193fd99e987eadb7d245e31aa9f14e7445c786
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 11:07:39 2025 -0400

    Use a bview_knobs struct for the edit knobs logic.

commit 4b0dab1b7e78f355aaa184fb0b445b27803f92ad
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 28 12:56:31 2025 -0400

    Add an XY rotation test for tor editing.
    
    Phew.  Would have liked ft_edit_xy to be able to handle the setup for rotate as
    well as translate, but looking at what MGED has in place for rotation that's
    too heavy a lift - can't afford to dive into such a deep sinkhole and lose
    sight of the functab editing refactor.
    
    It looks as if at least some of the rotation modes and matricies probably back
    the full generalized power of the knob command, which (among other things)
    allows for continually spinning the model in X, Y and Z directions and has lots
    of modes for both edit and view manipulation, with edits often falling back to
    view manipulations when the MGED settings don't indicate a particular type of
    edit mode is active.  This logic is also senstivie to the "coords" setting,
    with different setup math in play for the matrices in reponse to the various
    settings.
    
    In the fullness of time this should all be boiled down to some sort of
    "rotation" module that can capture and apply the full capability of the knob
    command as an API, but that will have to be for another day.  Some of the more
    obscure/esoteric modes would have to be studied to determine what they even do,
    and decoding the various paths completely doesn't seem to be necessary for the
    "primitive specific editing to functab" migration task.  Since the rotation ops
    boil down in the end to a rotation flag being set and a matrix appliation, as
    long as we are able to prepare both e_inpara and non-e_inpara inputs that
    should (in theory) let us test the various paths of rt_solid_edit_generic_srot
    successfully without needing to go deeper.
    
    Note however that ft_edit_xy does remain unable to do the full setup for
    generic solid object rotations (as opposed to param specific cases).  For API
    cleanliness and completeness this should be revisited at some point.  The setup
    logic in this test for the final XY rotation is an extraction of ONE possible
    interpretation of XY deltas for rotation, but it is by no means the only
    answer.  Devs looking into the problem can't treat it as the "uniquely correct"
    way to interpret such mouse delta info, even if it should happen to match
    MGED's default behavior in testing.

commit d8ebd6711c7b3b486faeab436ad19e572d7500ac
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 10:09:52 2025 -0400

    Make knobs setup independent of view
    
    orig_pos doesn't seem to be tied closely to the knobs concept data wise,
    and setting it involves other bview data, so move it to the main struct.
    Likewise, have the knobs init function work just with the knobs data,
    and do other view manipulation elsewhere.

commit 1c97a34e95d687279703b93d66b1258819ff94db
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 09:18:01 2025 -0400

    Generalize bview knob stucture
    
    Although these additional entries are not used directly for view manipulation
    as such, they should provide enough generality to allow MGED's knob-based
    editing operations to also leverage this data structure.

commit 77231aef8a4fe5f7a4dbda4c0573dd0c275c31eb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 08:29:28 2025 -0400

    Make the bview knob struct entry names shorter
    
    Also make them a bit more generic, with an eye towards possibly reusing this
    struct for editing ops as well as view manipulation.

commit 7fd78908bcffaf01bd0745b05c006231d193b035
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 29 08:00:10 2025 -0400

    Missed a bit of the adc logic when relocating - thanks Chris

commit 1292fb97e80ec04511d542ac101f6356ffedadec
Author: FORCHA PEARL <forchapearl1@gmail.com>
Date:   Tue Apr 29 04:58:52 2025 +0100

    Fixed Unkown PLot error

commit 2f1393c6fb268c29a652ec293c39a5fd93033e53
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 28 16:22:28 2025 -0400

    Reduce the depth of the scroll display switch statement.

commit 5e08310bb5f7cdc7051371e2cf353fbbca989110
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 28 10:03:55 2025 -0400

    Separate sca edit op out of command processing
    
    Unlike tra and rot, which are executed at the end after accumulating the
    results of processing multiple commands, sca is always executed immediately.
    Not clear why, but to perserve existing behavior just add the sedit/oedit
    execution in the main arg loop immediately after the setup.
    
    This lets us set up edit cmd processing as a function whose sole job is to
    assign the inputs for edit operations for all three categories, ever if MGED's
    knob loop opts to handle them differently.  That in turn will let us push the
    edit command processing down to librt without the problem of MGED's sedit vs
    oedit state awareness when scaling.
    
    Note, however, that the librt push also implies the reworking of the MGED
    editing state being carried out in the librt_edit branch - therefore,
    subsequent work to create a librt version of this functionality will be carried
    out there.

commit fa626a621fb0106a93d401f8f0e3ae88a2bad1e9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 28 08:19:28 2025 -0400

    Start simplifying logic to disentangle editing
    
    As with the view logic, we need to collapse all the switch statements
    for increased readability.  The MGED state-specific conditional
    determinations we try to wrap into a single up-front test, so we can
    branch into either view or editing modes.  This is where the breakout of
    the bv_knobs command processing into per-command becomes critically
    important, because the MGED knob state awareness appears to be per
    arg/val pair, not global to all arguments to an individual knob command.
    (NOT something we will duplicate in the library versions, of course, but
    to preserve that behavior in MGED's version we need enough flexibility
    from the lower level functions to handle it.

commit ad41a86ad22e2e8a9c88eb660a155e73d624bcdc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 28 08:18:45 2025 -0400

    Make sure the view syncs with the db unit-wise before doing knob ops.

commit 643e8ebc9606fda01ba29df93cdade4f0b783445
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Apr 26 23:07:37 2025 -0400

    S case doesn't use ind, but we still need to pass validation.

commit e2883119dea559f12ad0f9a2fa104cd519e30429
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Apr 26 22:57:13 2025 -0400

    Make it clear what category is being reset, use bv_knobs prefix consistently.

commit 8ba358b5eb069bec81e84096bbe303a8da6063cd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:54:10 2025 -0400

    check for fpclassify

commit 88baf8cc04c593aaa06bb809d3f295d995f44da5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:46:03 2025 -0400

    use nextafter if we have it

commit 4b38dd985db3d6645919af17d6fa0f22e52fa018
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:43:54 2025 -0400

    set stage to use libm for the nextafters

commit 03effe70ba92f2a631575450d0957c631f28bbb6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:41:55 2025 -0400

    round three redux, should be zero-compare free again

commit a5846c7ca66a7a1389c2d2d5db75cd95be19e1fd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:37:59 2025 -0400

    before going down a lower-level route, see if fpclassify (c99) is portable enough for our needs

commit ff0684ffa7191f55cfd4f4a208379542fe4e011d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Apr 26 17:18:27 2025 -0400

    no reason these need to rely on FP_ZERO, just check if it's been precomputed.

commit 219076566ee3b9978767dc8a75d500acd9137f3f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 22:27:53 2025 -0400

    fix comment

commit 491095f3b06e5972c17fdb6719dbe782267e3ca5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 16:52:27 2025 -0400

    Wdocumentation tweaks for clang

commit ccd263a34cefb0e11a54593ff28919cb5cc109c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 15:22:09 2025 -0400

    Fix what appears to be a copy/paste error from 1997
    
    The if conditional here is checking X rather than Y - this doesn't fit the
    pattern of the other wrapping logic.  Digging back in the history, it appears
    to originate from a 1997 mode to f_knob() in SVN commit 14080 (Git SHA1
    b3fc3be99).
    
    The prior blame commit (SVN 12861, SHA1 e78e1b2252) does not seem to have an
    equivalent, and the commit that introduced it  does not mix X/Y/Z indices in
    any of the other wrapping checks.
    
    Noticed this while working to collapse the switch statements for chgview into
    more readable code.

commit bb90a248c8700d9ba56a394431b432493af1a94a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 15:10:41 2025 -0400

    OSX is saying there's no pushed diagnostic to pop...

commit caddf075af462da6b523daf40c8249aa64a3ea59
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 13:43:05 2025 -0400

    Temporarily re-enable the Wfloat-equal suppression to check CI compilation

commit b5756121547b4b84ca8f773e195add600a8db68a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 12:48:34 2025 -0400

    Push the rest of the bview knob math down into libbv.

commit eb4c3f73b0f29f43f83d255ace32601532b281b5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 12:23:17 2025 -0400

    Move per-command knob processing to libbv
    
    Studying MGED's f_knob, being able to reuse the logic for handling individual
    knob commands looks like it will be useful.  Moreover, there's no data
    dependency on libged for the core command processing, so it can be pushed down
    cleanly.
    
    Probably need to get knob_rot and knob_tran moved as well, but will do that in
    a separate commit.

commit e183a1c53077093fb4ddb6136b598890a83b46a8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 11:44:51 2025 -0400

    Break the per-command processing of view knob into a function.

commit 0e30d1230ebc0282b2b2463f6f34ee0a48a9eb58
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 11:41:10 2025 -0400

    We may have more than 6 args for some subcommands.

commit 4270c8abb70c19daa26e6071fa31da8d684a06e8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 11:14:04 2025 -0400

    Use bu_opt_fastf_t to read the numerical args of view knob

commit c8ebc503f0834df98b223478140d865420e8c90f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 25 11:04:32 2025 -0400

    Set the array X/Y/Z index up front to collapse some more switch statements.

commit 23721f27da3e5a7edbc0238528b562ba0ac2efef
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 24 16:18:22 2025 -0400

    Translate MGED's knob cmd (view portion) to libged
    
    The knob command in MGED appears to expose the most powerful view manipulation
    capabilities exposed anywhere in BRL-CAD's user tools.  It interleaves editing
    and view manipulations, requiring careful study to determine how to untangle
    those without changing functionality.
    
    The original code uses lots of switch statements for the various cases.  To
    reduce the verbosity and consolidate redundant calculation logic, the libged
    version of the code uses pointers to array entries rather than having
    individual x,y,z case logic.
    
    Although we're starting with the view manipulation logic, the main motivator
    here is to try and encapsulate the editing manipulation capabilities of knob in
    a way that will let us put them behind the librt editing interface.  The first
    unit test setup for editing with the tor primitive made it clear that we'll
    need to tackle knob if we want to properly expose all of MGED's editing power
    via the functab interface - the test was able to set up one of the XY
    manipulation cases (mouse input simulation) but there are a multitude of
    possibilities with knob and if we don't want to have to keep repeating the
    setup patterns of the initial test we'll need to get a handle on what an API
    for this capability should look like.
    
    For now, MGED's f_knob logic is unchanged - because it is so central to MGED's
    interactive interface behaviors, the plan is to only replace its core logic
    with libged or lower library functionality after the individual pieces have
    been tested in isolation.
    
    Because both "view knob" and MGED's "knob" command operate on a bview's knob
    data, they may both be used to interact with the same view.
    
    Note that we deliberately are not incorporting the MGED command's adc (angle
    distance cursor) features into this command.  The MGED version is calling other
    commands for adc features in any case, so the functionality is already exposed
    elsewhere.

commit 1c02e1f464aa3c9e41eeed5b8a792e01df87e5f1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 24 16:23:19 2025 -0400

    Don't call mged_svbase in MGED's view cmd wrapper
    
    mged_svbase always resets the absolution portion of the knob values, and we
    don't always or even usually want that for libged view commands.  Since we
    are reworking the knob values to be part of bview, individual libged commands
    can now reset them themselves if that is something they want to do.  Just
    add the part of the logic from mged_svbase we do want.
    
    Ran into this experimenting with a "view knob" command - doing this makes it
    impossible for that command to work as it should.  MGED's knob command runs
    without calling mged_svbase - to work the same way, "view knob" must also be
    able to do the same thing.

commit 21c09833c8d67d9cf0b1fa8af98258526a336cf7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 24 13:55:08 2025 -0400

    Have MGED use the bview knob struct to store its data
    
    This basically amounts to a relocation/rename, since the knob is controlling a
    view.  We check for a NULL view pointer in a few place where the pre-existing
    surrounding logic isn't already assuming that pointer is valid.

commit 71c1bf069b8c53c1d87287fc097cf20eabeca4a5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 24 12:38:26 2025 -0400

    Define knob data entries for struct bview
    
    Setting the stage to support a libged level knob command.

commit 21b903d87db0dc82068df807d312352fcdd29456
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 24 08:39:04 2025 -0400

    Remove unused struct variable

commit 09e285c32d09ebc664b33117b49c516a3e39c44c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 23 09:40:11 2025 -0400

    Remove src/other include callout

commit 612975c29c85316f23613517db2c866bed33a7eb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 15:02:01 2025 -0400

    don't forget to pull the pop as well.

commit d0dcf6356c198e2b5da46d5245ea8ab9552c6bed
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 14:58:44 2025 -0400

    Boolean evaluation on floats should also match exact zero.
    
    Should avoid needing to exclude any floating point comparison warnings.

commit afc2e61d8b34f167a0af0031139fb4b4179ce7d8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 22 14:17:42 2025 -0400

    Upstream pixcii released version 0.2.0 - update to match.

commit 04d8d658fac250cbe53fb6bc594412f616b97deb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 22 09:33:42 2025 -0400

    Adjust hits_da comment
    
    Was a little misleading, since the fact it was zeroed during prep (while true)
    doesn't have any functional relevance here - there is no reliance on the memory
    being zeroed.  Rather, we deliberately reuse memory here by overwriting new
    data and keeping a count of which entries are valid (for performance reasons.)

commit fc884767d6ac36d0fffd52cb13c2fe7b8ab98feb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 22 09:20:24 2025 -0400

    Try to disable -Wfloat-equal warning for ulp.c file
    
    Normally (on sufficiently modern GCC compilers) this code would trigger the
    -Wfloat-equal warning, but since that is the nature of the calculations being
    performed in this use case we need to locally suppress the warning.

commit 539415fc37d81aa3653e3ef1023101721de0c544
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 02:36:57 2025 -0400

    simplify, always return the distance (i.e., abs value)

commit dd6915417df5fdf1c70a4918a4a7543a012a8e41
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 02:16:53 2025 -0400

    include the header to export, fix bn_ulpf types

commit 1a44730a30eb5c7c92a6021b91058b246b0baddd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 02:08:26 2025 -0400

    switch to strictly using unions instead of casting to avoid undefined behavior for C.

commit 22d8b237e66897072daff263b4ab6e2115c906be
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 01:42:17 2025 -0400

    add implementations of bn_ulpf() as well as nextafter functions

commit 777d21c67578d05890ba9233aeccd3876a4a8a82
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 00:39:56 2025 -0400

    instead of a flat list, group them for readability

commit 0f92d93eed3e36248a0ca651c8ea4973317c5aa7
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Apr 22 00:36:06 2025 -0400

    stub initial public header for the ulp implementation (which also includes limit funcs)

commit 55cf41e0e331688e3d88fd31226a14c3758285b1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 18 21:14:24 2025 -0400

    common.h comes first

commit 251af4d7fcea2340890157e26695d3fdb5f01ba4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 18 17:29:19 2025 -0400

    Didn't end up using this - remove

commit d24e8c04b530f8d5bde2bd18ab1cb3a5f630f3cb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 18 17:27:54 2025 -0400

    List header for CMake

commit 4521975f3faa7fa5c1ae5855bd1bd637eddb83d1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 18 16:03:58 2025 -0400

    Add ability to generate ASCII art from images to libicv
    
    Incorporate a subset of the https://github.com/ashish0kumar/pixcii logic,
    adapted to libicv data types, to support producing ASCII art from images.
    
    Setting this up to set the stage for an experiment - whether or not dumping out
    ASCII art for failed image diffs in the libged drawing tests will give us
    enough info in the CI system logs to visually distinguish between "slightly
    different facetizations or grazing behaviors" and "major breakage".
    
    To test out the functionality, a small test program was written - the m35.png
    image in regress/icv can be used to kick the tires:
    
    Black and white:
    ./src/libicv/tests/icv_ascii -a 2 -b 2 ../brlcad/regress/icv/m35.png
    
    Color:
    ./src/libicv/tests/icv_ascii -a 2 -c -b 6 ../brlcad/regress/icv/m35.png

commit ddd9c2a5042297ce0544fb9e8d0fc93a5315150a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 18 10:11:03 2025 -0400

    Detect and return failure in "soft fail" draw tests
    
    If we're doing a "soft fail" for the image comparison in the drawing tests,
    provide an error return code.  This way we can collect the results and have
    the final overall return be success or failure.
    
    This, in turn, should let us do our actual tests in soft fail mode and let us
    see the full results in CI printing, rather than immediatly failing on just
    one.  Due to the nature of the drawing tests, if we need to be using
    approximate matching rather than hard comparisons and we tweak something we may
    need to adjust the threshold values.  Rather than forcing an iteration for each
    test, we want to run all the tests once to get a sense of the necessary
    changes.

commit dab5d977ca46b10984c77395aa4e63aef27b69e1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 17 15:36:01 2025 -0400

    We want to tie these two numbers together

commit 3dd7e16e837c5dcfcb2729d993da72da9f54dd60
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 17 13:20:47 2025 -0400

    Zero the count, since we're reusing the array
    
    This had a really weird test failure manifestation where the libged drawing
    test that tessellates moss.g failed its diff test.  Inspection showed that the
    LIGHT solid had been strangely tessellated, and further inspection led to the
    discovery that the "cleanup" pass had deemed most of the triangles in the mesh
    to be "thin".  That test is raytracing based, which made sense of the fact that
    the prior commit could impact facetization.  A lot of digging by myself and
    Sean determined that the prior memory allocation commit had also removed a
    counter zeroing that is necessary for the internal results array to be
    successfully reused.  For performance reasons the array is not zeroed out, so
    stale data made debugging "interesting".  Restored the zero assignment with a
    comment explaining the zero assignment is a functional necessity.

commit f34dd5fa6250f44e5b6b2e3cd0ebace01928e3ed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 17 13:15:59 2025 -0400

    Make sure we have cmd_out before we check its contents

commit 192dd314b4e08b033635672a27ef177a30d37716
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Apr 17 01:33:52 2025 -0400

    allocate the initial hit structs.
    
    we were reallocating an array of struct hits that were never allocated in the first place.   encountered crash during linux testing during DA_APPEND on the first realloc.  possible could still be something else, like thread_id collision on the hit_arrays_per_cpu, but that would be a caller mistake to correct.

commit 75e9452327d28a066282510047c6442c38fe5903
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 21:49:50 2025 -0400

    Remove unused define

commit 352d4262f7ff2c9fb0a4c9fe3246df0ae50ef22f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Apr 16 19:10:19 2025 -0400

    additional status printing

commit a09620e3eccf44e8510e0e72b41a5ebdc67c68b8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 15:35:52 2025 -0400

    Match bext sha1 to latest main

commit 417162d4219d0b1ec7be2f0a8eedcb9113b28d72
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 13:46:21 2025 -0400

    Correct target name

commit d7ba5c4966de3705b7f907f79e09a60eebef46b4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 12:41:07 2025 -0400

    Update bext to get Tk build adjustments.

commit 469fecc577aa50a9426706add93cf3a5f32ba8bc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 12:38:12 2025 -0400

    Assign folders to a few misc targets.

commit 51471f974df07834f724e706ca636fff9c1ed230
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 11:16:25 2025 -0400

    Try RC clearing with bext Tcl bld.

commit bbeb16aa25bf66d0b09a6c7f1e7ca85ac4fadb4b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 09:01:27 2025 -0400

    Update bext to get updated assimp/pugixml component deps.

commit e149f0103ced36e93b36c797a4dfa4c53170a529
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 16 08:50:47 2025 -0400

    Use ':' rather than ';' to delimit components

commit 4217071587aaa49ad09e58c677ca3a887754bc3b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 15 13:51:28 2025 -0400

    Update bext sha1 to ee06c9068bbe for Itk build fix

commit 5131bc9ecb3c42ab279255baa366ebe0a069b241
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 15 08:54:58 2025 -0400

    Update TODO entries

commit 58098a667cdd058291ca1b0e4a094873a02089f0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 15 08:25:53 2025 -0400

    I think we're not using the bext_output subdir anymore?  Don't seem to be using the bext from the separate setup step.

commit 403fcea64ac02477edb28178466a1dff62ea4e79
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Apr 14 10:22:16 2025 -0400

    More notes about header changes.

commit cc9625376bea4b76d0cf8a811ca635ba5085a931
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Apr 12 20:33:47 2025 -0400

    Remove configure compat script
    
    Removed most of the logic maintaining this about a year ago - clear out
    the script itself and update CHANGES.

commit ac6c6dd2b2d673906dfa84fdfc2e1ce65bf88691
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 11 23:21:15 2025 -0400

    Update CHANGES, remove some old deprecated code
    
    Yikes, been a while since I checked this list.  Add notes about globals
    removed.  Additionally, try to clean out some of the lower hanging fruit
    on the "deprecated" list.

commit 9a90cde487ef3984c0cd11e3dd82eca7b1b6768d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 11 21:54:25 2025 -0400

    Remove deprecated bu_brlcad_dir and bu_brlcad_root APIs - replaced by bu_dir.  Document global removals while we're at it, and mention Orca_hash_tbl.

commit d73ad6441fe5af01f66739bc53751c0af2e62b65
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 11 16:20:33 2025 -0400

    Remove more stray references to mintie and minpieces
    
    Obsolete with new BoT raytracing code.  There WAS still one place in librt
    referencing the LIBRT_BOT_MINTIE environment variable, but it was not being
    used in the traditional way - it was instead being used to allow overriding of
    the maximum number of primitives allowed in a node during the HLBVH
    acceleration structure building process.
    
    In normal usage this variable shouldn't be modified (couuld be just a
    debugging/tuning feature left from development) so rename it to be more
    descriptive of what it is actually being used for.  May remove it entirely
    later if there's no compelling motivation to allow user run-time tuning of that
    parameter.

commit c783484f9af979a2e71e59828da662df045125df
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Apr 11 15:59:55 2025 -0400

    Update nirt(n) man page to refer to nirt(1) man page
    
    Since we should be close to or at option parity now, DRY out the NIRT
    documentation a little by having the GED version reference the command line
    program's manual.
    
    We should probably update these to be just "GED" rather than "MGED" man pages,
    since tools like gsh and qged/arbalest (and for that matter Archer) are also
    using them - most of these are not *just* MGED commands anymore.

commit b0c6da74d2dc1a471b0ab579ffaeb4ede4d8d8f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 10 17:01:36 2025 -0400

    Update TODO

commit 49f58025fdf4dce49d723d953261962351d29ef0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 10 16:29:40 2025 -0400

    Relocate initialized librt globals to rt_init.cpp
    
    Daniel Roßberg's testing indicated we need to have the initialized librt
    globals in the same file with the initialization code to avoid a risk that
    linkers will cause problems and require us to manually initialize anyway.

commit 63d7d24f1ee6479495431e89a523d84540ff8774
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 10 14:42:22 2025 -0400

    Still want this regex

commit 6da7f1d335e7e8e614b18ba99664ba8e2ec3b3ce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 10 14:40:52 2025 -0400

    Revert "Put back the explicit rt_vlfree and rt_uniresource initializers"
    
    Daniel Roßberg did some testing and found a way to make this work - reverting
    the revert ahead of making the changes.
    
    This reverts commit 4cbc87cef69fab77bb24a72ed3d2b50e3d53d712.

commit c0763515971e325c3389a699a9f855dcc29c1ddc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 10 14:11:30 2025 -0400

    Don't try to prep an empty BoT
    
    With the new facetize logic sometimes returning empty BoT solids to indicate a
    CSG tree evaluated to an empty volume, we need to skip prepping if that solid
    is present in the CSG tree being raytraced.

commit ddce676719da6c81e90cdafd7e2c6f3eec9c8146
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 8 15:49:44 2025 -0400

    ged_exec needs its own copy of the argv
    
    Saw a problem with search -exec using the -F option to bot extrude

commit f3533ecad633f55649b769109fe26c4364951d5c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 8 10:16:16 2025 -0400

    Add libbg function to get trimesh area.

commit 44748e9eae50eda5da0cf1850dfc945acfaf5bbd
Author: Andrea Braghin <braghin.job@gmail.com>
Date:   Tue Apr 8 10:09:24 2025 +0200

    Correction of typos related to Element_Seatbelt

commit 4cbc87cef69fab77bb24a72ed3d2b50e3d53d712
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 3 16:43:25 2025 -0400

    Put back the explicit rt_vlfree and rt_uniresource initializers
    
    Per reports and discussion, rt_init.cpp isn't enough to always ensure these
    resources are set up correctly.  Aside from keeping the rt_init.cpp setup
    itself, this commit largely undoes the initialization removals from 3a68e6180
    and related commits.
    
    We also define convenience macros RT_VLFREE_INIT and RT_UNIRESOURCE_INIT while
    we're at it, so calling code has an easy way to both check if init is needed
    and perform it if it is.

commit cb4b62d0d409210f02382b038daa9d854db3db4e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 3 15:10:58 2025 -0400

    Note need to put back explicit inits

commit 754d9443a45d97e64a5a28639ea60e1c33f1aed1
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Apr 3 12:51:22 2025 -0400

    fastest rejection first

commit ef8371122c4343446641943101a64544faa0cc73
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Apr 3 12:39:38 2025 -0400

    add in a tolerance to bot shot hit detection
    
    toldist existed in previous bot_shot code and serves to improve hit
    detection.
    
    Improve on the calculation by using a ULP based tolerance, and further
    scale the tolerance using the ray+triangle orientation. This means
    parallel (grazing) rays get more tolerance while the more stable
    calculations of parallel intersection get a smaller tolerance to reduce
    false negatives.

commit 7a21493cbdcc7c284b9ea0f913c4bbe46891db31
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Apr 3 12:21:40 2025 -0400

    improve readability

commit cf7a457eb7aae1ca0cf6e4e7edc9d102fc7582d9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 3 11:14:18 2025 -0400

    Adjust TODO list

commit 115ff98da2f84aa8ff03a2d55493d843e8abb0ad
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Apr 3 10:48:38 2025 -0400

    Have gsh depend on ged plugins, not just dm plugins.

commit e9efe16166986c6cd154dfa87d8bd6fbe9244070
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Apr 2 16:07:16 2025 -0400

    Rework how nirt is plotting and sending commands.
    
    This addresses a number of issues.  The initial motivation was to allow for
    processing a large number of drawn objects by avoiding having to list them all
    on the command line.  In the process of reworking how data was being passed to
    nirt, the plotting logic was simplified by having nirt(1) generate a plot file
    as an optional output that can be read back in to provide the graphics.  This
    avoiding the need to shoot multiple rays in libged to collect different data
    types, as well as eliminating the textual post processing previously used to
    recover the data.
    
    Because option processing was modularized and reworked, it should now be
    possible for virtually all options that are supported by the command line
    nirt(1) command to also be used on the MGED command prompt.  It is not possible
    to specify an alternate .g file to use there, but the command line parsing of
    options is now shared by both nirt(1) and nirt(n).  If a -e option is detected
    then the default "s" command for ray shooting will be skipped, allowing users
    to customize what operations they want executed.
    
    The nirt command in MGED will now also respect the formatting specified by the
    qray command (fmt r, fmt p, etc.).  Previously it appears to have been using
    the default libged nirt formatting.  This means that any existing .mgedrc
    files (which may define other formatting) will now be active again - users
    may wish to clear any qray settings pertaining to formatting from their .mgedrc
    files to avoid unexpected output formatting changes.
    
    The arbs.g file is useful for testing plotting - for example, the following
    view settings will shoot down multiple arbs and trigger multiple plotting
    output behaviors:
    
    center -800 600 320
    ae 322 0

commit ac537c4d59a56a4dc590c76c8fd3afb1e6ff82c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 1 12:41:27 2025 -0400

    Add a flag for db_ls to permit returning of RT_DIR_PHONY_ADDR objects.

commit f643856a5e6c99da9e0fd25a4baf1feb650aa910
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Apr 1 12:39:39 2025 -0400

    Add a few more predefined bu_colors as well as a macro for comparing colors.

commit 1bf0b63cb81981cbc5728c500ec7d70be4a24110
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 28 13:28:37 2025 -0400

    For the moment, back out most of the nirt changes
    
    Leaving the removal of the "need to specify objs on command line" limitation
    but otherwise backing up - major work is going on in a branch that will change
    most of this code, and until that's ready we'll leave main in an unaltered
    state.

commit 4c4f83aa4180a88e48abc6bcd2164071df88c7a3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 28 13:03:50 2025 -0400

    Don't conflate sscanf return codes with func return code.

commit 15ecfed6ef86ba92d6c000817cacfbf07d4b157b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 27 10:51:51 2025 -0400

    Deprecate libged nirt trailing xyz center setting in favor of opt
    
    The abilty on the MGED command prompt to specify the x y z values of the center
    is different than the command line nirt, and potentially problematic if an
    object name should happen to be the same as a center point value (unlikely but
    certainly not impossible.)
    
    To replace the x y z syntax, we add an option to nirt to allow explicitly
    setting xyz via an option up front as well as listing the libged/MGED "nirt x y
    z" syntax for deprecation.

commit 9a7be331e553b2ae755bea8f4794e01165dd5086
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 27 09:29:35 2025 -0400

    Reduce scope of variables.

commit ed6c2ae74db24bf2deaa14a557cc26a2f8fe1ee2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 27 09:19:06 2025 -0400

    Localize variables, rename vls str, use bu_vls_cstr instead of bu_vls_addr

commit abaceb71292c324ae74e0db9279e70420f9324fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 27 09:06:19 2025 -0400

    Split the output aspects of the libged nirt command into a separate function.

commit 75311f194d13822db17a90f87cbc8ac54fbb4073
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 13:57:28 2025 -0400

    Use bu_ptbl_cat rather than manually iterating.

commit 2c038142d4478eb538e75e40100b8c78c859fafb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 13:52:21 2025 -0400

    Make ged_drawable and related struct types private

commit 4e1448766b217574733693a9aca8f4370ad26a50
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 11:41:37 2025 -0400

    Set up accessor functions for the drawable display list and clbk
    
    This is setting the stage for making ged_gdp private within libged.  Code
    outside of libged proper uses the display list and the notifier callback - if
    we make those settable and getable with accessor funcs, the rest of the struct
    (and its associated type structs) can become private.

commit 6f97a7c68cb6babf93db6d6feb9c002d2d6d1520
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 11:28:17 2025 -0400

    Add user pointer tbl to struct ged, remove rt_cmd entries from ged_drawables struct
    
    Looks like only two uses of the rt_cmd entries in the ged_drawables struct, and
    the entires have long been marked deprecated.  The preview command logic looks
    like it could stand some cleanup, but that's orthogonal to the focus right now
    so the idea is to preserve its existing behavior as-is, just without involving
    ged_drawable.
    
    This also adds a way to allow apps and commands to stash arbitrary data
    pointers in the ged struct.  Rather than an individual void pointer, which is
    more typically what we provide for this, use a bu_ptbl so apps can avoid the
    need to do their own packing and unpacking of multiple pointers.  struct ged is
    big anyway and is already set up and cleared by functions, so the
    flexibility/convenience benefit wins out over a single void pointer.

commit da4a8e11f3ed9d67d29a61fc18c46de40c566a14
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 09:54:13 2025 -0400

    Clean up libged header externs
    
    The switch to ged_exec ended up replacing a large chunk of what had
    been externed libged functions.  Scrub and simplify - consolidate
    the previously broken out view subfolder into view.h since there is
    now less to manage.

commit 7d33b4e5f6a019eb7425ded15dfdc7ae608374f6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 09:06:37 2025 -0400

    Update mouse-based query ray calls for new defaults.  Just nirt command - previous nirt output is being cleared anyway.

commit fa3a85fcf2b4e480a40bfdeb67bc77cf2a495388
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 26 08:51:00 2025 -0400

    Have nirt_opt_vals_reset also restore the int values to defaults.

commit 6f70aeb9db15584c5c375b21269b432d3ae668ee
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 25 15:55:55 2025 -0400

    Modularize NIRT option parsing
    
    Both MGED and the command line nirt program need to parse NIRT options.  The
    libged nirt command does some custom setup to both handle options specified by
    the app and prepare appropriate inputs to launch its own command line nirt(1)
    command.  The hope is that by making the primary nirt option parsing available
    as a library call, it will be easier to make the libged "pass through" more
    robust.
    
    The underlying motivation is a use case recently encountered with a very large
    number of objects drawn in an MGED scene via search -exec.  Attempting to run
    NIRT on such a scene will result in a very large argv command line being
    constructed for nirt(1) launching, which does not scale - particularly on
    Windows.  (We have had a similar problem with rt in the past when command lines
    got too long due to complex scene specification.)  Newer NIRT has the ability
    to accept "draw" commands to add new geometry objects, so we no longer need to
    specify them all on the command line, but to make that work we must also make
    sure we are constructing the appropriate inputs in libged.  If we can do option
    processing in libged the same way we do it in nirt(1) itself, that should
    (theoretically) let us handle things more cleanly at the libged layer as well
    (separating out scripts and actual command-line only options, for example.)

commit 095049cf4d69eed433d43155597297de642c41f0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 25 13:07:29 2025 -0400

    Remove requirement that command line nirt have objects listed
    
    Chris noticed that with the draw command in nirt, we don't actually *need* to
    specify objects up front - we can launch with just a .g file and specify
    objects to draw after the fact.

commit e9b40d270894ee7562641a6c92c696ecc8032c05
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 24 16:54:38 2025 -0400

    Add a version reporting feature to gsh

commit 9995d8f28632d222dc81b78390512c70e5e6d589
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 24 16:36:17 2025 -0400

    Remove some unused extern defines, rename internal ged database version function.

commit 3cb8d48915468efa86805464de60798a8708294e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 24 15:52:40 2025 -0400

    Define a search -exec callback function for gsh and register it.

commit cc9b551f83d44080638f256a1b4904756b73a293
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 24 10:33:47 2025 -0400

    Update all active MGED views, not just the current one.
    
    When mv_coords is assigned, it's treated as a global in MGED.  So if we want
    the view based value gv_coord to behave the same way, we need to update ALL the
    active view copies of it when the toplevel changes, not just the current view.

commit a0673db359073c85f6d22cc80f62645c500079cd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 24 10:22:29 2025 -0400

    Use gv_coord from the bview struct rather than the mged var
    
    The gv_coord variable is updated when "coords" is set in MGED (by copying the
    mv_coords value that is actually set from the Tcl command.)  To help make the
    rest of the MGED code a bit more generic (i.e. potentially easier to refactor)
    check the gv_coord value rather than mv_coords.

commit 22690121ea3c76b93a10fa73541e625c4f83dd89
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Mar 24 01:51:19 2025 -0400

    update to 90ea63597e529a03e05158ffcfbf0803591c87fa for more mac fixes

commit 71776518c542f3abe8aa283094d22d0d344d54b6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 15:44:16 2025 -0400

    Put MGED back in the 335aaf8bdd state from main so we can sync back.

commit 23f29ed8e60987adc7a22b31f99334c711a24101
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 14:12:56 2025 -0400

    Use a struct to hold saved flags for less verbosity.

commit 762dcafd7d5aee956baa3de7600a4b8f4e6e804b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 14:07:30 2025 -0400

    Use numbers based on MGED editing - in particular, set curr_e_axes_pos for trans.

commit a00508ae347d26813d49c713109b3496e46ff25b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 13:26:43 2025 -0400

    Still need to check values against main MGED, but get basic logic in place for tor xy testing.

commit 590d86ec835aae61f61467fab92d137ef0c5b52b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:01:44 2025 -0400

    Looks like we'll want to use one of the param ops for this.

commit 7d4ac2c83d5bb00aa62cfc596fa75657379e8331
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 15:58:36 2025 -0400

    Stub in entries for xy testing.  Still thinking about how to do this.

commit 88d5caa75349b2139ccee06b63490fb6646bf634
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 09:13:26 2025 -0400

    Add a couple tests with mv_context == 0
    
    MGED allows the user to explicitly disable this value, so we should make sure
    the tests touch those code paths.

commit 55123cf6c63159ff7d210ad1a555a38b77b89bff
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 08:48:22 2025 -0400

    Some of the rotate modes are also sensitive to view scale.  These now seem to line up with the MGED results.

commit 26f0da7bcd5b9db71f0d67bafb0a322672f71d85
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 16:58:43 2025 -0400

    Start working on matching the results to actual MGED edits
    
    Need to set up the view to match an MGED view for the view-sensitive edits.
    Use "set rotate_about" in MGED to v/m/e/k to trigger the various behaviors
    (default appears to be 'k'.)  Got 'v' case to align, but more work to do for
    the others.

commit 4cc8e11a6ea914321eaad874c55033bbec57d699
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 16:00:03 2025 -0400

    Set up paramaters to match those we get stepping through a tor edit in the GUI.

commit ba1cfe5c0597bdb169acbbd3fad1abdaf58cab7f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 13:47:30 2025 -0400

    Not sure numbers are right yet, but clearing acc_rot_sol gets us further.

commit 0cb2fa58b6f21ee552e45b1741756dcd57f28f19
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 13:09:28 2025 -0400

    More tests of tor editing.

commit dbd035d14fd0c1852620d3585e5a3cc133fb45e0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 12:28:04 2025 -0400

    Do more explicit initializations.

commit 8149a177b742042ba155f09f45e6ede8a7642090
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 09:17:38 2025 -0400

    Rather than require an on-disk input, use an inmem db for the edit test.

commit 83d1bd601a45b7404bd30d2331ebe82a50c0d139
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 12 15:41:52 2025 -0400

    Trigger tor edit operation from test.

commit 881ce10105b9488ea05ed0fcf1f2fb86b2b20c2b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 12 14:33:28 2025 -0400

    Start working on testing code for TOR editing.  Once patterns are established, will make it more general.

commit 23ee7449fb44c546b5745a34be057c756fe1bd93
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 15:13:01 2025 -0500

    Set up other primitive set_edit_mode functions
    
    In some cases the logic for the primitive calls the process function (equiv. to
    sedit) so we need to study in more detail why those calls are happening and
    what makes sense.

commit 2181ee7a0dda69f94bbb26bda99762c39333f47b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 14:23:47 2025 -0500

    Stash a note to study get, put and adjust.

commit ccddd6b09416e31863393a588e450d9a6a688de2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 10:53:24 2025 -0500

    Split out TOR ed setup logic.

commit 490fd85b666602ce759f54530fb661c4081b439a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 10:39:16 2025 -0500

    Stub in entry for edit mode setting method
    
    Right now, the way edit modes are selected for solid editing tends to be the
    faceplate GUI in MGED, which sets various values via its function callback.  To
    be able to test this without the GUI, we want a way to trigger that same logic
    without going through the MGED selection system.
    
    The most direct route looks like refactoring the logic of the *_ed() functions
    to be callable directly rather than only being exposed via the menu item static
    functions.

commit 6dd352ffe6d528b9523627f23f0f62bc1f77a698
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 09:23:48 2025 -0500

    Need to set the scale flag for other CSG param editing modes.

commit 471979674b38a5169fb13f50cab9b8b06f6fb0b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 08:58:12 2025 -0500

    Don't work with e_para unless that input type is specified.

commit 77be246968c5dc8393f854513342335b633f846f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 08:47:07 2025 -0500

    TOR - set scale flag, only check e_para if we've got that sort of input.

commit b450f70cdaa6e84158bcc7313f412dbeb0a86a09
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 08:26:25 2025 -0500

    Use the flag setting function for less verbosity.

commit a37fc9764b77cf4ecb92656f1e52b942da3d502a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 08:01:21 2025 -0500

    Eliminate PSCALE define in favor of SCALE
    
    With primitives handling edit_flag values directly, we don't need PSCALE at
    that level and for flag setting purpose PSCALE and SCALE are the same.

commit 86c205cb68b43439ae00799a0960bc232ef6d338
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 10 19:57:08 2025 -0500

    More adjustments to edit_xy functions
    
    Generic won't handle the PSCALE param, since that should be per
    primitive with the specific edit_flag values.
    
    Make a few other case adjustments to primitives with existing edit_xy
    functions.

commit 15b72a3b443d799649f08ffe8539fcba3fc40f15
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 15:40:41 2025 -0500

    Adjust edit_xy methods, add sedit equiv. call
    
    Ah, OK.  The edit_xy routines merely set the stage for the full-on
    processing edit call.  Initial breakout was slightly off the mark in
    that it was having the edit_xy calls try to do everything in certain
    cases and not calling the main routine from sedit_mouse, which is why
    most things weren't updating properly.
    
    Will need another pass to make sure all the equivalents are in place as
    compared to the big case table, but with this change setting the A
    parameter in cone.s in moss.g example is behaving much better.

commit 7f39cea1c7e7588c1a4a1b919739621e4337ec4c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 15:16:34 2025 -0500

    Only create a solid edit in init_sedit if we don't already have one.

commit 05c636e49bdd99ab64d5556412492ed3e6a69909
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 15:03:41 2025 -0500

    Whoops, want all the callbacks in sedit, not just the per-prim.

commit 9e8379bef06cb163a2fabf762a3bda28b84e4f66
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 14:49:41 2025 -0500

    Remove menu_cmd from the clbks

commit 90ee21aa877fc06699276a206b0b1b4e2151ead7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 14:44:49 2025 -0500

    Adjust switch logic - probably more to do here...

commit 85c66f76b1a49688b0101cec79461863e2cb5db0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 12:12:03 2025 -0500

    Use a define rather than a raw number

commit 2cca7c901e9e3757d6857f50b3ed847af0863540
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 11:45:32 2025 -0500

    Remove edit_menu in favor of edit_flag
    
    In the case of arb8, which has more complex/extensive use, make it an
    entry in the arb specific struct - otherwise, just use edit_flag.  In
    the case of PSCALE, this means rather than using a LIBRT level PSCALE
    define and edit_menu to get specific, the primitives take care of things
    on an individual basis.  The top level variable becomes only convenience
    for updating the flags.

commit 8955479f6a69c10dde0116349e3803ddca97a5cc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 19:23:27 2025 -0500

    Restore (in a branch) the in-progress MGED using librt editing
    
    OK, main has a version of MGED from before the code relocations started.
    We now make another branch to focus on shaking down MGED's editing
    capabilities with this new form of the edit code.
    
    Doing it this way so we (hopefully) wind up with fewer conflicts when
    rebasing and/or merging main - prior branch was getting a bit unwieldy.
    
    This reverts commit 187b138fd2f884392305491652f394d04281febc.

commit 335aaf8bdd167d7af08449a9d7862550a797b95c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 14:54:13 2025 -0400

    Reorder knob_tran and knob_rot, pass through pre-baked vars
    
    Simplify knob_tran and knob_rot conditional checks, since we
    have already done them in the f_knob function.

commit 84349dd5525cb22bf56991600649afcaaaebaff9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 14:47:03 2025 -0400

    Consolidate repeatedly used verbose conditionals for f_knob into variables.

commit c0f78684b107eab6a494e0431d1fb143a203f049
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 14:45:14 2025 -0400

    No need to pre-declare var names here.

commit 6cfba6d5b551784a0e44da7e1c239445e715c190
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 13:50:03 2025 -0400

    Set a variable up front to improve readability

commit 4b0ebde875e22c66444ed1e334ba700987efcac3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 13:15:53 2025 -0400

    Specify bext_output subdir in the initial setting of the BRLCAD_EXT_INSTALL_DIR path.

commit 594adbeb1ea9c2fa82ba1e83bdea9b50bde7d195
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 10:28:56 2025 -0400

    Update bext SHA1

commit b70472dee7af8a6fd4da198e07a37b1edcc33197
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 10:22:34 2025 -0400

    Update callback type to include struct region pointer
    
    The prior approach using the libbu standard callback type required that we pull
    the region pointer off the head list, which in turn required that the head list
    be stable until we were done with the callback.  While that woudl function, it
    expanded the length of time when an individual thread would be blocking.
    
    Instead, pass the specific region pointer of interest directly so we don't need
    to worry about looking it up.

commit 81f45916857e8e68c0117ad82ac1060b49a2cb3a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 09:38:42 2025 -0400

    Try a different approach to Orca_hash_tbl removal
    
    Rather than requiring the caller to dupliate the tree walk, supply a callback
    slot that gets passed the rtip and tsp.  The current region can be pulled off
    of the rtip list, since it was just inserted, and that lets the caller perform
    this (previously hard-coded operation) in the callback in the same way.
    
    This not only alleviates concerns about whether the second tree walk in the
    previous approach would behave the same way as the initial pass, but also
    greatly simplifying the code required from the user to implement the feature.

commit 9eb97223c651f3a26c00c45483e3487ed0d19e68
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 21 08:19:54 2025 -0400

    Revert Orca_hash_tbl removal
    
    Have an idea for another approach that won't depend on a second tree walk that
    matches the first exactly.
    
    This reverts commits 40c2b369d776fb0f87941743e5dca4331b85cd05,
    467df4df3552f7cd3343ceb5f8132dcc25ba2ca3 and
    856ab4718289065631c0753ce175da94a383d103.

commit 40c2b369d776fb0f87941743e5dca4331b85cd05
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 22:53:45 2025 -0400

    Note idea for a possible alternate approach to the inv matrix calc problem.

commit 931803312cd01609c0f168304c57c6a158f5f020
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 16:11:04 2025 -0400

    Remove IR_KNOBS and IR_BUTTONS ifdef codes

commit abdca2d6cfbb3a78180507f070f5c730b253f4fc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 20 11:53:02 2025 -0400

    msvc still throwing redefinition erros, probably a built-in, so conditionalize platform-specific until can find another solution

commit 76802549f4dda43140de13db14c89fae5634c7c9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:57:42 2025 -0400

    Shift view limit defines into bv/defines and rename
    
    Both libdm and libged use these, and previously we didn't have a good place to
    store them that both could access.  As a result, they got dupliated when the
    two were decoupled.  Now, however, we have libbv - that's a logical place to
    stash these and is used by both libdm and libged.

commit 8286b4609567a962eac61287b89c41da52650d5e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:26:47 2025 -0400

    Another INV define

commit 5ad18f48053979c99ca3dd3fb8fabbe8a6efec38
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:23:59 2025 -0400

    Rename _GED_MAX_LEVELS to _GED_TRACE_MAX_LEVELS
    
    Really looks like this define should be private, but it is in the ged/debug.h
    header so go ahead and add it to changes.

commit 0ed98a90d1716cce043844d3d10a33d33d27f500
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:17:56 2025 -0400

    More GED min/max definition consolidation.

commit 00e696a02848b4921572d41bf4b64b38ae00f3e6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:06:18 2025 -0400

    Consolidate defines for view

commit e4744c018ddb518adee091bff03d4d7c3cd92f11
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 20 09:03:43 2025 -0400

    Causes common.h:477: error: "alloca" redefined [-Werror] on Linux - see if we can just check for an existing definition.

commit ef429b9ee89dda166681dc0435f00dece53fb329
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 20 03:58:41 2025 -0400

    credit daniel and ali for their extensive work on LS-DYNA importer support for .k files

commit 45efec37c1eb9202991a8fb373ac7e6c3f90b0e5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 20 03:22:47 2025 -0400

    trivial workaround that gets system Eigen working on Mac.
    
    we don't use the old and discouraged alloca() interface, but Eigen can/does.  alas, isn't declarable in certain compilation modes due to declaration settings, so build fails on any use due to header/macro expansions.  this works around that and was tested to work using the k-g converter.

commit d4ae399249ccdeb576f38a3253c4c2146dd6899c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 20 02:02:43 2025 -0400

    if we ignore CRs, should avoid returning empty lines and stateful parsing issues.
    
    does mean that we're not text-file portable to ancient macs that only used carriage returns, but their existence is increasingly rare.

commit 41d6b2747388659c58794d8f8f090f78f1aae50e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 20 01:53:26 2025 -0400

    for portability, use std::endl instead of hardcoding a newline

commit 79c924891c78e24822c6f64552f6a6fb69fd4707
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 15:35:37 2025 -0400

    Relocate editit, use argv[0] ged_exec will recognize.

commit 0f016a96592e80c8229bcf88f7a5d4621d62ddfd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 13:54:23 2025 -0400

    Try to clear a few MSVC warnings.

commit b6db42b7e3f403171a1b9fd8d267f93cb6f77a09
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 13:03:34 2025 -0400

    Set up to check more than one terminal
    
    Note that any additions to this list should be check with edcodes/red commands
    in MGED to make sure they work as expected.

commit 0fcc635aa2d26a125774f165964a3c2905d99d38
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 12:41:15 2025 -0400

    Have gsh set up an editor for command usage

commit 7d0440a8a4c0302df3c9fc0559bdea575d0dbf10
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 12:36:19 2025 -0400

    Move MGED level editor setting logic to libged
    
    There is nothing specific to MGED in these functions, and they establish
    a general pattern for setting up editor inputs for GED commands that
    might be useful to other applications.

commit da26bcf4556a9e33628b34760fd93d42840f27fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 19 09:47:01 2025 -0400

    Use bu_ptbl to hold editor options from bu_editor
    
    Notepad++ proves we need more flexibility here, so use make bu_ptbl to
    make life simpler.  While we're at it, add a unit test to validate that
    we do get an option back for a lookup case where we know to expect one.

commit d5ede2c2451dfc023a18369bf6429fa797611afa
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Mar 19 03:21:28 2025 -0400

    get us past itk/itcl failure due to cached empty vars

commit 5b3861965f11976dcfa15cb10a557c37fff83154
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 17:16:03 2025 -0400

    Work on adding original librt decimate to bot decimate subcommand.

commit b1b70fe0ee3f84886949b28d88d3c8a09bbd1a97
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 17:15:14 2025 -0400

    Looks like we'll be needing multiple editor options for Notepad++ on Windows.

commit 7fa42e8bb5587946be4387d225041e3735b71c62
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 15:27:33 2025 -0400

    Work harder to use an env specified editor in MGED
    
    If environment variable specified editors are terminal editors, by
    default we were skipping them in graphical mode and moving on to GUI
    editors.  Since MGED tries to do terminal setup for launching such
    editors from a graphical environment, work harder to try and respect
    editor environment variable settings even if we're in graphical mode.

commit 26d24eba47c655f2453dca8d9fd33eb05d0cdc5f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 13:57:43 2025 -0400

    Have MGED editit commands used ged struct
    
    Avoid putting the paths through string packing and unpacking.  This may
    be all the uses of the -E options on these commands, in which case we
    could probably just remove those options from the commands and remove
    the editstring param completely from editit, but will go ahead and
    deprecate to be safe.

commit bb1033e922f70b10857217a35a78b39ee5c9fba5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 09:18:13 2025 -0400

    CreateProcess needs bu_vls_addr here.

commit 7022c98af9d73fd544eb2104f9fbd22e36973913
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 08:57:27 2025 -0400

    Start reworking editit to accept either an edit string or gedp data.

commit bbf021765fd584be8b12dbf4b35cad21202fef7e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 10:56:14 2025 -0400

    Remove redundant include

commit 411c1a606e8af3272d0c05a2958345c6f331045a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 10:39:23 2025 -0400

    Fix Windows testing for bu_editor

commit f394d10fbb83f2aaf42f78d682b3bfbf701a32dc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 14:12:17 2025 -0400

    Slot ged struct entries into editit logic.

commit a6850e8b2c50ca4eaecebc131fa2384ce0ab9e7c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 13:45:56 2025 -0400

    Rough in struct ged slots to hold editor info
    
    Need a way to manage this that doesn't involve constructing and chopping up
    strings.  In theory the terminal path will have the same weaknesses as the
    editor path, so we'll need the same mechanism for both.

commit 63d60cefa8a4b0152bf125ae1eb3d8aa2cd77af0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 13:29:28 2025 -0400

    Pass gedp to internal editit function
    
    Having to rely on string parsing for this is fragile and clunky.  Need to see
    if we can come up with something better to manage the necessary data.

commit be76b13b8159aa3f875038f21a892231db07e2bf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 13:19:44 2025 -0400

    Remove unused definitions

commit 9c8dbaec1a302f603188ed2d0ff5e26f0ae14f69
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Mar 18 10:26:15 2025 -0400

    Even non-space paths may change - need to match bu_editor processing.

commit d48bb84639659b510ecb33ee25ccb4a30259d409
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 13:14:58 2025 -0400

    If we have a path with a space, the EDITOR strequal check would be too strict on some platforms.

commit 036b70c7ba22e7953f815a70848e5999a13b2b70
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Mar 17 12:36:29 2025 -0400

    ignore anything top-level with build in the name to also catch specific build type dirs

commit 0a446629f70860bbb43f09f819e5e1dc049aed1a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Mar 17 11:56:04 2025 -0400

    leave a note about the openbsd implementation, but needs testing

commit 4d982aec3fb5c1fafdd50bba718a824a7290a312
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Mar 17 11:51:03 2025 -0400

    Revert "Stash url for glob.c implementation file."
    
    This reverts commit dbaa0f98461b48e4abc2cd3f4db1f81a2b137898.
    
    We intentionally did not expose more of the glob(3) API to not
    inherit legacy behavior, nor expose API unrelated to BU's file
    processing, nor expose API that is untested (particularly w.r.t.
    portability).

commit e2d3b3ea57425485617f6d8c0d7e1c2b63fba7d5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 11:42:35 2025 -0400

    Use the common.h define

commit 2f1d3bbbab210cf28b0033e04e36bbea8c019b85
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 11:21:30 2025 -0400

    Avoid (if possible) returning bu_editor paths with spaces on Windows
    
    The command evaluation path for various commands involves using
    bu_argv_from_string to create an argv from a programmatically generated string,
    and it turns out that means trying to use full paths to editors when the editor
    paths have spaces is Not Good.
    
    The better fix would be to change how editors and editor options are passed to
    libged, but there seem to be multiple commands with options that accept edit
    strings.  We'll have to look at where and how those are being used and possibly
    do some deprectations.

commit caad32cb5f3094920960ca89c0f8249cdc7bd971
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 09:34:07 2025 -0400

    Be more informative about what inputs CreateProcess saw.

commit 9cd29236a9eea89bccbd9f1fc3ebe12f8eb75dd3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 17 08:51:54 2025 -0400

    See if we can get some info if CreateProcess fails (untested)

commit c26837e645d49b94712d4ff608c9897f2c402156
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 16:51:25 2025 -0400

    Sean got these running on Windows in 7.38.0

commit dbaa0f98461b48e4abc2cd3f4db1f81a2b137898
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 15:02:28 2025 -0400

    Stash url for glob.c implementation file.

commit 6f7441bbffd52d0b5bb55f0b002228cfb3418b2e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 14:42:24 2025 -0400

    Try C extern for BU_SEM_DATETIME

commit 157e4cc81d49169cb7b453641f09446f3a27f005
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 11:44:03 2025 -0400

    Remove y2038 in favor of C++ date.h header
    
    Originally we included y2038 to make our code robust to the so-called "year
    2038 problem" - when Unix epoch time is stored as a 32 bit integer, it reaches
    its representatioal limit on January 19, 2038.  However, a better solution is
    now available - the C++11 standard introduced <chrono>, which does not suffer
    from this limitation.  If we can use <chrono> based solutions for timing needs
    internally, we avoid the limitations of structs like time_t.
    
    The date.h library (v3.0.3 from https://github.com/HowardHinnant/date is added
    in this commit) provides a convenient way to produce the ISO formatted output
    needed by bu_utctime.  This library (in slightly modified form) was the basis
    for expanded formatting support added to the C++20 standard.   While we are
    including date.h currently since BRL-CAD only requires C++17, once we
    eventually require the newer standard we can switch this functionlity to using
    the standard version instead.

commit 140f510f66ae42660a47c48d0c19aabf8b099020
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 10:35:52 2025 -0400

    Let's see if using the C++ standard APIs will fix bu_snooze.

commit fa4f25f080a5059c45a810edf44aedcd132ae3fd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 14 10:14:43 2025 -0400

    bext SHA1 handling has been improved.

commit cb373c2da4344e10f803e61903d2d9e8364e8d5c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 16:15:02 2025 -0400

    Don't unpack the input bot name until we need it.

commit 9cf98f2d0373934e699fdcffc1b7cd1ebd812d6e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Mar 13 16:12:46 2025 -0400

    Need to pass ctp through be_s_trans call

commit 6028895db93aee44a70f14ed0920f7139235a614
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 12 16:13:16 2025 -0400

    Forcing one config, we shouldn't (in theory) need CMAKE_CFG_INTDIR or $<CONFIG> anymore.

commit d9f593945644e53e6d2651a5afe913561da3f4b6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 12 09:47:50 2025 -0400

    Get closer to upstream cpp-linenoise
    
    We've still got history handling changes and win32 patches merged in, but
    upstream accepted the "make this a class" update so we can now be a lot closer
    to the upstream.

commit c8d4fc239e2110338e0455ede799964e133ab905
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Mar 12 08:42:32 2025 -0400

    typo

commit 9944ec589881417a03beb2d34b5dba140abece73
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 10 19:45:21 2025 -0400

    list asset file

commit 6ea6454f92c15c9ea0c04c91b80159a7aae21f41
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 10 16:21:43 2025 -0400

    uterm always equals uterm

commit 8ac6b3abf1fd7a9e4cce750f8ce0e7f4db66918d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 10 15:46:07 2025 -0400

    Minimize use of env vars for new cmd behavior.

commit dc99c84c4fc7b2e1cdcba29a341af77f37ee7c5e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 10 11:45:26 2025 -0400

    Document user request for arb validator
    
    Probably makes the most sense for lint and/or as a subcommand of an arb
    primitive command - need something to audit existing arbs looking for
    problematic definitions.

commit a1e824a6dba8d538939409f08d831577ba58a2d2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 7 15:17:59 2025 -0500

    Correct Geogram variable names for new find_package setup.

commit 27d7567e8a817cdb0c189df061571b976bd565bd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Mar 7 12:15:34 2025 -0500

    First rough cut at connecting Geogram remeshing code into BRL-CAD's bot remesh cmd.  Untested.

commit 73f363c4229b9e70f101d7cb4e57e5eb70872d6b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Mar 3 09:07:41 2025 -0500

    Start setting up to allow more than one remeshing option.

commit b2ed7fa040e967018f12e71fe26224db3514910e
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Wed Mar 5 11:29:18 2025 -0500

    Update view.xml note that faceplate subcommand not implemented
    
    The faceplate subcommand gets you some usage statements but doesn't seem to actually change anything on the graphic window. If it does work it needs more documentation because I couldn't figure it out.

commit ddc26d38b1c32c850231f37b272b1c20a26f7925
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Wed Mar 5 11:15:00 2025 -0500

    Update help.tcl typo (extra pipe in view help)

commit 27546f4a35bc66d120b60d9fe1dcc80a487e7c5f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Mar 4 04:41:33 2025 -0500

    make easier to jump right to bext hash

commit 55476737f677c1d3bfb8d2cce77fb7a8df602322
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Mar 4 04:34:21 2025 -0500

    update to f11907cb9d1e5894ee395d4d2b25820ecd1257ed with some more mac fixes

commit f11dc3d1334baf301b49ffead1d1d3ac49b9996d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Mar 4 02:43:31 2025 -0500

    Mac frameworks are apparently deprecated in cmake, so rip out the logic.
    
    long time since we built with system tcl/tk so will need to revisit the whole approach regardless.

commit 58f67099308a861349e762fb532be005e371d8d8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Mar 4 02:23:06 2025 -0500

    match project name in vars

commit 8ae4d10f9d0eee8c0117d1589a10de701be0ad8a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Mar 4 02:22:11 2025 -0500

    make Geogram match cmake's camelcase project name convention

commit ab195463c70695b87dec7353f41a4a042315b5ce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 28 17:04:21 2025 -0500

    Make a note to look into possibility of remeshing nasty plate mode inputs.

commit 66e2bcd2f03395d8c36c210ecc93c5aa565f04b8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 28 14:18:51 2025 -0500

    Fix option indexing.

commit a8b0d95d608fd3ab2194cfd8226d9d3098f72ac1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 28 13:52:04 2025 -0500

    Right - not persisting plate info, so we can't propagate those modes.

commit 472e70c3f7c438a545562afca6fe3b28e7b2f0f6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 28 13:19:50 2025 -0500

    Add an extremely basic vertex-snapping decimation routine
    
    Not really something ready to announce - more of an experiment to see how much
    vertex/thin triangle clearing is needed to avoid performance issues with some
    of the Generic Twin inputs in Manifold 3.0.

commit c735463d00c526ab9d87a405d6334661d224e28d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 27 16:06:52 2025 -0500

    Add support for bot dumping high precision floats
    
    Default to existing behavior, but for situations where we need high fidelity
    reproduction of the exact vertex values of BoTs add an option to support it.

commit 776a5f58a972f6db5e9927366dc594b43b403b1b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 27 09:38:51 2025 -0500

    Increment, then assign.

commit 790a0597b25c4619a3df2a6fe1f94ba59d0ffae8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 27 09:18:52 2025 -0500

    Add support for thickness manipulation/reporting to bot get/set
    
    We don't work with plate mode bot thicknesses much, but I hit a use case where
    I wanted it so go ahaed and add some basic support.  (The use case in question
    was taking a glb bot dump, importing it back into MGED, turning it from a
    surface to a plate mode bot, and then setting a thickness so we could try out
    bot extrude on the dumped and imported data.)

commit 2231e7d3261bafcd7b7351a21c466aab85776dd5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 27 08:22:11 2025 -0500

    Fix vertex data type - glTF only supports the FLOAT vertex coordinate type
    
    Welp. Tinygltf apparently implements a data type the standard doesn't actually
    call out - DOUBLE vertices aren't a standard type, so we can't just dump our
    vertex data straight into a glb/glTF file and have it work.
    
    That's a real shame, since it means a glTF export is inherently lossy for .g
    BoT data, but the standard is what it is - even if tinygltf based readers could
    support it, others (assimp being the observed case) don't support it.
    Accordingly, step the data down to floats when writing it out.

commit c21cb725d3b67361096b6b37118e5ebb608bc0fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 26 16:07:56 2025 -0500

    Stub in a placeholder for a thickness-setting subcommand in bot set.

commit 6b36bbe345750eba87cc2c967b9f372cfaed0c78
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 26 15:46:17 2025 -0500

    Apparently signed INTs make AssetImport sad.  Convert to unsigned.

commit 1d8684a7274014d4b41b5e4e30331abbbdcd1dea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 26 13:28:07 2025 -0500

    Enable basic glb/glTF output from bot dump
    
    Needs a lot more testing, but this allows us to generate basic glTF ascii and
    binary output from the arb4 bot test case.  So far only read with the updated
    gltf-g importer, so not sure if other tools can read it, but definite progress.

commit 50abaadc27271fd176c415dfbbd4e3602bedf029
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 26 13:21:34 2025 -0500

    Various improvements to the gltf-g importer
    
    Trying to test bot dump, this importer wasn't giving the expected results.
    Asset Import's export as glTF seems to be writing out a separate .bin file for
    the buffer, while the bot dump experiments are serializing it as part of the
    glTF file.  The latter apparently was problematic, and it looked as if the
    import using the .bin file wasn't quite right either.
    
    While I'm here, add some basic option handling - help, verbosity, etc.

commit 9fa0513774a5d6232c06937624c8389ff80907e1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 13:50:46 2025 -0500

    Make a note about the state of view obj writing
    
    Looks like this was specific to one particular use in Archer, rather than being
    a general export ability for view elements in a scene.  To do this "right" will
    take a lot more work, so for now just make a note.

commit f6ec25bec1ba3d5da816c663678a259329e095b8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Feb 26 02:03:00 2025 -0500

    extract variant from the invariant, pass the hash to brlcac_bext_init().

commit 72ed658ea716ba50a8ab44f1d389aaec93a27b90
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Feb 26 01:49:14 2025 -0500

    bump to b053baaf86fe80fbc06fd6106eae1a5532e1f9b9 for tcl and png changes

commit d37ce7aa8b721ea50f2432c5ed0e7e1091f0e516
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 13:27:38 2025 -0500

    Remove directory after bot tests are complete.

commit 007696383bbf00fa72f6ac586c9f34977c83f7fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 13:24:44 2025 -0500

    Enable running of the bot dump tests.

commit ba4a07266fc8ca17688a241062c3f16ab508784b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 11:22:47 2025 -0500

    Test writing out BoTs to a directory.

commit 888ae44ca5a570f02814dbeb3a52a5b61ad38092
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 10:34:41 2025 -0500

    Add test of -u bot dump option

commit 8b7d5362184890536a73a24f09abca786085f3b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 09:42:40 2025 -0500

    Add very basic bot dump regression testing
    
    Right now this is as simple as it gets - a single facetized arb4.  Control
    outputs are generated from BRL-CAD 7.40.2.  At this point we're not asserting
    that these outputs are necessarily correct, just that they're the same results
    we were getting previously.

commit 2d09986e6c353dbbe96eac4ab8bea062d30ed1fc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 08:37:48 2025 -0500

    Adjust bot repair purpose string.

commit 4d612f0729d2ae6776bc81dd146254f36823249a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 25 08:29:12 2025 -0500

    Add dump as a subcommand of bot
    
    While I'm at this, make the "dump" subcommand for "bot".  Previously the dump
    functionality was only available with the top level bot_dump command.

commit 90e13f26a034dba60d58da792f26cb52bf03cdcd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Feb 13 01:12:21 2025 -0500

    make the value bitwise unique since we're using them as bit flags

commit 221ffc6d11b6d08aea4aaa44086556969c0b9347
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Feb 13 01:07:38 2025 -0500

    fix what looks ike a copy-paste mistake from 7+ years ago.
    
    looks like the code doesn't rely on them being different since they're or'd together for their test, but still good idea to make them distinct.

commit 176bd53e4a8816787c2abaa71c06e7167854ab77
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Feb 12 02:58:22 2025 -0500

    useful for dimensioning if nirt had an option to report thickness through the surface hit point.

commit 27d6aeb1b7ae1359fcd1ed2f2d8280687fdb9f99
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 16:43:07 2025 -0500

    In directory mode we shouldn't be terminating fp.  Fix stl binary write check.

commit 29b16372c957f67f034116becfacca60e9be97b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 15:47:44 2025 -0500

    Fix usage line, initialize vars, require at least one arg.

commit ea1753055490532057571d73c6e30b7ac4dd57ea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 15:03:42 2025 -0500

    Initialize obj_materials_file

commit ed4b0588e9d9add384cfca582b8f55d3da222589
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 13:55:29 2025 -0500

    Reapply mged quit cmd crash fix.
    
    Fix from 0de845a6288 got reverted when the MGED code was backed up - reapply.

commit 6b13f92babc5832e3f90a61b961557353d3b051f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 13:48:09 2025 -0500

    Fix behavior of dbconcat when given '/' prefix.
    
    Older codes would treat "/" as indicating no prefix, but updated code ended up
    treating it as an active string and adding slashes to names (which is a Bad
    Idea).
    
    Catch this case in the new code and avoid the issue.  May actually want to do
    more sanity scrubbing on the input strings, but for the moment keep it simple.

commit fa64813907523a205d1ff9f704c6c921e7b8516e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 10:26:05 2025 -0500

    Collapse dbot into bot dump
    
    Not tested yet, but in prinicple this collapses dbot down to options on the
    main bot dump command.  Will need to go through and systematically check the
    refactored code to make sure it works.  Probably should set up some kind of
    basic regressions on this, since it is frequently used for fast BoT geometry
    extraction from .g files.

commit 4ba1745494f11dfd76fa48c30fce18e8bbdb33cd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 10:06:35 2025 -0500

    Relocate dbot functions

commit 13eeb92fb0236c441555334ef51dfd30baccd516
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 24 09:10:03 2025 -0500

    Remove src/bext submodule in favor of an explicitly stored SHA1
    
    Also, no longer deleting the cloned srcs and bext build from the BRL-CAD build
    dir unless an option enabling that is explicitly set.  We still need it for CI,
    since space is at a premium there and we need to clear the build outputs, but
    otherwise removing these makes it more difficult to debug any problems.

commit 3961763d4820687fe91a828b68dc051fcbbe70c2
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Feb 23 22:28:21 2025 +0100

    deleted changes related to format

commit 44b46d181425a6e675ce856b0c750d0b4c229816
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 21 15:46:07 2025 -0500

    Fold more dbot logic into per-format functions
    
    dbot has some OBJ specific additional logic - add it to the relevant OBJ
    functions.  Should be getting fairly close to being able to fold dbot into
    bot.

commit 370af2a2c609a253654d407adb731522a47c93b5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 21 14:44:32 2025 -0500

    Wrap more format specific logic into functions, use bu_opt.
    
    This almost certainly breaks various things, but we're moving this code towards
    being able to merge the bot and dbot variants.  Should eliminiate a lot of
    duplication.

commit 4645cfb591302bee4afc2225f01193307a3a797e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 21 10:38:08 2025 -0500

    Break data formats out into separate files and structs
    
    Grab the low hanging fruit of the per-format logic and relocate it to separate
    files.  We've still got a bunch of per-format case statements in the main
    bot_dump, but this makes it a little easer to deal with the logic.

commit f18af4199c2e9ec78bba454ff18a0d3f19854744
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 21 09:41:00 2025 -0500

    Break bot dump structs out into header.

commit a7b589ce1c43689aafee8f8c93f4059c94f29570
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 21 09:29:47 2025 -0500

    Quick and dirty de-globalization of bot_dump
    
    Since we already have a client data struct, just shove everything in there and
    fix the compile.  Some of these are clearly format specific, so we want to get
    more careful about organizing these, but this at least gets us passing them
    around.

commit 99bdc3cb5fd67658010ddbff0e1c629bee38a434
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 16:37:07 2025 -0500

    Make a note - next step is to get rid of these globals.

commit c554fa1e218b6df0b96aeace36b943ef65964e40
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 16:29:09 2025 -0500

    Have cache parallel prep test use parallel resources
    
    The new check against rt_uniresource being used in parallel prepping tripped up
    this test.  Actually use separate resources the way we're supposed to.

commit b46230dc28f48d92f55c0f1a721345a5d3c0f61c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 16:19:47 2025 -0500

    Try reorganizing bot_dump logic for clarity

commit be5bf4454d14228cde717d5082dfacfbf18c5952
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 15:18:44 2025 -0500

    Not using it yet, but stash work towards gltf/glb dumping.

commit 3a083828f601edcc3d756edaf2622cb328bb6205
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 15:16:14 2025 -0500

    Start working on figuring out bot_dump logic flow
    
    Feels like this could be cleaner, but need to properly understand how the
    various pathways differ.  Ideally would like to make it a bit more
    straightforward to add new formats.

commit 894502a6fa0070bf5081e01edb0eea653caeaf6b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 20 12:52:19 2025 -0500

    Note improvements we need to make to the build system.

commit ebfc144c0c71a71cfcf087996fab02d48160c47f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 19 18:52:27 2025 -0500

    Including rt_ecmds.h here causes dupliate defines

commit 11edd29f1a2c25bf132d193f1188ced154196626
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 19 16:26:15 2025 -0500

    Revert "Update code to use the Manifold 3.0 API"
    
    Looks like there's some more work to do before we're ready to make the 3.0
    Manifold jump.
    
    This reverts commit c38fd660352afe39e01a1dfa477c8c69c0373a9d
    and e4e3f0db4d0444fe535a4aba3d49441b64092c1e.

commit fd637656ef4a561aebc00d9181f9ff5182a6ced2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 19 11:49:50 2025 -0500

    This is an inmem dbip, so we're not looking for a DISK wdbp

commit c38fd660352afe39e01a1dfa477c8c69c0373a9d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 19 11:45:31 2025 -0500

    Update code to use the Manifold 3.0 API
    
    GLM has been swapped out for the public domain linalg.h math routines, and the
    mesh containers have been reworked.  Using the manifoldConfig.cmake targets as
    well.
    
    The largest select drawing test differences appear to be the facetized mesh
    interacting slightly differently with the LoD code.  One possibility is the use
    of the 64 bit mesh container has slightly altered where vertices end up, which
    may result in different clamping in the LoD scheme.  The meshes themselves test
    as a valid manifold.
    
    Note that at the moment this version has some regressions in boolean evaluation
    performance observed in the plate mode evaluation - GenericTwin mesh 7316.1.t0
    is one example.  Previous bot extrude timing was a little over 5 seconds to
    completion, but the current code is far slower.  One possibility is an internal
    change in Manifold to higher precision.  There is a new SetTolerance parameter
    which may be useful for this case, but as of now still digging into what needs
    to be done.  May need to back up to the previous version if we can't resolve
    this before release.

commit e4e3f0db4d0444fe535a4aba3d49441b64092c1e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Feb 13 11:56:26 2025 -0500

    update to ba8043ccdbe6973a536c6d2d3f13a72fde7433f6

commit 3d3e9ba95db212c2725d291e0202c5de9217dca1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 12 15:53:04 2025 -0500

    Make a note about what we'll eventually want for edit and why the librt edit API isn't intended to support it in the near term.

commit 052aad611ff227a09a7ef70ddecd64f9198555ab
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Feb 12 02:49:29 2025 -0500

    migrate docs to public interface header

commit 9c2d20f3ecebca92f7e22e24161b61dd60a6adea
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Feb 4 11:59:03 2025 -0500

    would be useful for gist and/or other tool to report on the max/min area possible

commit de52d5e58515563d6bef0368c6ae3c8afcefe36a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 11 11:39:14 2025 -0500

    Correct data being assigned to search callback
    
    Was originally passing in the Tcl interp, but we actually need the full
    mged_state.  Caught by the magic check, but only when a user triggered it -
    indicates we need a search -exec test case in the regression tests....

commit 2fd7c08f720f5a8f6c177d573c7a39081837eefb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 16:08:35 2025 -0500

    Add a check for parallel prepping with rt_uniresource
    
    This is an easy mistake to make, so let's check for it and be
    informative rather than traipsing into potential trouble.  Warn and
    error out of anyone's code tries to utilize rt_uniresource in a
    multithreaded context - it's not intended for that.  Per struct resource
    docs we need one resource per thread of execution, and accordingly
    rt_uniresource can only be good for single threaded applications.

commit 9a8648934d81da5e956561b6ccf7b2263ce071fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 00:09:51 2025 -0500

    missing headers

commit c5aa5fbca1d8926c11e573680551543252f1844d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Feb 7 00:07:14 2025 -0500

    Initialize

commit bb228a0b3a9c141f1c0af4b2a331ad6787f78a83
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 19:40:41 2025 -0500

    Fix various copyright dates

commit 187b138fd2f884392305491652f394d04281febc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 19:14:45 2025 -0500

    Back MGED up to commit 3998b4e108
    
    Quite a bit more work to be done to get editing working and tested with
    the refactor, so back things up to before the code moves began.
    
    Leaving the librt editing code in place, so we can merge back into main
    and then branch again to continue working with MGED and the librt code.
    This state of MGED doesn't use any of the librt editing APIs, so they'll
    be dormant until we get things properly retuned and tested.

commit 718666511209c6ff0f5384a8e2ef1d28bfe3a6b1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 13:10:35 2025 -0500

    Note that we're deliberatly not installing rt_ecmds.h yet.

commit c2ecc2af2b5bc05b9a5e65d68131211457ea7d99
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 12:55:27 2025 -0500

    Consolidate MENU_ and ECMD_ defines.
    
    If I'm following how this is used correctly, we don't really need
    separate MENU and ECMD defines - they can all be ECMD, and we just
    handle the flag logic setting for the various categories of command in
    the menu's edit function callback.

commit 1690470ab913afa9498a97cb59fe162471a50fe3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 11:42:46 2025 -0500

    Need to be able to reset menus - NULL is a valid input for mmenu_set.  Make sure the menus are reset after destroying s_edit.

commit aef25b4cb584b2aa9fa0a3d409af2e2dd6fff5f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 11:18:02 2025 -0500

    Only need to set up s_edit once per cycle.

commit dffd5f4f5e9ac272eafb8949fee7aa9e5b08dcef
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 11:17:45 2025 -0500

    Don't validate and process e_para unless we need to.

commit 95a840155830f40146e5c55efbdb12e14649d70d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 11:00:15 2025 -0500

    Initialize point labels array

commit 0164430f06249bc1ebae92e943bcd2ba394ab9b4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 10:47:25 2025 -0500

    Make sure s_edit is in place before doing matrix ops

commit a3abdc4c9e411b1a714baa2e620c126179fcade5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 10:28:50 2025 -0500

    First initialization is taken care of during rt_solid_edit_create

commit d8aece8d20e48e226352320aff77da664670a7db
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 09:14:49 2025 -0500

    Eliminate parameter from ft_edit

commit 5687597955b5e404bba184a4bd42666a671eb322
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Feb 6 08:59:07 2025 -0500

    Eliminate parameter from ft_edit_xy

commit a5e5daf7e458d3cbf00c1703f91cccfb60ad5f93
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 14:34:35 2025 -0500

    Move MGED solid editing logic to LIBRT
    
    Another major milestone - shift per-primitive editing logic from MGED down into
    librt proper.  At least on one Linux platform make check appears to pass, but
    beyond a couple things like the red regression that doesn't say too much about
    whether this refactor is functional.
    
    Next step will be to start systematically defining tests to exercise the
    various editing operations and get them working as intended.  Plan is to start
    with non-GUI testing and once that works check the behavior of MGED GUI
    testing.

commit ccc4a08e0516eab91923e097018c08d8e0c6d3cc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 11:27:30 2025 -0500

    Prefix all primitives files

commit 2f3938668f9dc51d891b7a47554596ed8390c18b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 11:24:22 2025 -0500

    Rename internal edit header

commit f608ded7716acbacdfb41317e5ac9c6ed29b4a0c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 11:10:19 2025 -0500

    Move some more edit logic to librt

commit 2cdcfbd53d8ee64880b9a97781236641d10a3d3a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 10:24:34 2025 -0500

    Make a separate edit.h header

commit ec511f552012a72231b6dbd4a392500439965b54
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 10:06:39 2025 -0500

    Migrate some of the edit logic to librt
    
    Having to stub in a couple things to make this incremental, but start working
    on moving the functional edit logic to librt proper.  We want unit tests for
    this that don't depend on MGED, so before defining them we want the logic in
    the lib context rather than the app context.

commit 222103ea2fed36850dd7b01c8d7cc012a2973305
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 09:44:46 2025 -0500

    Eliminate rt_solid_edit_clbk_get in favor of the map version, since we need the latter regardless.

commit ef645cc676d12a68c9df61c2919c0a8e77c53246
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 09:28:49 2025 -0500

    Move a few defines, eliminate use of CMD_BAD in primitives code.

commit 7d6c35e0f74307687b25001f03cf42e93e9a50fd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 09:04:52 2025 -0500

    Localize RT_Edit_Map_Internal definition

commit f7d165cf0bd15657eb54d3f0b15943e46401de9f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Feb 5 08:59:17 2025 -0500

    Add prefix to function name

commit b81c5b372d6ed4796fd9bf8b292a6c6bff11e30b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 17:02:07 2025 -0500

    Move rt_solid_edit and edit functab to librt headers
    
    Will need to separate out what can stay in an internal private rt_edit.h header
    and what needs to be visible to apps.  rt_solid_edit and the functab are the
    most obvious, so start there.

commit cc9ddb06f830733c5e3353cf7b2ebaddaf64ab32
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 16:56:34 2025 -0500

    Move prim specific editing struct to corresponding rt prim headers

commit 4b7e91fec2f25f050afcacfb3072978d3548a7b4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 16:34:15 2025 -0500

    Couple cleanups

commit b6b6bb0f983ca7bc59c6125fb32a4ceb6949c99a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 16:31:19 2025 -0500

    Fix name

commit b25517ecb69946bf300d147ba5949ec9439a290d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 16:28:04 2025 -0500

    Eliminate ARB8 globals, edbspline.h header

commit 1857da8b4ea28eb8af3911041409cb046ac89003
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 15:55:16 2025 -0500

    Update defines, remove ged header includes

commit 6b667c00f17e87f926aca30d81ef2e982a288284
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 15:29:29 2025 -0500

    Fix comment

commit 2367c1c9f3926944430d60c4a8ceb550897df842
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 15:16:48 2025 -0500

    CLBK defines will be useful in more than just libged - relocate next to bu_clbk_t

commit bac70a61ec248a77294eca55c3c5c9a3daae24e2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 14:58:12 2025 -0500

    Initialize

commit dfd934019dc7bd954e37b5a587c6cbb87f13900e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 14:55:41 2025 -0500

    Eliminate METABALL global variables

commit ffa6cc9f99bdd744289548b5de0bb03ac7d7abd5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 14:48:55 2025 -0500

    Eliminate BOT global variables

commit 0dfc63ff3a40f53fd1e658da2c82e713ad23e1da
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 13:16:25 2025 -0500

    Eliminate PIPE global variables

commit 06701f3df90089db2d9cb3531453c622ff483421
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 12:44:43 2025 -0500

    Fix function signature

commit fe2855e79bb807302fe5976b1e8e827c7ffe85b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 10:55:36 2025 -0500

    Add the resets for NMG variables.

commit 7cce33c67be341db9a08fab970eb96501d93f03d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 10:41:55 2025 -0500

    Stub in reset functab entry

commit 02796f406f4a9da32bc4e81051c1d63df5048161
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 10:34:30 2025 -0500

    Eliminate NMG global variables
    
    Looking like we may need a "reset" functab callback for cases where we want to
    reset internal vars but not completely delete the edit struct, but I'll do that
    in a separate commit.

commit 8adbe6b29c9ecb0d1988e5f9acc0d4daaa471eb9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 09:56:29 2025 -0500

    Eliminate ARS global variables.

commit 56dbb16f66122d7f8b332122b8079128799a4896
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Tue Feb 4 09:35:08 2025 -0500

    Update view.xml (missing the)
    
    minor fix to add "the" in under eye command to fix sentence

commit 4e3518313b5e83aef3a9f3dbd153cca84cec2f7c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 09:32:48 2025 -0500

    Place bspline specific globals in per-prim struct
    
    Had to alter a couple of the functab signatures, which is why other primitives'
    files also have changes.
    
    Not sure if we'll end up needing to expose this struct for applications to
    manipulate, so for now leaving it in the edbspline.h header, but ideally this
    should be private.

commit 79064fb0a35f2cf89e312f1bdde31520fc7dbb21
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Feb 4 08:55:46 2025 -0500

    submodule updated to ed8a0febc25f357cb07dbb091444f029f4cf5206

commit 4f46172bf5a1ddf5a5860157ceaebe348aedd9ef
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 08:50:50 2025 -0500

    Put in the prim specific create/destroy call

commit 1a7eca7977c2847f4c2545e9604c92306bfe6591
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Feb 4 08:34:15 2025 -0500

    update subproj to cef79c30221fb8dc8c860fe85247972fdaa08f01

commit ac72d366d6e9fdb95050e4b0efc4b2949044e078
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Feb 4 07:06:09 2025 -0500

    Update to try Tcl install with CMake script

commit c0c272c5fcd10dc787f7e9a1bfc28a8627030391
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 21:26:14 2025 -0500

    Fix edextrude callback logic

commit 4275ec9a18de6a86377b919f90198fa382ff2f2d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 20:46:59 2025 -0500

    Ah - already had ecmd_extrude_skt_name_clbk, just didn't fully remove get_sketch_name

commit f838ffb9d59c34c9486316beb5725828df03c74c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 17:21:21 2025 -0500

    TODO notes for next steps
    
    Got one more extern function that needs to be a callback, and then its time to
    tackle the primitive specific globals.

commit 00055dc887e7298c9aa720801516373d3374529d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 17:19:00 2025 -0500

    get_file_name pops up a dialog, so it needs to become a callback

commit 0e3fa75a28189b3a315222d5a4253a9d808a42f3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:51:38 2025 -0500

    Split out solid edit maps into separate file.

commit 6a36846ea22aff3edbd89e5dff89b8fdef9549fb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:38:19 2025 -0500

    Rename all mged_ prefixed names in primitives code

commit 33eaaa62a84e0128fbce08c43e47b296b1c77aea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:30:24 2025 -0500

    Remove mged from @file paths

commit 3242dcd6c3d032537be73e1f1e36e54c97ce500a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:28:49 2025 -0500

    Another milestone - all mged.h include removed from primitives.

commit 20f9bf9b1112c9c516c22b91ea776a3a689212c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:14:39 2025 -0500

    Remove mged.h from edarb includes

commit e314c11cffb20f46d2f597b3c0cdfee6bbe21711
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 16:04:58 2025 -0500

    More renaming to ID code that will be separated out of MGED.

commit f04739396476ba1e0101fc2733c6c62d12113c26
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 15:48:36 2025 -0500

    Move sedit.h defines needed by primitives, rename

commit e427f7a3c34de9b38c07424489abf8d91f5c49c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 15:12:52 2025 -0500

    mged_dm.h is no longer needed in the primitives code

commit e57ec4a20dc766a97b50320b81d8cdabb3d7809e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 15:10:52 2025 -0500

    Move and rename sedit function

commit ff80b31458b6b03fc48036ae91533a0597194991
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 15:01:10 2025 -0500

    Move rt_solid_edit struct

commit f3c95872a54826dc991c51ff509899277fbabb9f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 14:56:42 2025 -0500

    Rework callback code to better manage maps

commit f8d01e3c21efd48e97d3544ceb6cfcdd4d01b2d8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 12:45:09 2025 -0500

    mged_solid_edit -> rt_solid_edit

commit 58c0fa56d03ba5401bd545e622afef61d4eac26c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 12:40:55 2025 -0500

    Rename mged_functab.h to edfunctab.h, various other renamings
    
    Start renaming things to make it clearer which parts of the code are intended
    to eventually move out of MGED.

commit 25209e6187a08ed1f4f71eda8d33151dfb115f2d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 22:30:31 2025 -0500

    Set up s_edit before writing to it.

commit 4a87621aea0d2fcc7fd936038051dc28e476e2ff
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 16:51:59 2025 -0500

    Get MGED compiling using clbks for nmg and extrude
    
    Extrude in particular we will probably want to handle with an internal struct
    rather than a callback, but until we get the globals folded into editing
    internal structs we don't have a dbip for the lookup.
    
    Not ready for merging to main, but this removes explicit uses of Tcl* functions
    and mged_state from the primitives code.

commit 3f59f7954dbbe057d00760f67fdc43d9e9dcc6b4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 16:26:22 2025 -0500

    Use gv_rotate_about rather than mv_rotate_about - set.c seems to assign it when changed.

commit 9592cc82949a50a00e974b74a6648c3f605437c3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 16:19:45 2025 -0500

    Try setting up ECMD specific callbacks
    
    In principle these should allow us to pop up the Tcl/Tk editing dialogs without
    having to expose Tcl in the primitives code.

commit d7ff8d49ab10a6e8f275f56e1511160bc45746a5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 12:56:16 2025 -0500

    Try using ft_mat in the primitives code

commit 4e09f119536af7ef5dfaf56680172f1acc8b619c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 10:18:07 2025 -0500

    Try to move some of init_sedit into the create func
    
    To initialize per-ID-type data containers from the functab, we need to know our
    solid type during creation.  Basically, everything not using MGED state info
    should be moved into the create function.

commit 0ce4d70c4dfa8961f54dd6c9c43495a58e92facf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 09:36:23 2025 -0500

    Disable sedit_vpick for now.
    
    There is something really odd about how this is implemented - it is calling
    functions no other primitive calls.  Needs a revisit/rework.

commit 13495a324c34e7c5c51d35cffd26f4abe6e513f6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 09:35:08 2025 -0500

    Replace a couple more direct app state manipulations with callbacks.

commit ca23080941f8547ed9f3b2ad307abcb0f3216cb0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 08:40:04 2025 -0500

    Pass in vlfree list for plotting

commit 8430f229abb20708cf1fccee3a6209ab10719649
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 19:39:32 2025 -0500

    Need to look into transform_editing_solid uses

commit d8afbb26edef12254ec68f78a38ccd0cfb65cfdf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 19:32:08 2025 -0500

    Use log_str for message

commit c77545e5954b3c24c09c41872e412ba3cd77ba9c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 17:00:01 2025 -0500

    Work towards eliminating mged_state in primitives dir
    
    Not compiling yet, since there is a lot to do here and some corner cases to
    deal with, but checkpointing process towards pushing mged_state out of
    primitives directory.

commit aefdc9de207637816b89c398698ed978715a5a7a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 16:00:57 2025 -0500

    Add view update callback

commit c3122e85221cb37a8c41dff809a0cd59783698f3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 15:56:02 2025 -0500

    Inch closer to sedit using only mged_solid_edit

commit 98160e6cb8870913d1a33289fa4bbc09cf93b78b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 15:36:48 2025 -0500

    Make update_views non-global, copy to/from solid_edit
    
    We'll need this in the code that calls sedit within primitives, so get set up
    to pass it in and extract it back to mged_state.

commit 04c4f65084b0927817d0864c1aad517f5fb5b052
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 16:41:20 2025 -0500

    Work towards making sedit use mged_solid_state only.
    
    The update_views block needs another callback, but this gets us closer to being
    able to define sedit without mged_state.

commit 6342533c6b9aef4a409631d32e1580de7f863b74
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 15:45:14 2025 -0500

    Use callback for replot_editing_solid

commit f97dce3576ad4ef349e7ad7607c3af4337330991
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 15:16:13 2025 -0500

    Use callback for set_e_axes_pos

commit 05bfd3e414751c9e8d52d26e2a51abcbb3d6bdb5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 14:04:23 2025 -0500

    Set up function to sync callback maps

commit 31760504a5f744e64fce1cce7a204ae7db0b5bed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 11:51:05 2025 -0500

    Use callback for mged_print_result.

commit 847eece33ea018ca47e94c5ca40f17d9ce99d3b8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 16:01:28 2025 -0500

    Test having s_edit actually be transient
    
    Up until now all we've been doing is moving globals into structs and
    renaming, but this makes s_edit something that is created and destroyed
    when MGED enters and exits the sed and oed editing states.
    
    This will need a ton of testing - basically, any point that's going to
    edit an object in earnest will need to do the setup and tear-down for
    the mged_solid_edit state structure.  The "sed" and "oed" commands are
    the obvious entry points, and accept/reject the obvious exits, but there
    may be more than just those.
    
    This is one of the key changes that will be necessary for this logic to
    move to a library - we have to properly divorce ourselves from the
    persistent MGED global state.  Everything in primitives (except for the
    code still using Tcl directly) needs to try to move to taking a solid
    edit struct rather than mged_state itself.

commit 28797bb72e200c69428851bbddcbe1de946b4f44
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:43:57 2025 -0500

    guilty also, document this file.

commit 6416739aaea301e1d0ff54344fa5ab21cb72b0e3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:43:32 2025 -0500

    document some of these too

commit 3642b6e528e1de208b14f10a9454eaec47b9b890
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:42:48 2025 -0500

    fill out a brief description since it's public

commit 644ff7222e5f7ac9ed5a017d1ca5cd4f989ee426
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:41:26 2025 -0500

    keep the block but nix the comment

commit e446b6b8bb2b9b36786c0eb89846a3ddba8afa12
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:41:10 2025 -0500

    eliminate some unused doxy

commit 8832ec7fc90e826a4ebe1d547c59f797a47e54fe
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:37:08 2025 -0500

    add missing common.h

commit 8fffee823c4f6504427a7cd57c562dcfa452a25f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:29:49 2025 -0500

    too many instances of this not getting replaced, so default to nada.

commit 95776a5f505c94d8ffc3a81526ee3506f67465ed
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:24:34 2025 -0500

    pointless doxy

commit fb9cabe987f1ede5f1e4da299ecd6e8649636e12
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 18:23:50 2025 -0500

    revise text for brevity.
    
    completely forgot I'd investigated a solution to the Dll's living in the bin dir issue over a decade ago. need to revisit.

commit 754ea71e386ff885ff957b806641b26c7c7f9238
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Feb 3 00:22:43 2025 -0500

    putc->fputc

commit b918c701d4bbc9d0207b94284bd9b2b6f620f7f4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Feb 2 23:38:44 2025 -0500

    brep_translate_scv() doubly declared inconsistently, eliminate the local one

commit 501592c4a57e42fe26b603e422b35a42bcf22d48
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Feb 2 23:12:11 2025 -0500

    size_t print specifiers

commit 54ac8807ff8f72367dc35b9c9d62393b571e376b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 10:57:10 2025 -0500

    Use the define rather than a raw number
    
    Arguably this isn't strictly accurate, since libnmg I/O versioning isn't
    TECHNICALLY tied in a data sense to .g I/O versions, but functionally it should
    be fine and provides at least a little context.
    
    The broader problem here is needing to use versioned librt routines in an API
    that only really wants to be working with rt_db_internal structs.  Wondering if
    it wouldn't be cleaner to encode versioning of the idb_ptr data in the
    rt_db_internal container rather than needing to propagate the dbip for that...

commit 4d3de1e0d032d130ed286b11b67af99db8de1e6b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 10:39:46 2025 -0500

    Implement rt_nmg_mat using nmg I/O functions.
    
    Yikes.  Rather than try to untangle all the NMG matrix applications, just use
    the I/O routines in this particular case.  If we needed to do the former it
    would be technically *possible*, but at least for now that's more trouble than
    it's worth.

commit ab7929a1780f9dc13fc971fa62b7b4d2833f1424
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Feb 3 10:06:53 2025 -0500

    Try to isolate matrix application logic
    
    More or less able to ID the mat application logic, but in this form it's not
    ready to apply to a struct model input, which is what we'll get in most cases.

commit b139549567f86bbac152d6fd3c1ae0b7561962c9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Feb 2 22:19:19 2025 -0500

    disable warnings on shapelib sources, not ours to fix

commit d8c53d6aec398f8f58b9c53cbb2f9fb947db0ae3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Feb 1 23:29:21 2025 -0500

    add some I/O nullity protections

commit 0876097705380f223c9cc55cd80f77fd78a47d4b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Feb 1 02:23:43 2025 -0500

    stdout can technically be null, so check it

commit d2fd3b9c677439eabd4b1495db36b2a4574f3897
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Feb 1 02:09:11 2025 -0500

    convert putc() calls to fputc() for consistency.
    
    was almost an even split, but this homogenizes.

commit 0d1ead3f8b89edd417f46615431e24ec88a02b5e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Feb 1 01:27:28 2025 -0500

    pclose doesn't have any defined behavior on NULL, so protect against it

commit d32f7871212a1c25cd57d6947cb7f6ba8fbfdf1b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 12:20:18 2025 -0500

    Add DATUM mat application method

commit e537e6c5da12e6866b8f47b73eb46284e1cc4c75
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 12:10:13 2025 -0500

    Add HRT mat application method

commit 0e4eeab8371b9812072813b00da886e7f742decb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 12:05:46 2025 -0500

    Add ANNOT mat application method

commit 065bd5fd742f8cb255079bdd5738156475d4d375
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 12:01:22 2025 -0500

    Add REVOLVE mat application method

commit 79713e90cb58caff132baec76288ea687a9e094a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 11:49:32 2025 -0500

    rt_brep_mat needs to be C extern

commit 1d55fa358751bb391357de146c10b032245e99c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 11:46:58 2025 -0500

    Add HYP mat application method

commit df66e848938e12b37f3d6ff8e92b8dc46884bead
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 11:41:51 2025 -0500

    Add BREP mat application method

commit 9e9e7f748fcb7e50b9e80f41d5f944ac46b3c537
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 11:38:29 2025 -0500

    Add PNTS mat application method

commit 2de29b871ea732581348c366f6035b80665e17ff
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 11:12:54 2025 -0500

    Add METABALL mat application method

commit d1198a5ebd122a92e7258a63c93ab9720ece95da
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 10:56:07 2025 -0500

    Add SUPERELL mat application method

commit 6beb23a46ee21145a9b31f36bbc5cf373f860b62
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 10:49:22 2025 -0500

    Add COMB mat application method

commit 39222f8436b895a66494108bb88489f11c1c6180
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 10:01:23 2025 -0500

    Add BOT mat application method

commit 3673448e5772be9b18a66a868b5c48d3396b6a50
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 09:45:20 2025 -0500

    Add CLINE mat application method

commit 7fa5058e9a367ef932eb525809d968d94087c9d3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 09:41:16 2025 -0500

    Add SUBMODEL mat application method

commit b7337141c6fb5980b40d3fc4577d2d495a85882a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 09:38:28 2025 -0500

    Add EXTRUDE mat application method

commit 22abaa5e77abbaa7ede83c0949eb601f6dcec441
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 09:30:24 2025 -0500

    Add SKETCH mat application method

commit 9b501ffa7b84c43c5aafb2daa94640f8f47670d0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 31 09:12:02 2025 -0500

    Add DSP mat application method

commit 22cb6d5e7fc30f6c0c1293acc5b1c4c8c34714e6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 11:15:41 2025 -0500

    Add JOINT mat application method

commit dc050bade5afc466da65cdb30d3367c6dcd43f7a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 11:00:50 2025 -0500

    Add GRIP mat application method

commit cc54b8affc6f0ebcf430e2e19bfd37ccc9cc3a30
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:49:31 2025 -0500

    Add ETO mat application method

commit 5a81c548eaecab45545a26fb10e4ddef6378cc6a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:41:30 2025 -0500

    Add EHY mat application method

commit 291263e8136f467e0a1094bbfb7c716db821342a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:32:35 2025 -0500

    Add EPA mat application method

commit cf61a407c25c298f147ce60dc2dc9e636e29ead2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:21:50 2025 -0500

    Add RHC mat application method

commit c79a1dd27268d41abeb1bcb0821cd4b30691ad63
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:12:49 2025 -0500

    Add RPC mat application method

commit 6e21f515817f1541f10cca9c41b02a6121dcd9aa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 10:03:19 2025 -0500

    Add PART mat application method

commit 2ac06d0e0af92a59a27c4a45aed0cc9e857d5e17
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 09:39:59 2025 -0500

    Add PIPE mat application method

commit 5426a64cd98af5802eb2c75b7e80d304c97a7084
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 09:12:58 2025 -0500

    Add ARBN mat application method

commit d6759a684c464ba44c8e0391dbb9914ff96aa9eb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 30 08:59:08 2025 -0500

    Add VOL mat application method
    
    May have also fixed a double application of mat transforms introduced in SVN
    commit 77698.

commit e16d2df1a08e8f877dc71feb0f8b9afe61a29285
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 17:12:40 2025 -0500

    Add EBM mat application method

commit 5a8b7740de4714ed38228d96f3537b2c5d918615
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 16:55:29 2025 -0500

    Add HALF and BSPLINE mat methods

commit 70da07b7c95c8227f3892d2160b8f2e3393448f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 14:43:07 2025 -0500

    Split ARB and ARS mat applications into separate methods.

commit d5b2d021da82c76297e61ba67d94bc300b2d9da6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 14:17:50 2025 -0500

    Split TOR, TGC and ELL mat applications into separate methods.

commit dab4cc1543b2807ca5e71370d31ccc369717cb5f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 11:37:37 2025 -0500

    Stub in librt functab entries for primitive matrix application
    
    Right now, to apply a matrix to an internal representation of a solid we're
    going through the export5/import5 cycle - the import step is where the matrix
    gets applied.  That's fine if we're doing I/O, but for edit operations using
    that API means we need the dbip just to apply the matrix.  Most of the time
    that shouldn't be needed - rt_db_internals (with a few execptions like extrude)
    should be able to function independent of their parent database.
    
    Will need to be done carefully, but set up to explore if we can make the matrix
    application logic in the *import5 routines available as a direct stand-alone
    functab call.

commit 1036da14cefd6f1faf4f6554ebdd432125034c5e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 29 10:46:31 2025 -0500

    tol can be const here

commit ff79d923718cbb64d87929a0890d3d72e2463558
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 15:12:38 2025 -0500

    good grief, fix this little tool's memory management.
    
    was using malloc to allocate and bu_free to release, yikes.  switched to bu.

commit 72e47ed1d718d6361ce6676456c6f42cbfe207b5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 14:38:40 2025 -0500

    size_t ftw

commit 90f423b0757593275679796900403bb4a1d3e9f6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 14:36:28 2025 -0500

    more uintptr_t conversion

commit c96e6a018ad7f44b67f8c3904591c89a12794c33
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 14:20:36 2025 -0500

    avoid truncating sign bit to support 2x larger bots

commit faef072c44ea9a18e945aac44c501899fb15672b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 14:16:19 2025 -0500

    use uintptr_t instead of unsigned long. they're just for printing but potential truncation.

commit 11d03793854c159243d1ce7f7849ff0fc9ac5d21
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 14:06:31 2025 -0500

    PKC_ERROR is a pointer, casting to int is wrong because of truncation

commit cf4727dbd04758beff2714884416a3ea97feb8d2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 15:07:07 2025 -0500

    Don't use strp temp var - use e_keytag

commit 0b22181b9f8dd262ff698fa5a96ad4c032e8b205
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 12:02:29 2025 -0500

    don't think we want config_win.h to be in a subdir as it's in the same dir as brlcad_config.h, otherwise that will require two include dirs always be specified (on windows only)

commit 94aa5e18d61c804ff27add5dbf0af7d2ecc8f90f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 03:31:31 2025 -0500

    update filename header

commit 30dd994225b78d6ed8f7d4563f5ee96862e61bca
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 28 07:20:40 2025 -0500

    List file for CMake

commit e92d4e2e2578917531ab6f5150083a757282def8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 03:30:34 2025 -0500

    need some hash maps to collectively group atoms, so switch to c++ for an easier time

commit 1fdbe012bd423ec4f470066a87f7e1fefd278996
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 03:21:28 2025 -0500

    use more descriptive comb container name in prep for needing others

commit 8e558f4e5d30380b51d25921df5c65ef000796b3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 02:59:07 2025 -0500

    someone's already including it, but we use vls so make include explicit

commit aa6634382f48203af4ad81746a93655df7289408
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 28 02:58:24 2025 -0500

    save pdb header line as the title

commit a642c50a89cc6c926d71e64df4b303a7892b57ed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 14:32:47 2025 -0500

    Make get_solid_keypoint private to edsol
    
    Replace get_solid_keypoint call in primitives with direct method call, and put
    the expansion in chgview.c so we don't need to expose the function.  Should
    take a closer look at the chgview.c use later.

commit 761c5675d65be5f7d8b8a3128acc746c213601b5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 10:35:46 2025 -0500

    Use int pair for key

commit e111eeecbfa43aa53d51a4f190edb39e53b29d1b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 27 09:51:29 2025 -0500

    Start working on collecting ECMD defines
    
    For proper registration, we'll have to sort out the MENU_ defines as well -
    either collapse them into unique ECMD_ defines, or register a pair of integers
    as keys for callback lookups.  The latter is probably less invasive from a code
    change standpoint, but the former would be simpler in the long run...

commit a52e8cb47b01fa6f0bc95e3cde19b8ab27951e06
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Jan 27 08:41:02 2025 -0500

    BoT boundingbox fix
    
    this loop is calculating the bounds of triangles - not the rpp. The
    bounding box degen check should be (and is) done later bot.c:546

commit ebf539b59379bafb6d595749fc833ed9d24aac64
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 26 02:23:23 2025 -0500

    re-enable the version test.  needs a lib arg even if it doesn't need it.

commit 1028503c388556c7eb6ce5f955c6b96049ad94cb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 26 02:13:49 2025 -0500

    use av also

commit 96894082b8b4375e6def7cdbc8023db1d4d22605
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 26 01:36:12 2025 -0500

    update to a706f0f997f12eac1f4008a263f46351e1b0ae01 to get the mac build fix

commit 73623103a6313a30f5caf0168674179acc8ac7fd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Jan 25 23:47:17 2025 -0500

    do something basic with ac/av in lieu of suppressing

commit 9f5bc8944a7fc8404f2feb0bc3f084abf21ad48b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 24 17:03:58 2025 -0500

    need to optimize mged startup.
    
    knew we slowed down, but profiled more precisely how much.

commit 6747f6e5ca4193cf13ea108104b24088be652d42
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 24 00:09:34 2025 -0500

    only need to add a row if the modulo isn't zero

commit ec2e86d5e06c0723457ece1ef6f8f4129db598bd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Jan 25 23:40:47 2025 -0500

    add the most basic version number test.
    succeeds if it compiles, intentionally a compilation test.

commit 7b322cb498016d1b45fced46196af69c40d965c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 17:10:07 2025 -0500

    Stub in callback management functions
    
    To get Tcl out of the editing logic we'll need this almost immediately,
    and removing the "basic" Tcl use cases will help make the outliers
    easier to spot.

commit 9a2a8db6d1b6050172e40a08032da5e997fc3b90
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 15:24:38 2025 -0500

    Allocate the s_edit container, change references
    
    Preparing for when this container becomes something we create and
    destroy, store a pointer to an allocated version in mged_state rather
    than the struct itself.

commit 1bd9860605408df93a969ba667792c15dce165af
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 15:10:28 2025 -0500

    There will be some code that needs to migrate to create/destroy routines.

commit da79b2a6c82d0f03dc8d27db45074b4f3c002695
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 14:57:00 2025 -0500

    Add a data parameter to the menu_item function signature.

commit 44a7ccafaf62a123bf901b5defd84f7f8badb3f1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 12:58:35 2025 -0500

    Fix function signature

commit 26039640cdf3830219d45772e2e8f48825099a4d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 10:47:32 2025 -0500

    Start thinking about what editing callback would look like
    
    Looking at the MGED editing code, at least a few places are popping up
    dialogues asking for user input.  Setting aside the question of whether
    that's the best way to go about the interface design, the simplest way
    to rework the MGED code without changing too much user behavior would be
    to support doing that. It might potentially be a useful ability for
    other GUI applications as well (triggering events, for example.)
    
    The way the edit code is structured, operations end up having unique
    integers associated with them.  That could potentially allow us to
    register per-operation-specific callbacks.
    
    The code here roughs out some thoughts - no functionality, just making
    sure we can define some internal C++ containers in MGED (up until
    this point MGED has been C/Tcl only.)

commit ade65c82ca82b3c93176a91b2e33c1732b036ce3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 09:43:50 2025 -0500

    Pull gui dialog out of extrude code into function
    
    Still calling Tcl via the function, but this gets the direct usage of
    Tcl out of edextrude.c

commit b757f2e88aa0acef0c318a82ea6f38a3f393414c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 24 09:30:19 2025 -0500

    Replace Tcl_SetResult calls with log_str
    
    Looks like the main functional difference between Set and Append is to
    clear the pre-existing result str (if any) so we trunc the log_str
    before printing.
    
    Could use bu_vls_sprintf, but not 100% if blowing away existing log_str
    content is actually the right move here - using explicit trunc makes it
    a bit more obvious what is happening.

commit eb7db7ac9d94555ee7226914bf71fc7e11819ce2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 23 23:56:14 2025 -0500

    relying on globbing bad.  aggregate our actual list of tiles

commit e5ff5e419f093374d3a8907565990749a6552a09
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 23 23:04:44 2025 -0500

    print the list of g files before processing them

commit 2f4b2f705f4fc22ee6c908b33b63fd1dea7e5c8a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 23 22:49:02 2025 -0500

    allow overriding the variable settings via command-line

commit 05f3220c0ad61ffe33f0ed513cc807e14db33881
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 23 03:16:41 2025 -0500

    use tile.png as the default name

commit 6789e294f66f1b4e22317079c0879c9f34bbf8b1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 23 16:51:27 2025 -0500

    List misc/bugs/CMakeLists.txt for build

commit 47bf7c73839eac6793d486ef79017bee46c109c3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 23 16:48:15 2025 -0500

    Update baseline static analyzer bug count for v18
    
    Need to look at new items, but for now in order to catch issues being
    added in new code baseline on current code state.

commit ed3529d0c0fc36167fbbed7cde5f79601f12c3c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 23 16:46:48 2025 -0500

    Update clang tools and lcov logic

commit a4214e8fff2fc121d6d35311a215289360d6bb6a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 23 16:45:06 2025 -0500

    Add fprofile-update=atomic flag to lcov profile building
    
    Apparently we need this to get proper counts for lcov in some
    situations.

commit 1e163870473286f2079dea81055c271d8cbc0f16
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 22 13:26:17 2025 -0500

    Restore previous src/hdrs add_subdirectory order to fix BRLCAD_COMPONENTS
    
    The BRLCAD_COMPONENTS logic for building only subsets of BRL-CAD uses the
    target definitions in src to enable/disable install rules for per-library
    headers.  We need the lib targets defined before we define our header install
    rules, or we don't know which headers are needed and almost none of them get
    installed.

commit cc57bb82e020cf4290b2338ab3b613643fa1c605
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 22 10:33:18 2025 -0500

    Remove option to use OpenMesh decimator in bot subcmd
    
    This wasn't announced since it needed testing, fortunately. When it WAS tested
    it turns out the decimation results apparently aren't always properly manifold.
    For our use case that's Not Awesome, so we'll stick with the GCT version and
    let OpenMesh handle the subdivision logic (which also needs be checked for
    manifold preservation, but that's a separate issue...)

commit c25290f30a526060cf8f409ace56aa35560703f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 22 10:13:48 2025 -0500

    Address a couple clang static analyzer warnings in MGED
    
    Count jump looks like it is quite a bit more than can be accounted for by just
    MGED build.  Looking at the CI log, the install request was for clang 14 but
    the CMake configure is reporting clang 18.1.3. That'll do it...

commit 567651a0c4dfba5de67c48e6bc3e0e8cd564a9fc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 22 09:47:37 2025 -0500

    Revert "Back MGED up to 3998b4e108"
    
    Well, phooey.  Backing out the refactor is not enough to clear the static
    analyzer complaints - maybe it got a version update as well when the new CI
    image rolled out.  No point in the complexity of branching then - back out the
    reversion to look at what the errors are.
    
    This reverts commit 2a705a734c29502c10284e3ab424a1092a41886b.

commit bcd587da2cfe8ba514a95859135c7299f14f8235
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Jan 22 09:44:07 2025 -0500

    document 9dceba97f5, 1c2b06dc94

commit bbd01f07edbae5bd63243d4322d52ec3511da58a
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Jan 22 09:35:18 2025 -0500

    yank gdiam
    
    we already use GTE. Plus it's more stable than gdiam and has an active
    upstream

commit 1c2b06dc94aa4bdc8177f78892f35dacc01e63cc
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Jan 21 16:55:54 2025 -0500

    dont trust user to zero out return value
    
    function accumulates values to calculate volume. vol needs to be zero
    before using +=

commit 9dceba97f5796d633d9bebc3a60fe6e377d9bf00
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Jan 21 16:02:19 2025 -0500

    slot in GTE for our bot oriented bbox calculations

commit 005ac4c3db5d45e422b49f4566fdb67d7431db20
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 22 02:33:55 2025 -0500

    stub initial logic for known test failures (bugs).
    
    idea is to not add them to the main tests target, yet still use ctest definitions for them.  achieved using a external project that declares the tests, added to a custom target (bugs target in this case).
    
    this is intended for maintaining a running backlog of known bugs that we want to fix, yet are unable to for whatever reason / prioritization. this also lets us set up the conditions and/or inputs that reproduce the bug, which might be a good proving ground for getting them fixed.  potentially a resource for new contributors to learn as well.

commit 3073d567ea6f7a79c1e7fb63e5865c50e199c815
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 21 20:41:05 2025 -0500

    move verbose_add_subdirectory() function definition to BRLCAD_Util.  document global it relies on.

commit 1767ffeb60b3537489808943ca4691121b6341fc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 21 20:28:51 2025 -0500

    slightly reorder, group, and document rationale for adding the top-level subdirectories.
    
    also note a few of the exceptions that are included earlier just so there's a breadcrumb.  most of the dirs are order-independent which is great/best, but documenting might help avoid some surprises down the road.

commit 2a705a734c29502c10284e3ab424a1092a41886b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 21 19:53:32 2025 -0500

    Back MGED up to 3998b4e108
    
    Given how extensive the functab introduction is proving, should do it in
    a branch to avoid messing with static analysis and lcov results.

commit 4a283ee3fba47245edfae65beeb6cffa0bd4d69a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 21 16:32:46 2025 -0500

    Don't do find_package_tcl if Tcl is disabled.

commit 53eaf55f8103a80ef8824dbc6206f22c9adad91d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 21 02:32:47 2025 -0500

    add automatic size adjustment based on tile size and desired number of tiles per row

commit 6116ed4f22b2561f69030887ff0234e4ea65125a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 21 01:53:42 2025 -0500

    templatize

commit f5af8c6fa54044cab190da53432306f6db8aed7a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 21 01:29:15 2025 -0500

    script for auto tiling previews of a folder full of .g files.
    
    demonstrates three concepts: 1) using -l3 lighting model, 2) using pixtile to grid renderings together, and 3) one idea for automatic default render object selection (based on naming).

commit 39a3ad43d5674c288897142bc0eda27f1d6425ac
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 20 01:31:54 2025 -0500

    minor cleanup.
    
    couldn't find any reference to NOERROR_FLAG_* so removed it as the only inlined logic that ran on include (except for define_property()).  moved the search for astyle into the function too so it's not auto-run as well.  space out the rest for readability.

commit f29366f850b25d0dce640cded196b916b9e5951e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 20 01:02:12 2025 -0500

    more wordy reduction.
    
    reduce to less than half, and still essentially saying the same.  did reduce zlib mentions since that's handled a bit differently for a while now.  81 to 34 lines.

commit b82343a35533f6984bafa9983fa9e19d7b49ebdc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 19 23:20:42 2025 -0500

    cut verbosity in half, should say same as before

commit e2fb8bdd3204239f4abda3e7624f33da012bf21a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 19 21:58:40 2025 -0500

    update the reference pix now that rtwizard defaults to 12 opacity for ghost images

commit d606bbbaf6273b36f780d45cc73b0790a1ca0dee
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 17 08:11:39 2025 -0500

    Update analysis workflow apt get as well.

commit 0d38ab60a04b590b7e6b0005f005fc6ad20b922e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 16 19:43:14 2025 -0500

    This doesn't work anyway, and doesn't seem to be a package anymore

commit a447c0a8d16db5e06056050a3c588b57166fcb76
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 16 17:25:55 2025 -0500

    make sure pedantic-error isn't the source of bext woes.

commit 7615589edc41170ff22e4c8cc83a93c6805843f7
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 16 00:17:49 2025 -0500

    match CLi rtwizard default ghost intensity, change from 12 to 6

commit f2bbc83538be64539f8be69ab67efb93e0e71893
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:58:58 2025 -0500

    make them both singular for consistency, and there's only one anyways

commit 111394c4caf65897db201196dec98c6826f68a46
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:57:40 2025 -0500

    plurality typo

commit 11102587f9ea0830e5b1e0e7deb64376956453d5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:56:56 2025 -0500

    shorten the preamble to just the current impact.
    
    this significantly reduces the commentary to what the code is currently doing, with less elaboration on why.  bext needing to be built in advance is the driving constraint here, so that much is acknowledged.

commit b4b1ad84a0e3dd9ad95687049040d49967c9ecd6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:45:29 2025 -0500

    encapsulate logic into two functions so we can avoid relying on global side effects

commit 0528094bd266776ee093a02156833dac237ed3e0
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:31:36 2025 -0500

    make default configuration type match default build type (i.e., Release)

commit 3888f367439f29c967300b31d44107bf83470660
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 19:30:43 2025 -0500

    cleanup indent and update comments while exploring.
    
    this should all probably get put into a function so inclusion doesn't just run logic.

commit 6d3b40eb0da228d016cfd9bc763e279db585568c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 16:30:27 2025 -0500

    Start looking at other Tcl uses in primitives code.
    
    There are undoubtedly many implicit uses (mged_print_result is a case in
    point) but start by looking at direct, explicit usages of Tcl in this
    code.  Looks like BoT is the major troublemaker, but there are a few
    other uses to consider as well.

commit d1bb15dbb74354e9a528d8322212f47eb115e22f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 16:14:58 2025 -0500

    Replace Tcl_AppendResult with the log_str
    
    This should be regarded as a first step - there is a function in the
    code called "mged_print_result" which is used sometimes (but not
    consistently) in the primitives I/O code.  Not completely clear yet what
    it is doing, why it is there and why it's not used consistently.  It
    will need to come out completely for this logic to be refactored, so the
    question will ultimately be what the parent calling code needs to do.

commit 998c2e1751a5a8cd08d997fade445339cd9ab2f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 15:29:32 2025 -0500

    Wrap MGED_OBJ calls in logic to write out messages via Tcl_AppendResult

commit cd8ea4435426ec667d8defbd107fd9c40bddb176
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 16:05:29 2025 -0500

    re-set the exec bit

commit d50279aae396c906bc9a51b2bc9072e390408c10
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 15 16:04:13 2025 -0500

    Update copyright to 2025, Year of the Wood Snake.

commit 9322ed21ef6b09eadaf442ee72785621c6b8ac0e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 14:58:29 2025 -0500

    reduce variable scope

commit 111b1ef7530670e0eca02963526b8f5fb2491661
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 14:56:33 2025 -0500

    Move Tcl arb command implementations to edsol.c
    
    Most of these move without issue, but edgedir checks an internal arb
    editing state as a validation, so we need to split that one into a
    primitives function and the parent Tcl wrapper.

commit c2dd90f14e3e7c506e7561830a338162d283c5cb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 14:23:02 2025 -0500

    Start thinking about how to redo edit messaging
    
    To relocate the edit code, we'll also need to get Tcl out of the
    equation.  One of the prominent uses is a lot of Tcl_AppendResult calls,
    so we'll need another answer there.
    
    Probably should first look at chopping up and reworking any functions
    using Tcl data types like ClientData, since they won't be able to move
    as-is.

commit 284d59f8887fa6ca5085a61a427fe4fde812b141
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 14:04:16 2025 -0500

    Try to update es_peqn when we might need to use it
    
    Trying to do the update in edsol.c resulted in es_peqn's scope being
    greater than just the edarb.c code - see if we can just do the
    calculation when we need it in the editing code instead.  This will need
    some testing to make sure we've got the equations when we need them, but
    except for the edsol.c setting this variable is local to edarb.c so that
    constrains the problem.
    
    es_peqn was the last global exposed in the primitives headers, which
    gets us one step closer to the primitives code being movable.

commit 92f7979574a6868084d8d02cc5852227ec6ffee3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 13:40:05 2025 -0500

    Add MGED_OBJ functab entry for menu strings
    
    This lets us hide the arb cntrl_menu exposure, and eliminate another
    (small, admittedly) switch table.

commit f1f7b715bf24d6d09ed76874823d5fa3971a4e72
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 13:08:09 2025 -0500

    Move remaining edit_state variables used in primitives to s_edit

commit b3db7e2ecdaefa864ef34ce7be1188c1cecde355
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 11:52:12 2025 -0500

    Eliminate most (all?) uses of e_type for ARB type storage
    
    Eventually we can probably stash this in an ARB specific internal
    structure and use it the way es_type was being used, but for now we'll
    just invoke the arb type checking function when we need the type.

commit b6377e329028ae9b9ec145ca08600329c7714b15
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 11:14:41 2025 -0500

    As long as we don't end up with edit_flag set to one of the arb editing states in oed mode, we should be able to just go with the default rather than checking the global editing state here.

commit b1b32e05caff2a604fc4434591b6431e08c7e5b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:54:04 2025 -0500

    Move more vars used for solid editing to s_edit
    
    Looking like the challenge will be variables active in both object edit
    and solid edit modes...

commit aead7030157edd91cf7959cb488e47373f4fe682
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:49:05 2025 -0500

    incr_change may be a better fit for s_edit

commit f9da2c3d2766d52eec9fb92912b7f694454378a1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:41:52 2025 -0500

    Document removal of -b and -t opts from rtshot
    
    With the new BoT raytracing logic changes these options are no longer
    needed.

commit 12e126bfcd39ccd032efe1a7159fb10f301aef0f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:40:00 2025 -0500

    Document removal of bot specific settings from rt
    
    New BoT raytracing logic means these values are now no-ops.

commit f78fd62f52c5fe19b3a12d5ce5841167f9209177
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:37:38 2025 -0500

    Document removal of -B and -T opts from nirt
    
    With the new BoT raytracing logic changes these options are no longer
    needed.

commit c11e965a9719cdb843186a144a483b375a6510d4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 15 10:35:34 2025 -0500

    Document removal of bot_minpieces cmd from nirt
    
    New BoT raytracing logic means this value is a no-op, so the command was
    removed - it is no longer needed.

commit 425ff3e4dc8e373b5904d7dfbdd6096bf4c2a88c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 21:31:05 2025 -0500

    Sync a local copy of mv_context for primitives code
    
    Sure enough - "set context 1" is how the behavior of editing is changed
    for those cases using the "mv_context" variable in the primitive editing
    code.  Yikes - holy undocumented obscure unintuitive feature Batman!
    
    For the moment, just force the MGED set command to do a sync for us so
    the setting makes it into the mged_solid_edit struct and we don't have
    to reference mged_variables in the primitive code.  I'll have to look at
    the other uses but it might be that something like "force_keypoint"
    would be a better name for that variable given how it is used in eto...

commit 2c0de16d8896263ccdef9b081c5eb3b9bbf626c8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 21:15:18 2025 -0500

    Revert "Move the mged_variables mv_context to mged_solid_edit"
    
    On second thought, need to verify this isn't intended to be responding
    to setting context *directly* on the MGED prompt.  I don't see another
    trigger for this logic anywhere - the Tcl set path seems to be the
    *only* window to activating it - so needs experimentation.
    
    This reverts commit 975faffcb707cc43449c165cb73b4fecd3148b38.

commit 975faffcb707cc43449c165cb73b4fecd3148b38
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 20:54:27 2025 -0500

    Move the mged_variables mv_context to mged_solid_edit
    
    This one is a little bit more risky, since it is apparently exposed as
    "context" via a structparse, but it doesn't seem (as far as I can tell)
    to be playing a role in the current MGED tcl code and it is active in C
    only in the primitives code.  With one exception in generic, this is the
    only use of the mged_variables global in the primitives code - since
    mv_context is specific to the primitives code, relocating it there.

commit e157a9e0a6b91ff5e748b1334354bcebf4398cf9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 20:42:22 2025 -0500

    Making progress, but still a fair number of globals in the MGED code.

commit 42d1fe1130d53e08f522507dbf420f93dac3dedd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 20:20:54 2025 -0500

    Move some more globals into mged_edit_state

commit 4da9b55b76ea13014cc132df87068b2b5eef2d7a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 20:02:45 2025 -0500

    Group variables predominately used in primitives
    
    Now that we've got the logic isolated in files, begin identifying which
    variables are used mostly or exclusively in primitives code.  Those will
    be the candidates for the first iteration of an rt_db_edit_internal
    struct.  Conversely, anything in primitives still using edit_string
    rather than s_edit from the global state will require more scrutiny.
    The mousevec code seems to be updating some of the edit_absolute_*
    variables, so that will take some thought.  acc_sc_sol appears to also
    be in that camp, although it's currently still a global.

commit f50b39fb9e13bc3853d813df7cd733c3f924abb7
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 14 16:08:55 2025 -0500

    CI segfault, need to investigate

commit 61ead1ebfa4f0e98af11d0fa8a46ba2b42ef0d5c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 14 14:19:45 2025 -0500

    oops, templatize the new test.  legal regression did it's job.

commit 2e5370912238653c48c2df74bc3f0536b023de98
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 11:51:53 2025 -0500

    Avoid -Werror=unused-but-set-variable warning

commit b07b013b8af0b1e697f4332be27c405880db34e9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 14 11:37:13 2025 -0500

    preliminary arb8 testing with 22 different arb8 configurations.
    
    presently only looking at currently valid configurations, but idea will be to then add currently invalid configs that can be tested as support for them is added (e.g., concave, non-planar).

commit 8e19a8f221e12af650ace8f69eae31ada1d32ac7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 14 10:47:57 2025 -0500

    Add the vim line to avoid indenting namespaces

commit 04b62d7d1109b304c70731811cfac90e9c341adf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 22:34:24 2025 -0500

    Fix version numbers

commit 6f2cfa8fbd49bdbc2250807420ed242f5e24b4a7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 17:25:12 2025 -0500

    Correct -Wstrict-prototypes errors

commit 069757db2dc3a4671a26d8520701727c057692e3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 15:52:36 2025 -0500

    include one real pdb with about 10k atoms, https://www.rcsb.org/structure/3NN4

commit 9f5c334915699772c6e3cf7ad477acfe5db0f622
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 15:26:01 2025 -0500

    on second thought, refer to bwish and btclsh respectively instead of tclsh.

commit e034fbedd2262b808faadfc01e2c145b9602b6d4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 15:21:03 2025 -0500

    add basic manual pages for bwish and btclsh.
    
    far as I can tell, looks like they'll parse a script passed as an arg, but not much else.  did not document the built-in commands supported, but would be room for improvement.

commit ffc4410a5ce4015dbb117c0db223d0b518f277db
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 15:08:49 2025 -0500

    Stub in create and destroy functab entries
    
    To eliminate the per-primitive-type globals, we'll need some way to
    encapsulate them.  Not quite sure yet what this will look like, but at
    least stub in basic function callback entries in the table.

commit 8bf278215a6c3783188421746c9aec3df9225e46
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 15:06:51 2025 -0500

    move pedantic-errors to the error section.
    
    should only be on in strict mode.  try re-enabling for c++ as well since the transitive issue is no longer relevant for externals.

commit 09d9a8ce376293b2d24be7a64cbd8deeb324051c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 15:05:17 2025 -0500

    hilarious s/search/brlman/ snuck in at some point

commit 1734c58ba5dc04d31216152baed782d100f7adc8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 14:49:37 2025 -0500

    Update minimum CMake version to 3.20
    
    Biswaranjan-Dash spotted that our CMake logic wasn't calling out a new
    enough CMake for the features we are using.  Was able to adjust one
    case, but our target_include_directories call is using the AFTER keyword
    which sets our minimum at 3.20 now.

commit e9d8e5a551d4851108a3d4417c6bd945971f2900
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 14:32:04 2025 -0500

    Use older try_compile signature for libged scanner.

commit a84ecaa26279e893cfaa29382bb40a8331816531
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 13 14:18:12 2025 -0500

    Address -Werror=c++-compat compiler complaints in pdb-g.c

commit 2bddee78bfda86f0e4659e235caccdfc874efda3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 13:01:58 2025 -0500

    compilation cleanup, it works!

commit 26a3f72823f348780f592ced3fe1a2e3b80cc2cd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 12:43:04 2025 -0500

    quell massive blather from CMP0177.
    
    assuming we don't rely on unnormalized INSTALL paths, as is the new behavior.

commit 4b00f7553abe9b8fb3c8de2c0cdb3fb688678c7d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 00:59:14 2025 -0500

    bu_strlcpy() so we don't have to manually nul-terminate

commit 9631af2fc939077424bfea64ece3c699e71b760e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 00:53:46 2025 -0500

    need str.h

commit a80f310a0a2a160c7ffcab0ca47118e7d579dad2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 00:53:22 2025 -0500

    basics: create corresponding geometry for each atom.
    
    make case insensitive on read also.

commit 12455f08daf8a42b9494e98e81f5debe0202051c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Jan 13 00:13:58 2025 -0500

    clear up our atoms allocation too

commit 6b68263bd0a0d2c549b0f496b86f02948ea551e2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 12 23:39:41 2025 -0500

    add a couple pdb examples

commit bd328274a81dc9fed529e280056ec52782dd72ac
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 12 23:28:56 2025 -0500

    restore the trailing whitespace -- it's required for pdb

commit 6c63de0089e7c5f2abd4146c8d52089642c8d5ac
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 12 23:06:47 2025 -0500

    include a caffeine example using HETATM and the schema.
    
    at least, as much as I've discerned thus far.

commit 2fba34dd9bf63bc478b147b92c68ecb87be9e273
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 12 22:35:16 2025 -0500

    expand on pdb file format and include an example.
    
    provide some preliminary parsing and a data structure for storing what we find.

commit 7c2ad6d2bf6739b135819b6c9b6eae720dec61bc
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Jan 13 09:36:52 2025 -0500

    handle null termination w/o erroring out

commit a60eaa4258998065c259540406a1aba48768efa5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Jan 12 10:44:55 2025 -0500

    Fix build error

commit 4849cd514667e9f718348936a3ca2b978fc4da2b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Jan 12 10:12:08 2025 -0500

    This logic is obsolete with the switch to bext

commit 585e2326c7a23f9c4279748ec1079a962339b7c8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 12 02:17:11 2025 -0500

    move env2c and debug2c into libged.
    
    this fixes a dependency coupling issue where misc had to come before src, but also moving because the tools are not really general.  they're highly specific to our existing repo structure and are specifically libged code generators, and only used there so looks like it should make sense to move them into place in libged.  giving it a try.

commit 626d8fc1efa584c499838c21b93ed8d596b553f0
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Mar 9 19:47:09 2023 -0500

    have ged_exec check for NULL args.
    
    add some basic sanity checking to make sure we don't propagate NULL down to commands that may lack NULL protections if/when a NULL argument is inadvertently passed.  this is a mild layer of detection/reporting for commands being built up programmatically/dynamically.

commit 7ef23628e1899d7b61c1cdf520e61dfd676312e3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Feb 16 01:54:03 2023 -0500

    we already just cached the build flags
    no-op after rebase as fixed elsewhere.

commit 0f970977a1da6532415fe2194d9edcf4e9e180da
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 10 10:29:00 2025 -0500

    Start thinking about how to handle per-prim editing data.

commit ce68683db795d149bbcf05d50e459385a040a86a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 10 01:58:59 2025 -0500

    regress-asc and regress-weight are back on the menu

commit 9ab1eea87caeeb8e0c2246cfadc69458b4a89a3c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 10 01:58:34 2025 -0500

    regress-asc works again.  v4 no longer adds gift string to the material field.
    this in turn ensures v5 upgrade doesn't turn the field into a new attribute that results in non-faithful roundtripping.

commit 4623770bda7a020b5ec7b016c01d1c04e422decb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 10 01:34:50 2025 -0500

    remove auto-setting gift%ld attribute during v4 import.
    
    gift is long gone, but more importantly usage of the 'material' field changed / needs to change to bring it in sync with the shader setting and to support material objects.

commit ec23c1285041c404aa4ec29f15a154fdd5091c74
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 9 23:33:18 2025 -0500

    not why this test is failing

commit 113c0544ff5ee21ca71e39359bf1c2cf2b35e005
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 9 23:29:20 2025 -0500

    quote the material too, not just shader, as it could have spaces

commit 374cd87c474763bcf8ad065624e4984bbd60496b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 8 15:36:23 2025 -0500

    fix all the wrong logging

commit 46e4a514f46e6e9a2edd469f59f35d64b563953e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 8 15:17:50 2025 -0500

    append to the log file. was getting wiped out.

commit 487435a191770f37b2202485fc96cae7d75fe54d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 8 11:06:42 2025 -0500

    initialize

commit 0881002f84280c7a3a656579e54f4898fb81aae4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 8 09:55:37 2025 -0500

    List MGED predictor for deprecation and removal.

commit 0c305ffcde1d88f3b40d700b4361c24f21c5c70c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 8 09:42:18 2025 -0500

    initialize

commit c547f4a295bbe346d6c092fbbb207a8011eb6ee4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jan 8 07:56:54 2025 -0500

    initialize

commit 9bc177b0794c3aa1f58d648142eac7cf1e93790f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 8 00:25:06 2025 -0500

    fix and re-enable rtweight regression test.
    
    when code was refactored to libanalyze and c++ containers, there was no longer an upper limit on the number of material IDs supported, so the regression testing for that limitation was no longer valid.  reference updated accordingly, keeping the high ID now that it's supported.

commit 7c121f36864337029522fa50bdce1e5b3d5b6c5a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Jan 7 23:47:34 2025 -0500

    add a manual page for pixcmp

commit 1808d55bc151319b0ba16520abb4e9817fc99f74
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 19:25:38 2025 -0500

    Add missing mged_state pointer to declaration

commit 387951cb369b287146919ca5fd7bd5fbeaa109df
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 19:07:56 2025 -0500

    Move most of the solid edit globals into the edit_state struct

commit 2ca1e25d15aadf5853763835904b3913ce408b58
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 15:55:02 2025 -0500

    Adjust the numbers being used by primitive edit modes
    
    These are nominally private to the primitives, but it would still be
    better if they don't conflict - and they can't conflict with SROT and
    the other general flags.  Use the functab primitive order to prefix
    the numbers, to allow us to tie any given primitive edit state flag to
    its specific primitive type just from the prefix of the number itself.

commit 30ef78a21372bd35ce880db9c20c4f71898dbb82
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 15:34:34 2025 -0500

    Remove most of the per-prim headers
    
    With the defines no longer public in the MGED code, that removes most of
    the need for the per-primitive headers.  Move a few externs into edsol.c
    since we don't yet have per-primitive initialization for editing.

commit 7dd28d60beb436fa8bb25af36f016db64c519c59
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 14:36:10 2025 -0500

    Move the last logic referencing ECMD defines into edarb.c

commit 3c456a9289f3c92cad2337fa0802c3a2c7c75c2d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jan 7 14:22:09 2025 -0500

    Move es_edflag into edit_state, and push sedit ECMD_ uses down
    
    This one was tricky - sedit.h was using specific editing states to set
    up defines which tested whether or not the current editing mode was a
    rotate, translate or scale.  Rather than list out the specific states at
    the top level, we instead establish four flags at the same level as
    edflag which encode the same information - whether we are in a rotate,
    translate, scale or pick operation.  We then define a function to handle
    setting all the variables appropriately for the most common values, and
    have the primitives manage them more explicitly when they are setting
    one of the edflag states that would previously have activated one of the
    old define definitions.  The defines themselves are updated to reference
    the new high level flags rather than encoding the states directly.
    
    Need to understand more about why so much code needs to be aware of
    whether we're rotating, translating, scaling, or picking that we need
    these defines, but in the interests of trying to be incremental and
    limiting scope just do this to hide the primitive specific code and
    defer exploring the SEDIT_* define uses until later.

commit 8e08ee09394314cdba0129a4035b551cf5d1c5e0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 17:40:00 2025 -0500

    Move GEOM_EDIT_STATE into mged_state

commit 3e2e83841d9a3011741c11e03c9551908179492e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 17:18:22 2025 -0500

    Remove IR_KNOBS and IR_BUTTONS ifdef codes
    
    Does not appear to be enabled.  VC has the code if we need them.

commit 46dab1c399eb3ea02efd0248f49023a8ca7adcfc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 16:42:44 2025 -0500

    Break the sedit_mouse logic out into per-primitive functions.
    
    This leaves the SEDIT_ROTATE, SEDIT_SCALE, SEDIT_TRAN, etc.
    defines in sedit.h

commit 0de845a6288d6ead0ca639d1cdce8cfcd42b7833
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 15:27:33 2025 -0500

    Don't keep running doEvent if MGED_STATE is NULL
    
    Chris ran into a crash in MGED where doEvent was trying to access
    something invalid in the course of shutting down.  We tried to
    de-register the doEvent callback but that doesn't seem to be effective.
    Testing a global flag did work, but Chris spotted that we could just
    look for a NULL MGED_STATE instead since we do explicitly NULL that out
    in mged_finish.

commit 650f680e8e1e5fd45b34ae7e603edffac2fdb4e8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 12:27:54 2025 -0500

    Stub in function slot for sedit_mouse

commit 8fd68fd41105379cf6787bfa1e535f214801006d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 12:02:27 2025 -0500

    Push unit conversions down from mged_params to individual methods.

commit 2049b086d0922d38fe785270649c66880100a184
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 11:37:12 2025 -0500

    Try to spot and add 3 param cases
    
    These aren't called out, and there seems to be a lot of independent
    checking for params in some of the code, but try to push the full three
    param checks we actually seem to need down.  Probably will be a lot of
    input validation cleanup generally when we reach the point of putting
    together unit tests for all this, but for now this clears one of the two
    mged_param ties to edit-operation-specific code.

commit 15905ec055a0098d1f7b7b44e3be720bfcb1aa7f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 10:51:15 2025 -0500

    Add 2 param cases

commit a62d55c1e90743e0ce23a6e9209282009cb8c90d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 10:50:20 2025 -0500

    Check sscale return code, add other 1 param special cases

commit 6b2ffbc0485116229c7cf3528f37784c84fc88c2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jan 6 10:21:10 2025 -0500

    Begin pushing mged_param verification down.
    
    mged_param has a lot of specific cases for checking if the parameters
    provided as input conform to the needs of specific cases.  Need to push
    this checking down to the actual methods themselves - while it's
    definitely more compact to do this up front, the exposure of specific
    editing methods in the PARAM_* defines means it doesn't scale well.
    Not to mention we're trying to hide the details behind MGED_OBJ in the
    first place.
    
    This focuses on SSCALE and PSCALE - the latter has a second tier of
    special case with es_menu flags, so metaball and pipe need to be broken
    down further.  The rest of the pscale functions look as if they can get
    away with one check up front, but pipe and metaball have different
    requirements depending on the es_menu settings so in their cases the
    checks have to happen within the local switch calls.

commit c7c339aa0782d46a866313a27a3bf7e7a9aaab04
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 23:15:37 2025 -0500

    ws cleanup

commit 0a3011225ff4d6fa5d504af7796f01c48b563252
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 23:13:55 2025 -0500

    little ws cleanup

commit e7c5b0058c7c73d071109eeda11b70f562c64c1f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 23:10:27 2025 -0500

    ws cleanup, just a few.

commit 6864199f390325b480b4a7c64702bc4427e7e42b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 23:09:17 2025 -0500

    cleanup ws regressions

commit cc0a4fa8a7aff4231e8a330f4496c9470870b828
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 00:21:27 2025 -0500

    remove a few more trailing lgt references

commit e03ea05f568e0f39cdf9e4bd3b861703afed6e4a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 00:15:00 2025 -0500

    removed the lgt.sh script

commit 87345b8a59f693c0e5f06ff06a6956e3e9428cdd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 00:13:55 2025 -0500

    remove and diminish references to lgt

commit ef06a822e1201efaa4bd369ea8e92da55347958f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Jan 5 00:06:00 2025 -0500

    remove lgt helper script.
    
    lgt was obsoleted in 7.30.2 so should be safe to remove.  procs are undocumented, but consist of process_mdb, apply_lgt_mat, and make_lgt_light.  all three appear to deal with lgt-specific files.

commit fe2f59c1d095233f54be08c5d6c6baad5b81ba69
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Jan 4 23:40:16 2025 -0500

    remove.  lgt was removed in 7.30.  curiously not in regress.

commit 0abd63c6d928ee2ccbe6a7b5bafa4fe148c854ea
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jan 3 23:44:21 2025 -0500

    more ws cleanup

commit 3cbdf8d15e22b6178166f97e6cb27079b526ef15
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 3 16:28:34 2025 -0500

    Move arb-only logic to arb function

commit 6dfd26ec8b21cfb6fa6fde1706464ec026171d6a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 3 16:26:02 2025 -0500

    Fold pscale into per-primitive files

commit 524760afcc2860e4c04cdb455aee721902114357
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 3 15:49:15 2025 -0500

    Move primitive specific initializations to primitive logic.

commit c7565016317015887eb3f5ad350cea14dd13322f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 3 15:40:50 2025 -0500

    Refactor the generic solid routines into functions

commit 91ec4799c7f92938c9745c7c4f7c7d12709c9226
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jan 3 14:55:28 2025 -0500

    Add an edit functab entry
    
    This will undoubtedly change quite a bit, but for starters deconstruct
    sedit to get the primitive specific menu items into the per-primitive
    code.

commit ba6d178a7b7f93bb39efc1efa894f539e6156109
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 2 23:30:27 2025 -0500

    hit them all up, ws cleanup

commit 7ec2668834540efd503fc92af1e9c6e42144d4a9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Jan 2 23:27:53 2025 -0500

    ws cleanup

commit 7c6064d37222b4e68fbc4fb20f371f8660ccca10
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 21:12:48 2025 -0500

    Update bext submodule to 306f40246de

commit 8e9d8033cb65de1c514f2c5ccde4c6076753d7f0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:59:49 2025 -0500

    Shift remainder of readsolid primitive logic to functab.
    
    TODO - can we use bu_sscanf here instead of sscanf?

commit a85c823d1ba03d7b44dd60d4ac000d6d756e86bb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:31:34 2025 -0500

    Migrate HYP read_params logic to functab

commit 8afff34584926af1f1ca1282ff075743e9e2897d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:26:35 2025 -0500

    Migrate EPA and EHY read_params logic to functab

commit 2d8e2090cd0a7147fdf18b1d14ef6ca6207245bf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:18:59 2025 -0500

    Migrate RHC read_params logic to functab

commit 6a4ae7b2fab89402c7abff21722361f4b014c40f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:14:44 2025 -0500

    Migrate RPC read_params logic to functab

commit 5f6ec1253346527a35ad704236fb6dcb430ecbc7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:09:16 2025 -0500

    Migrate PART read_params logic to functab

commit b88a347924d8831ac2a49bb60cfed3c5d1c3aa8b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:05:50 2025 -0500

    Fix grip CK copy-paste error

commit 81664b6a47effc2185ad01396dabc7b2d1b05653
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 15:02:54 2025 -0500

    Remove functab .h function definitions
    
    Going through the function table for these, so shouldn't need the .h callouts.

commit 910b9effd0569690ef3985025e65505a43b98dda
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 14:58:08 2025 -0500

    Migrate GRIP read_params logic to functab

commit 4399767dc7819152a5a3c326ff22ac5e8c2fcbde
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 14:52:45 2025 -0500

    Migrate HALF read_params logic to functab

commit 20d8e24cc4ce6b60721d5a58b6d458686bdf7775
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 14:40:02 2025 -0500

    Migrate ARB read_params logic to functab

commit 2649fa3a134c7896f7cb4b8b490e828f8c509238
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 12:23:45 2025 -0500

    Migrate ELL read_params logic to functab

commit d25aad0154e5f3bd5305d3ef74e56394e2c20a8c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 12:16:14 2025 -0500

    Migrate TGC read_params logic to functab

commit 98f99babcdf4590004453b5cc97d14181d819936
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 12:03:04 2025 -0500

    Document functab write/read params API purpose.

commit 7d6ee0ea2f15ebdee8cd89ed925cf01d62ec3c83
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 11:58:43 2025 -0500

    Finish and wire up shift of read_solid TOR logic to functab.

commit bffe1f0cb8344d9ac9be43043d05d93755d28b04
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jan 2 11:12:45 2025 -0500

    Fix MGED "ted" command used during solid edit
    
    Looks like commit #447b384d4 switched editit to using ged_exec, but MGED uses
    "ted" for an argv[0] here and libged doesn't know how to translate that into a
    command.  editit is used in only one place, so relocate it and update it to use
    the libged "editit" command name to trigger editing.

commit 987c0d80f3722f7c3cb1efc3e28897d3cab2ae96
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:40:08 2025 -0500

    gltf import was improved by chris via assimp

commit 9c76def5a4d20c2cb40975427c62b5024acef19c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:39:06 2025 -0500

    SDFs on the horizon

commit c896ffd97c493b5662a02901a63d14f9c3ddc645
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:17:02 2025 -0500

    ill-defined blend operation

commit a0584281d2390f4731c8daaa218745527871868a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:13:50 2025 -0500

    make fastf_t a class.
    
    expand slightly on a really old idea that we briefly tried out (and seemed to work).

commit 90bc5320544fb462f8b897bf68e74bdff5a5adb3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:10:50 2025 -0500

    arb types are not written.
    
    inference happens on import, so it's a reflective property.  there's maybe UX value in preserving the original count, but that's not a contemporary issue.

commit 55841c54918e0fdafa1f1a19b8879dcbdfb3c522
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Jan 1 02:05:12 2025 -0500

    likely unhelpful, would only save a division

commit c04fc5f73bdad107efc1e61a61f839c099fbac02
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 21:29:16 2024 -0500

    Fix a couple of the headers

commit 29e7a8e75279c9eda179d7a476ccf22aa5127028
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 12:51:43 2024 -0500

    read_params migration may be a bit tricky.  Use tor as a test case

commit 46400bd4ef79566bf88b574b369666edd5d28fcd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 12:30:42 2024 -0500

    Refactor writing of parameters into functab

commit ecbc81f170afc8eebe0dac18a903142bb4e70caf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 08:51:38 2024 -0500

    Use the functab to get prim menu items
    
    This clears most of the use of ID_* conditionals for menu items,
    although there are still a few corner cases to deal with - thinks like
    initializations or primitive specific calculations.

commit efa336466d48112cb00ac77f869aaffa68d71fea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 11:28:40 2024 -0500

    Add another gitk path to check on Windows

commit 0c587907039fac382dadf613ed4b7501cfe7db41
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 11:10:53 2024 -0500

    Comment tweaks

commit 80565d5b49615911c52d936d5fc18d62e0aaa57f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 07:40:15 2024 -0500

    Consolidate menu definitions
    
    Had initially menu.h into mged.h, but logic breakout ended up going the
    other way and expanding the menu.h contents.  Move the menu_item and
    defines to group them with other related logic.

commit dc4a49aa7ec5343f803a72d64bae31e87367184c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 31 07:24:35 2024 -0500

    Fold e_axes_pos prim specific logic into functab

commit b896c92fa59d8a70b2c60939ff9b1f369f0bc9c8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 21:57:26 2024 -0500

    Pull in latest yori srcs for all components

commit fd350718fa9ee3015a03c82efdbee76f262f2e00
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 21:34:31 2024 -0500

    Update other libwin files from upstream yori

commit 811a84468d99d2bfccb43e779cf5546ca5f2fce5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 18:47:18 2024 -0500

    Scrub old patterns out of env2c

commit 3d763f69270d13ecbc69286857a62d0e6571f24c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 18:20:15 2024 -0500

    Add precise variables for GUI and CONSOLE editors
    
    Support BRLCAD_EDITOR_GUI and BRLCAD_EDITOR_CONSOLE environment
    variables for bu_editor to allow users precise control over what will be
    selected without requiring them to muck with the more broadly used
    VISUAL and EDITOR env variables.  The latter will still work, but
    precedence is given to the BRLCAD_EDITOR_* vars if set.

commit 4979010b588432ab48c650902f956264ac61e79c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 15:50:34 2024 -0500

    Fold keypoint per-primitive logic into MGED functab

commit b2ac6ba418fb8c3937f32fe9f6525c4f1a180b47
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 13:24:06 2024 -0500

    Add keypoint function pointer to MGED functab

commit c46dc5d243552cc4f4ba8971155e48512f9e7dfd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 12:07:41 2024 -0500

    Use functabs for both edit aware and std labels
    
    Still using global state variables for edit-aware, but this fully clears
    the ID_* switch tabel from the MGED label code.
    
    The pattern is hinting that we'll need to be looking at an equivalent to
    rt_db_internal and idb_ptr for editing - perhaps an rt_db_edit_internal
    with the generic info and the per-primitive-type containers in the
    idb_ptr, to correspond to how librt handles similar issues.

commit 106c5a1e90871975bc1df0b3b4e721a692924ece
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 10:30:15 2024 -0500

    Don't check the magic until we need to access bot members.

commit cb352515eccfa9b5cbcbf269bb909a27e187845d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 10:23:09 2024 -0500

    Reapply "Wire up bot labels function into MGED_OBJ"
    
    This reverts commit e3016ac5fa61818f603c6211ff0bfb02ef54cd67.

commit b8a0d23a6e0a3f5188c0aff4fa71964239920b72
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 10:11:09 2024 -0500

    Pull in yori upstream commit e272fb3 - improvement to searching in list box.

commit f162d5d31cc87f4e06375aad73c4683eaa55b4ab
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 10:06:47 2024 -0500

    Pull upstream fix c93f8e9 - avoids a crash relating to indenting.

commit 5507abeb7801558a1e63932bb5c5728614dea557
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 30 10:01:02 2024 -0500

    Pull in upstream commit fe63688 from yori - fix for building with spaces in path

commit e3016ac5fa61818f603c6211ff0bfb02ef54cd67
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 21:49:12 2024 -0500

    Revert "Wire up bot labels function into MGED_OBJ"
    
    sed on a BoT crashes with this change, so back out for now.
    
    This reverts commit 40f3d03a32aa4f58872c6da3e15c92c0cd6056a6.

commit 82038a6039cfe59519b8eeb4b13810ec12766424
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 18:05:08 2024 -0500

    Be fault tolerant of src/bext retrieval failing
    
    If src/bext (for whatever reason) doesn't yield up a SHA1, try main
    rather than giving up completely.

commit 40f3d03a32aa4f58872c6da3e15c92c0cd6056a6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 17:19:48 2024 -0500

    Wire up bot labels function into MGED_OBJ

commit a0a9aace2cf9d131b77140138fff40070a2bf593
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 16:28:25 2024 -0500

    Start roughing in an MGED functab
    
    Deliberatly trying to match how librt's OBJ functab is implemented, with
    an eye towards eventually migrating as much of this logic as we can to
    librt for multi-application use.  That will take multiple stages - right
    now there are still rampant globals throughout the code, just for
    starters - but the tentative steps currently planned are:
    
    1.  Stand up a couple functions in the MGED_OBJ table to test its
        functionality.  Current candidates are logic for getting labels and
        keypoints that isn't alreay pushed down to librt (i.e. those whose
        output reflects editing state not just primitive data) and
        (probably) set_e_axes_pos.
    
    2.  Figure out the differences between MENU_ and ECMD_ logic and whether
        there is anything common between them that can be factored out.
    
    3.  Encapsulate the logic that is generic to many method types into
        reusable functions for the functab, again similarly to how librt
        manages such cases.
    
    4.  Reduce (maybe even eliminate?) explicit use of ID_* types in
        favor of MGED_OBJ calls similar to how we use OBJ[] calls for
        librt defined primitive methods.
    
    5.  Identify globals needed by the editing codes specifically and
        figure out how to encapsulate them in structs.  Probably will
        be some equivalent to the rt_db_intern and primitive specific
        structs, but we'll see.
    
    End goal is to have MGED edit logic be both unit testable and reusable
    by other applications.  Also consolidate with any editing logic stood up
    in libged.

commit f4ae7acaa9f5ce3d61b2b6016748564874a58774
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 14:40:50 2024 -0500

    Move VOL logic.

commit 6d9690ac866be34191c5acaef5d7f9731c5295b4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 14:29:46 2024 -0500

    Move TOR logic

commit 315c5ac9eb0dea9181ba5bbc148708c952ddc69a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 14:25:53 2024 -0500

    Move SUPERELL logic

commit da8492d793e455f17b7bf1c51e96a820b09c9ad0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 14:19:12 2024 -0500

    Move RPC logic.

commit 7620c39d0328ffd32252978ea3acd8f5cd3ded05
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 14:13:48 2024 -0500

    Move RHC logic.

commit 3cd8aad3faa341ae5b3b7428175c202aeea10977
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 13:12:38 2024 -0500

    Move PARTICLE logic

commit 36eb36639378e37af48cabf948047b4078a8a714
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 13:06:37 2024 -0500

    Move METABALL logic

commit 68c7d89c2deb60d3278222e9461c9d2da6ae3830
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 12:36:32 2024 -0500

    Move HYP logic

commit 8df2efc14c18a16e4a7720fe8b31c16fffecd2dd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 12:28:15 2024 -0500

    Move EXTRUDE logic

commit 4494f58ebbdb987ad8577593f4ccf91fffa322fd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 12:17:04 2024 -0500

    Move ETO logic

commit 365dfa56e14abc4df962d81176f5345a6ae2ec06
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 12:09:02 2024 -0500

    Move EPA logic

commit 5bd6e0db3a38c0d45ff7ddf10a063a3799cefc39
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 12:01:53 2024 -0500

    Move TGC logic

commit 377c577513724e67eb010c95d236dabd8eb4080b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 10:59:46 2024 -0500

    Move ELL logic

commit 82637f6442b571cad8d349f7c1d6cfbfcd3066ce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 09:46:23 2024 -0500

    Move EHY code

commit bf67dbf189309c7cf2f37b2c32088660f1fbc7e8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 09:39:33 2024 -0500

    Move EBM logic

commit 71876a29c6a713c5b45b968f62b9e06df24724d6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 09:29:34 2024 -0500

    Move DSP code

commit 0a410d6649867f424d13a623b4487f01d49045d9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 27 00:02:53 2024 -0500

    Whoops - thanks static analyzer.  These breaks were breaking for loops, not the switch statement the code was extracted from.

commit e886dc33a60c7e0ac33c77329ad29826c480c05f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 16:50:58 2024 -0500

    Move cline logic to primitives

commit ac8b8f2a817fded6c4cc24821e382d384d19655d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 16:37:33 2024 -0500

    Move bspline code to edbspline files

commit f439207191d8dc80f26a3c73602553abd6d1abd3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 15:57:49 2024 -0500

    Relocate BoT editing code

commit 3e43a2b39795bf888636ead26a98cef42ad45114
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 14:29:20 2024 -0500

    Relocate primitive menus into per-primitive files.

commit ed52956a24c22be9c43c7917c812f0d42a56fe93
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 13:58:26 2024 -0500

    Make a primitives dir for MGED to match librt
    
    Stub in C files for various primitives we haven't broken out yet, as
    well as moving some header defines.

commit d6d5a067bd5b4b77c19ce4a75b92bf9488fd88be
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 12:44:28 2024 -0500

    Break other defines out into per-primitive headers

commit 08c6b059902e05f111c84f81a3f7d7a82ca22f4b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 11:48:13 2024 -0500

    Work on refactoring ARB logic
    
    This is a bit messier than some of the others, and there is a lot more
    to do here, but at least get a start.
    
    The broader goal is to get things organized so we can do an "editing"
    equivalent of the librt OBJ functab that will encapsulate all the
    per-primitive editing logic.  At the moment not worrying about gloabls
    being used in this code - just trying to set the stage for eliminating
    all the huge primitive switch statements being used for primitive
    specific editing behaviors.  Once we get that far, we can look at what
    globals are in play with the editing codes and how to properly
    refactor (or ideally eliminate) them.

commit 3b6137891c79470fcc6a3df90d06ee9f3e7929a1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 10:21:54 2024 -0500

    Unused vars

commit 50b3646e5babfeecada5db1b555ebabb0dc8cbfd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 10:13:25 2024 -0500

    Stub in headers for more primitive types

commit 92ac92fdf447375183c41b275721c047f7ae543a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 26 10:09:20 2024 -0500

    Break ars editing logic out into separate files

commit dd5d9a17e2a93ea6ca84564e82e8fde7854fe571
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 23 18:09:09 2024 -0500

    Add a couple TODO notes for linenoise.hpp

commit 53f0a145ccc353a8d90a592bf294f9c91509644d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 23 16:54:57 2024 -0500

    Move pipe logic into edpipe.c

commit 9ac0df3fb14595bc7ebbde620559ac4c453ce23f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 23 16:01:13 2024 -0500

    Rename to follow the existing per-primitive file naming convention.

commit 01c347513d9aa15eca591c72666f2a182e03a634
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 23 15:31:41 2024 -0500

    Break MGED NMG specific logic into its own file
    
    NMG logic tends to be quite verbose, so start with that and break it out
    into a separate file.  The idea here (besides making edsol easier to
    digest) is to see if there are patterns that can be established for
    per-primitive MGED logic that could let us set up something similar to
    the OBJ functab in librt and hide per-primitive details.

commit 202be7fc5523d6505970be93e306b8ac403a60fc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 23 13:41:26 2024 -0500

    Break the nmg keypoint logic out into its own function.

commit 2d2aa80f794d887c86df532b88f7f72a6d347477
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Dec 22 12:06:20 2024 -0500

    Check VISUAL env var as well as EDITOR
    
    Per https://unix.stackexchange.com/q/4859 discussion, check VISUAL first
    and then EDITOR.
    
    Ideally it would be nice if we could have something to call out GUI and
    console editors specifically - may want to support BRLCAD_EDITOR_GUI and
    BRLCAD_EDITOR_CONSOLE options to allow precise user control without
    disturbing more general system settings, if there aren't actually
    standard env variables we could use for that.  Unfortunately, despite
    them getting used that way in more modern contexts, it seems the
    "standard" usages of VISUAL and EDITOR are NOT "GUI and console text
    editor" specifiers but rather "advanced" and "basic" terminal
    environment editor specifiers (the latter having no way to handle cursor
    movement.

commit 03e62e5a1527ec21b9e5be2dd716c2e19f486f98
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 21 21:39:35 2024 -0500

    Shift in bext approach - go ahead and use main

commit 3998b4e10810edde3c209c5c3913883a4284131a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 23:37:44 2024 -0500

    Unused variable

commit 73915e4dd3c2c0b88c492ca0a3f6c843375dde29
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 19:38:08 2024 -0500

    Correct keypoint assignment

commit 12b4d0f79f767d677c5b717f03a475b91b70467d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 19:24:13 2024 -0500

    Whoops - remove mged_tol var in favor of mged_state.

commit abf2e1c3fd80b54d756235178be99985b61df011
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 19:13:45 2024 -0500

    Helps to actually use the return code...

commit 50f9e29bc81e4dfe56cc766215fa2df63164b844
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 17:15:30 2024 -0500

    Migrate keypoint logic to librt functab
    
    Compiles, but both this and the previous labels work need to be tested
    and shaken down - probably some breakage involved, since the regression
    tests won't necessarily see changes to these parts of the logic.  (Only
    the new drawing subsystem works with the swrast backend, so none of the
    MGED editing drawing paths are covered.)

commit 084b088917cb6dc27afbad85494fbc8e751e5079
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 13:13:46 2024 -0500

    Check for non-NULL ip

commit 5b106c6ec1397b565918d1a73960b8fb3c470a81
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 12:05:22 2024 -0500

    Only call out cases where ft_labels isn't enough.

commit 3d12a3452a2e7d252d93c9d60b89ba852cda2b1e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 20 11:54:46 2024 -0500

    Rework/simplify ft_labels callback logic
    
    Rather than setting up bv_scene_obj outputs, focus the method on
    returning label info.  This should allow both MGED and qged to use the
    same source for labels.

commit 5f80972733137cb6146f93199ad3c3c8dc71c3af
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 21:46:52 2024 -0500

    Split mmenu definitions into menu.c/menu.h
    
    Start trying to split up the gigantic edsol.c into more digestible
    pieces.

commit ae4b7c93a6359e7e7693d9fdc88c260dc365faf2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 15:52:33 2024 -0500

    Relocate shader specific code to librt
    
    "Shaders" isn't a concept defined at the libbu level, so move this code to the
    appropriate library level.

commit c2aaeafe75c8271483b0592ca316115aa127d8a0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 14:44:45 2024 -0500

    Relocate arb_vertices array to group it with other similar definitions.

commit 20212c0132b90c0a5037cb05bff0509754c2c601
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 14:20:45 2024 -0500

    Rename RTG.rtg_vlfree list to rt_vlfree
    
    Making the vlfree container a top level global since we've removed the other
    RTG entries.
    
    Thinking perhaps we should try to change the type of this to be something
    hidden and specific (rather than the generic bu_list container) so we could
    manage how it stores things behind the scenes, but that would have a LOT of API
    implications so leaving it alone for now.

commit 4a1fc738c305cca7b8cdde9ffd85222e6f745fab
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 13:04:20 2024 -0500

    Git TODO has been addressed.

commit 1e362e794e73713a8384605ff1d8b1ada124592c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 11:24:42 2024 -0500

    Relocate edit state rt_db_internal

commit bd8e649957a425f7b86ae566462321ccb34bc982
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 11:02:34 2024 -0500

    Unneeded externs

commit 1d158e7f05087ab1c92af45e5635dd4700d16e5b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:57:16 2024 -0500

    Shift es_scale into edit_state struct.

commit 720e7ed70bbeae35edfad2d06238de8c39056aca
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:44:54 2024 -0500

    Relocate origin variables

commit a7727f660cc81958a1ca6f1ddd9bebcfbc7985e4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:40:25 2024 -0500

    Relocate dm stashing pointers (and rename - they hold mged_curr_dm, not a list.)

commit e02d92057c91ebe9efba4eca8008a6e15f8f3c12
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:29:27 2024 -0500

    Unused variable.

commit d572d4fc93fd2f54833c0c1e75014fb7a17cafe2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:28:33 2024 -0500

    Move the scale editing variables to the struct.

commit a59d07104f2b51e6dcef5c1a9b9c81ecf3a0e987
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 10:20:00 2024 -0500

    Move the tran editing variables to the struct.

commit b6d328166c6176d9808c5f0a956491c1cbf54e14
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 09:44:28 2024 -0500

    Whoops, right - vlfree isn't in that container.

commit a9fe0a7963e93abcf89695fd74a4d1bb8682e502
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 19 08:06:58 2024 -0500

    Missed an initializer

commit ca404a1ee364341b8c6e3a520e151d998abafe6e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 21:43:27 2024 -0500

    Start getting a feel for what's involved with de-globalifying MGED editing variables.
    
    There are a LOT of these - this just tries out the variables specific to
    rotate to see how this would work and what the hot spots are in the
    code.

commit c80f16df6a68f1ea1c5135f12ef4a5b3636e153c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 20:53:51 2024 -0500

    Add a note to look into mged_dm vs dm

commit eb3e99550d3f3b06458af593500a41c4b4e4a871
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 19:55:29 2024 -0500

    Eliminate the last direct use of RTG.rtg_vlfree
    
    Still using the global itself, but now all code references to it should
    be of the form vlfree = RTG.rtg_vlfree - i.e. we are assigning it to
    some form of local variable.
    
    This sets the stage - the remaining changes now to achieve removing
    rtg_vlfree as a global will involve figuring out how to pass an
    application supplied vlfree through the code, rather than using RTG.
    Almost certainly some function and macro signatures will need to change,
    and we will need vlfree pointers in a few structs as well to reach
    things like librt primitive routines.  Biggest risk is making sure we
    don't end up just creating the necessary struct entries and leaving code
    paths with uninitialized/NULL vlfree pointers - that'll compile, but
    will obviously crash without a valid vlfree container.

commit 7350f955ace2045a58784c6a2dad885b69d11313
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 17:29:44 2024 -0500

    More RTG.rtg_vlfree adjustments.

commit 5238c67870ab6fce7008d7c77557910b73754310
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 14:19:36 2024 -0500

    Make a stab at removing libged globals

commit 54e02051417f66a9b4e678dd70d3213c49eb911b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 14:00:22 2024 -0500

    Function signaure updating in iges converter (on Linux this only shows up in Release building, apparently.)

commit b30ea1611ea40c47ddda3e6bc871c8eb13d8ee43
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 13:50:38 2024 -0500

    Ah, right - rt_pipe_tess has a function signature to match in table.cpp.

commit c3b00e13b192a62764ccf8efbc01a2792b062a1e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 13:44:24 2024 -0500

    More RTG.rtg_vlfree adjustments

commit 7040de805a2e4dc2bb39951a5f9c05141af90093
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 11:49:41 2024 -0500

    Remove various initialization calls concerning rt_uniresource - handled by rt_init.cpp now.

commit 3a68e6180abd6ac5190500ed67bf305671cca71f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 11:35:25 2024 -0500

    Add load-time initialization to LIBRT
    
    Like libbu, libged, etc. use an rt_init.cpp file to definite load time
    initializations for librt.  Historically, applications have needed to
    initialize the RTG.rtg_vlfree list themselves before being able to
    successfully use draw routines.  Rather than keep requiring that, we
    instead initialize it ourselves at library load time.
    
    Ironically, if we do eventually succeed in eliminating the global
    completely applications will be back to having to initialize their own
    vlfree lists, but at least in that scenario they will be managing the
    list themselves and will need to know about it - unlike the current
    situation, where the only awareness of rtg_vlfree in application code
    comes from them needing to know to initialize it a-priori.
    
    In principle this should also remove the need for initializing
    rt_uniresource, but deliberately focusing this commit on the rtg_vlfree
    initializations to limit how much changes at once for testing.

commit 1a7a14ac2a34f6460ae24a98e6c9084f0f1fb55f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 18 10:47:03 2024 -0500

    Do some more RTG.rtg_vlfree rework

commit 7053598a2276ca183c4c22c56a7719f91d7f96ea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 17:01:18 2024 -0500

    More removal of RTG references

commit bca99792f320972b28ec3a95a47b8d428b73ffde
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 14:32:00 2024 -0500

    Reduce MGED references to RTG.rtg_vlfree

commit f76e7da9f1eb6f3aecc023b3434d9d4342e41484
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 14:19:27 2024 -0500

    More removal of RTG references

commit 2275f6046a1a896e49a0d2e9d4e104bd6a6b52a8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 11:59:18 2024 -0500

    Replace explicit RTG references with local vars
    
    Migrate the code away from reliance on RTG.  This still uses the RTG.rtg_vlfree
    global, but except for local variable assignments the code is now referencing
    local variables instead.

commit 7d8e5a9a5f3aa9c6fcc68cdc171d0168cad5b325
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 07:25:36 2024 -0500

    First crack at turning mged_curr_dm into an entry in mged_state.
    
    Eventually will want to unwind defines, but leaving them for now to try
    and make the diff clearer.

commit 467df4df3552f7cd3343ceb5f8132dcc25ba2ca3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 09:34:30 2024 -0500

    Rework rt_find_identical_solid for intended use case.
    
    Rename original private rt_find_identical_solid to
    rt_find_or_create_identical_solid, since it will create new soltab structs.
    What we want rt_find_identical_solid for is to allow us to walk an already
    populated rtip the same way the librt prep routines would, in order to allow
    the calculation of inverse matrices as was previously done with Orca_hash_tbl.
    For such walks, we are not altering the rtip state itself by adding soltab
    entries - that work is already done.  We just want to repeat the walk itself to
    do calculations.

commit 6c4b917b23dce1a3c4c0120f1af5b9dd10ff51f7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 07:31:12 2024 -0500

    Add a note about some work needed for a public version of rt_find_identical_solid

commit b0462bae8c19e13392d95e368c522805f3aa2af6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 00:26:42 2024 -0500

    Console editing on Windows with yedit is user visible.

commit 2a89c2709813bf9499d55b4d7df2f6e4ae988cd1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 00:25:36 2024 -0500

    adjust comment

commit 3d3090e04f5d97b8cb0ddd50eb5e3dc5a6a095d0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 17 00:16:58 2024 -0500

    Update HACKING for current C++ standard

commit e67632b6d7c30f946a80a4fbe0ade2ebd20c8929
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 22:55:27 2024 -0500

    Mark tri_specific struct for deprecation

commit 55ea5d1a4731ef4fd832794ed9b65496b219bf7e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 22:51:54 2024 -0500

    Remove unused struct entry

commit 3584dbfdd8125fcf4e7ac6c2b8a21474734aa67b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 22:39:39 2024 -0500

    Remove globals made obsolete by new BoT raytracing work.

commit e378fdc58f0ae3edf332f509faf0edf1be277abd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 22:27:13 2024 -0500

    Eliminate the RT_* macros wrapping rtg_vlfree

commit ad8b99cb9538f0073202227f5c4bd32861baedd7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 22:05:36 2024 -0500

    Per (old) deprecation notice, remove RTG.rtg_parallel
    
    Only active use of this remaining was as an option variable in the rt
    code - make the variable local to rt itself and remove the RTG global
    entry from librt.
    
    That leaves rtg_vlfree as the last barrier to eliminating the RTG global
    completely from librt.

commit c9cbb041620a8fdb8e92a3030e69bb3ff7570b34
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 21:55:26 2024 -0500

    Move rtg_headwdb to MGED sources
    
    The rtg_headwdb entry of the RTG global was in active use only within
    MGED.  Relocate it there, as one step towards removing the RTG global.

commit 0c121142ca08cdb5240e67b2a2f6361f70ab6906
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 21:35:47 2024 -0500

    Unused

commit 0d121f0ade7561a476cae98f73c515fc5203f94a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 21:32:48 2024 -0500

    Eliminate the binu_types global

commit 19e3b5f11ab1f67b3d08d4a3e81d1711d4037366
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 19:58:17 2024 -0500

    Eliminate rt_initial_tree_state global

commit e90ca1e134b697bba66aa8fdbfb63e1866cfbd8b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 16:18:57 2024 -0500

    Start setting up to remove rt_initial_tree_state global.

commit 036c9b8acc46ee13369c4e428f6343194aa966a5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 15:29:18 2024 -0500

    Update platform symbol count, filter list for repocheck.

commit b6011d236f1d5e2827a5307a852ae60711b030b9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 15:19:05 2024 -0500

    Use the TCL_CHAN define in libtclcad as well.

commit 5db0a1dd692269e7ed0af2f3e956e85815d7aaa5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 15:01:19 2024 -0500

    Make broader use of the USE_TCL_CHAN ifdef

commit 268fc1f305ac54a206e21067a224f4b2ba8aefd1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:44:34 2024 -0500

    Unused

commit 543c0b030f0fbc3058448742c70ae490a95948b0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:43:12 2024 -0500

    If we're going to define MGED_DISPLAY_VAR, use it consistently.

commit 03388b0edb283ed21c24f7831a7d095352378f38
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:38:53 2024 -0500

    localize define

commit c693352ca896578e4e7f4bdb2a179f80e29f8bce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:38:00 2024 -0500

    unused

commit 234b4b597bb06b430d5f963a0417516925abcf4c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:33:00 2024 -0500

    Fold mged_db_warn and mged_db_version into the db ctx

commit 80579b24edeb8df85acfb8ad7949a04163ad2b64
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 14:19:10 2024 -0500

    Consolidate titles.h defines into mged.h

commit bc883397e6cb48b73f1576cd6378cfc7338cebb4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 11:04:13 2024 -0500

    Replace (XY)MIN/MAX defines with libged versions

commit ab4552d57065b3f00672d8a62f7554858cf068ae
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 10:55:17 2024 -0500

    Consolidate scroll.h into mged_dm.h

commit 7fd12408beed3917bed1f73e2fb359ff7d21cf22
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 16 10:51:52 2024 -0500

    Fold menu_item into mged.h

commit aa20d17dbbff3eab9a1c489b24836fd7e813c107
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 19:17:12 2024 -0500

    Correct the check for editor viability - if we don't know, assume valid.

commit b3a6e2b9006068828e6f3b19da43acedaa54288f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 17:07:23 2024 -0500

    Remove hardcoded editors, escape Windows style paths.
    
    Passing full path to yedit.exe, backslashes were a problem going through
    bu_argv_to_string.  Must not have been passing full paths to Windows
    executables through there before?  In any case, with the updated quoting
    this was the first successful use of yedit to do a "red" operation in
    MGED classic mode on Windows.
    
    While we're at it, clear out some more of the hard coded editor paths
    from libged and call bu_editor instead.  Need to look more closely at
    that call to see if it really makes sense there...

commit f1406c8032cf400032bc000d81069e5b318b302a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 16:30:26 2024 -0500

    Shouldn't need BUILD_ALWAYS for this when we're not debugging.

commit 802c4f68d8472d97c6b6ddb4491086ba73770f8a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 16:26:41 2024 -0500

    Try out the new bu_editor routine in MGED

commit 7c8164f00b12021b0f06c43093d5785d9a468670
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 16:05:52 2024 -0500

    Try to match MGED behavior more closely.

commit 36cf45665dda8b0106970d1d9a7a9e3c7db729ae
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 15:05:48 2024 -0500

    Integrate yedit Windows console editor into misc/tools
    
    BRL-CAD uses text editors for a variety of commands, and has
    logic to attempt selecting an editor, but the combination of Windows and
    console (non-graphical) mode doesn't supply an editor out of the box on
    modern systems (as of 2024 at least.)  Older Windows systems DID supply
    edit.exe, so modern Windows platforms have regressed in this particular
    regard.  Console mode with no option to run GUI apps is a rare
    configuration for Windows, and if a user has sufficient privileges they
    can install 3rd party alternatives, but the fact remains that on a
    vanilla non-GUI system of that type where a user does not have either
    the privileges or internet access need to install software BRL-CAD's
    text editing commands will fail.
    
    On all other targeted platforms we can usually assume at least the vi
    editor (which is rather "expert friendly" but at least is present) so
    Windows console mode is anomaly.  The CMD replacement shell at
    https://github.com/malxau/yori has implemented a replacement for the old
    edit.exe Windows console text editor, which would at least let us
    supply an edit.exe-alike as a last resort.  It is MIT licensed and
    should be a fairly straightforward compile on Windows.  Unfortunately
    yedit is specific to Windows, so it solves the fallback problem only for
    that particular case, but that seems to be about the best we can do
    currently.  The Windows console environment is so different from
    Unix-style environments that finding a simple, portable, liberally
    licensed console text editor written in C/C++ with minimal/no
    dependencies is a difficult challenge.

commit 0ca78f66f7d5cee87998d3eb02f07b010de317c1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 13 14:06:18 2024 -0500

    Set up some tests for new bu_editor function
    
    Setting the stage to consolidate editor selection logic.  Added unit
    testing, although it will almost certainly fail on Windows without the
    yedit bundled console editor in place.

commit 348b017bba68a6e8d7d538bab22a5f2aeb2ea7e0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 20:14:30 2024 -0500

    fix snprintf

commit 5c8216b66c894562fe0c215c9af2520561fa0547
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 16:59:08 2024 -0500

    Add a TODO note about maybe building up bu_which to handle Win/OSX hunting a little.

commit 7d16642bc57d93b95694198fbc0284b428702bf9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 16:41:13 2024 -0500

    List a couple more editors, tweak ordering to put 'easiest' editors first.

commit 49be552d3cae2f7d0f0b45dcc98e7942f38d61d1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 14:41:23 2024 -0500

    Checkpoint some work on a libbu editor selector
    
    We've got this code in a couple places, in one form or another, and there's
    nothing app or lib specific about it, so try to think about what a canonical
    implementation would be that could cover all our potential use cases.  At least
    one of the current implementations also encapsulates logic to launch command
    line programs with xterm, but that feels like it should be a separate
    consideration so leaving it out of this function.
    
    Not hooking it up to anything yet - need to write unit tests and try on
    multiple platforms first.

commit d7f01ce34e0a1e194403348c62c09fcbb7cc7e82
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 11:39:07 2024 -0500

    Remove unused red.c file

commit 5d927930a95552167fe09ad54c4e7cf9b0689e67
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 11:29:33 2024 -0500

    qray.h isn't actually used.

commit a445f49717a12fcb33891347919cfc6e8ab0b540
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 11:24:32 2024 -0500

    Fix embedded license file list

commit ae520fdd3f5d23005d5efb1bab7efbd3327a154d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 11:14:13 2024 -0500

    Remove old, unused comb bool lexer/parser code
    
    Unused code.  Looks like an effort to use flex/bison (or lex/yacc) to handle
    comb boolean tree textual specifiers.  Revision control history has this if we
    want to revisit.

commit 5c96ec54092355be4e8b637b6c00c5494997a88f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 9 11:12:33 2024 -0500

    Remove unused header

commit e627b01cfec2d0aa0a52c4f89a63ee91d6dcd8c3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 7 12:57:57 2024 -0500

    Scrub out a few more stale/unnecessary declarations

commit aa4e33d0d91505f2b940aab657b56f88a2f6cc4c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 7 12:49:12 2024 -0500

    Fold interactive flag into the mged state

commit 9718c3f80b03e483f9ee18e3cfa03ad6ab6c1ebc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 7 12:41:35 2024 -0500

    Little more mged.h scrubbing

commit 8ae832a77b57f258047e519f500ba5a3c03acf51
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 7 00:19:53 2024 -0500

    Rename STATE to GEOM_EDIT_STATE in MGED
    
    To make it clearer that STATE is *not* the global MGED_STATE
    container, rename it to reflect its purpose.

commit 59e63ea265f88cf0af4fcf66f89600ecadd94b1a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Dec 7 00:00:40 2024 -0500

    release is used only in attach.c

commit 28a30dbefec52a02c5e95cbaaf462fd29074193d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:58:35 2024 -0500

    just use the plain Tcl call

commit fee7659d2b7a07797840cc880b46973cde3f89b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:55:10 2024 -0500

    Remove unused

commit 9f79e7b62701bc01336b7460cae2835f8424a0fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:49:06 2024 -0500

    funtab struct also unused

commit 8979f7ebd5fcbd00a08baafe0aeb5abbf31ba900
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:42:35 2024 -0500

    remove local2base and base2local defines

commit 1f6bc283275c3ad4cffb69429831c39fabb37a15
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:38:05 2024 -0500

    unused

commit 35ebefdb497c9aee0b417586b0d4397e56527599
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:29:19 2024 -0500

    Make db_update part of the global db context.

commit 423f354c122c64a9e261de0e95e6964535aa3ea3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 23:12:10 2024 -0500

    move track-only variables to track.c

commit 9debbd1cf932ad04bd005ddfb919d91bce68b0df
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:59:17 2024 -0500

    Not using these much - just use 0 and 1

commit d378fd330516a19d68c62a3cf1b0e26147c09a35
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:56:28 2024 -0500

    Make dpy_string non-global

commit 5592c18ffcab16c3c1348be89309a1dfe5969df0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:50:26 2024 -0500

    mged_cmd actually wasn't being used.

commit 87338d64f13e942b969cc5ee8b2c5e6a80e5554d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:46:42 2024 -0500

    unused

commit cbbcba026eab71971466530a330c8dde219b45fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:45:23 2024 -0500

    Clear out the rest of the error macros

commit c0ee705ab69aae9c4d2f3ea8690965b92e9c9c57
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:29:24 2024 -0500

    Not making much use of this - unwind

commit 234018162c25163065e71505e6c0746a9f166bde
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 22:19:47 2024 -0500

    Make classic_mged and input_strs part of mged_state
    
    While trying to move cmd_stuff_str to cmd.c, ended up de-globalifying a
    variety of input string vls containers in mged.c, as well as the
    classic_mged state flag.

commit 361a23089848f4e7e735921df8144499943531c5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 21:17:35 2024 -0500

    Reorganize a bit and remove/localize some externs

commit 63e167d84d9734568d6ec614994a2ccee20369dd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 21:05:40 2024 -0500

    Make main the last function in mged.c

commit 5e970b7e3b89a7d1050b937e025d5c5509520e57
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 20:32:07 2024 -0500

    output and refresh handlers are used in only one place - move

commit fc7ea7d929ea213d3787c3a619e58f5cb240debf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 20:29:24 2024 -0500

    Don't need f_opendb and f_closedb in mged.h

commit f7e993b4f9d5fb725632eaf417f80d9ee5eee67b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 20:24:39 2024 -0500

    mged_init_flag is specific to mged_opendb_ctx - put it there.

commit 149d41b8e7a13fb49ff7446e8f20967dfad9dc12
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 20:11:38 2024 -0500

    Whoops - need to set the context state pointer before calling the close callbacks.

commit 92ba88caa7b7eac6fb1060fbb7933b873553ceca
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 18:50:04 2024 -0500

    Fix function signature

commit dc2fbcaf6561a6c23b7ebd0301102f30e32be995
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 16:10:53 2024 -0500

    Consolidate the various tolerance values into a struct, put struct in mged_state

commit 3894ad6745802e0270c2b0d9c0d0aba29d3080b8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 15:55:28 2024 -0500

    Remove the defines for the old global variables, make it clear in the code where we are using mged_state

commit 0017085ce426516475525af08529b579fa79bbba
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 15:47:45 2024 -0500

    Revert "Don't keep running doEvent when MGED exits"
    
    Grr.  Trying to delete the event handler is segfaulting.
    
    This reverts commit ee8ecc5c05286a1a624703bb57c026892d16d2b8.

commit dae4cebeb2007f326556bb4b4e1100d90a03a30b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 15:38:07 2024 -0500

    WDBP -> mged_state wdbp

commit 58a6beff13fde5fdd96bcded43ebef41c3e70334
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 15:29:43 2024 -0500

    Switch out global DBIP in favor of mged_state
    
    With the other mged_state work in place, this one isn't too bad.  For now,
    doing like INTERP and just changing the define, but will swap that out too
    later.

commit ee8ecc5c05286a1a624703bb57c026892d16d2b8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 14:50:05 2024 -0500

    Don't keep running doEvent when MGED exits
    
    Rather than trying tricks in set_curr_dm and doEvent to avoid checks when the
    state is collapsing on exit, just stop running the doEvent callback before we
    begin teardown.

commit 87eaad9f6b3fd0689e2fc464a852cd572118d23e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 12:42:31 2024 -0500

    Remove the global INTERP in favor of mged_state
    
    As with GEDP, there are a few cases where passing the state through is tricky
    and we fall back on using MGED_STATE, but try to pass through the pointer to
    make the code less dependent on globals.
    
    For the first pass left INTERP in the code and changed the define.

commit 9dc8b0fb5bd3024ee6f51ba8eea2e131e954d027
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 14:36:45 2024 -0500

    Shouldn't need the GED_EXPORT prefixes here.

commit 1b1f15d5dfc9cc8f822f61f0363dfeae8924c2bf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 11:09:36 2024 -0500

    No need for a separate interpreter parameter to mged_setup

commit bfc2342dfc8fd460d26c28b9d750e0aefe4eb7af
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Dec 6 10:32:19 2024 -0500

    Add some sanity checks for mged_state void* casts
    
    We have to be a little careful about this thanks to the dm calls inside
    doEvent, but add some ability to sanity check mged_state getting past through
    voids with a magic value.
    
    Since we don't control when doEvent gets called by Tcl/Tk, during shutdown when
    we're tearing down our data structures we may hit a case where Tk wants to
    handle some event after we've already closed out the mged global state
    container and calls set_curr_dm.  In that particular case we need to be fault
    tolerant. We're closing down and it's fine that set_curr_dm isn't going to
    work.  However, we don't want to access the GEDP after free either, so check
    the magic and return if things look invalid.
    
    There is probably a better way to handle the doEvent calling of set_curr_dm to
    avoid this issue completely, but trying to be minimalist about this particular
    change.

commit 74683d49add0d8fd8fcdc3e8594081f0811cab14
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 19:52:33 2024 -0500

    Make GEDP a non-global variable in MGED
    
    The global state in MGED has long been a problem when it comes to code
    maintainability.  Try starting small(ish) and make GEDP a non-global
    variable in the MGED code.
    
    The global variable is MGED_STATE, which is roughly equivalent to
    qApp in Qt applications.  However, we try to pass it to functions
    rather than just using MGED_STATE everywhere - hopefully, we'll
    eventually be able to eliminate many globals and reduce the scope of
    function inputs to structs specific to their uses.  Passing in the
    state parameter is a first step towards that goal.  If we're using
    MGED_STATE somewhere other than the initial allocation or header
    definition, it's generally because some constraint of Tcl makes it
    difficult to pass the state variable through the logic successfully.

commit 014aad75e147b17e1455c42e1d5e6859742f092c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 5 11:26:08 2024 -0500

    Explain why the set_curr_dm calls are in doEvent

commit 2090ad2915f3c3b1f4f924a1d2ee9d520a0f5920
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Dec 5 08:06:14 2024 -0500

    Missed a couple ged_cmd_valid uses

commit f7bab23c1fd94732c8a7dc441aa21746c2c5e312
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 21:58:01 2024 -0500

    ged_cmd_valid replaced with ged_cmd_exists and ged_cmd_same
    
    The design of ged_cmd_valid was rather clunky - break its two functions
    out into individual, simpler calls.

commit 6f3620e4067748b183fee1f610889d9c1d17de0a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 21:56:45 2024 -0500

    Fix test command name

commit 91eec7fe5a2963297b7404229c5787b4614a3166
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 21:19:35 2024 -0500

    Set up to have MGED report on GED/MGED command name collisions (commented out by default.)  Looks like around 50 commands at the moment.

commit 57373f48067604ecf3f02b55b0ae05fec6e63855
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 21:07:12 2024 -0500

    Add a routine to test whether tclcad commands collide with GED command names.

commit 1e67ad61ea9964867dd2f7b932876dbc7684ecca
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 20:39:28 2024 -0500

    Add small program to audit GED cmds against primitives list
    
    If we want to uniformly have a GED command for each valid librt
    primitive type (which makes sense, give most primitives will likely have
    primitive specific controls/settings/etc.) it would be good to have a
    way to detect any missing commands.  At the moment most of them don't
    have commands, so this isn't something to turn on as a unit/regression
    test failure, but this establishes how to do it.

commit 2b935ffaf8932c0a493e116012101a553b669aaa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 15:43:32 2024 -0500

    Undo introduction of data passing container in fbserv
    
    The Raytrace Control Panel in MGED seemed to have a working Raytrace
    button with this, but the fbclear button does not work.  Still not sure
    what the mistake is, but for the moment see if we can put back the
    working configuration.

commit d34b98ab771dc841838880e4a4c15a3a96d7e9fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 12:27:56 2024 -0500

    f_release was setting status

commit b9a5949b787519c4a23be308f1201435b0e93d11
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 12:00:13 2024 -0500

    Separate out the f_* functions in MGED
    
    Typically these are used to back Tcl commands, but there were a few
    other uses in the MGED code where they were being called directly.  A
    few of the calls passed in NULL clientdata pointers, which won't work
    once we shift to non-global GEDP.
    
    Simplest option looks to be replacing the raw f_* calls with Tcl_Eval
    calls which will go through the callback table rather than us having to
    hand-feed the f_* functions the correct inputs.

commit ab5bc44d43c94dc8929ef1c3d2908a5b7d058647
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Dec 4 11:16:12 2024 -0500

    Consolidate platform specific fbserv functions
    
    Trying to keep everything in sync during the refactor was getting
    annoying, so use a Tcl Channel based define and consolidate the two
    different sets of functions, using ifdef USE_TCL_CHAN to select the
    necessary logic just in those cases where it actually differs.
    
    While we're at it, don't hide the dm_netfd and dm_netchan globals behind
    defines - we'll need to deal with those at some point, so make it
    clearer what they are.  As a bonus that clears a WIN32 ifdef.

commit 80d3f5954ccba3501b7fd093620104c0ed97b549
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 3 20:34:51 2024 -0500

    Fix bu_vls_sprintf

commit 856ab4718289065631c0753ce175da94a383d103
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Dec 3 17:23:33 2024 -0500

    Remove Orca_hash_tbl and inv_mat calculations, add rti_udata
    
    Rather than having a one-off special case hardwired into prep, provide a
    generic pointer allowing users to attach arbitrary data to the rt_i struct.
    This also removes the one-off calculations of inverse matricies on regions with
    ORCA_Comp attributes set.  rtshot example demonstrated how to use those
    matrices - update it to use a generic implementation of the same
    inverse-matrix-on-region-with-attribute functionality.  Since the inverse
    calculations aren't built into the prep, the client code runs a second walk
    performing the specific calculations of interest.  Needs more testing to make
    sure this approach produces the same results as the prior approach.

commit 87bd39cc818afff26310c7832ab2af5cca263453
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Dec 3 13:45:10 2024 -0500

    pass new struct instead of fd
    
    Windows fix for 617d150

commit 10d09b26106e987721090aa57d776b23979cb23a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 21:46:13 2024 -0500

    List libged "how" command for deprecation, add replacment.
    
    Yuck yuck yuck.  In at least some cases this appears to be returning an
    internal private libged numerical #define value as textual output.
    Should be human understandable, not using a number, and I don't think
    this deserves to be a top level GED command anyway.  Plan is to use a
    view obj [name] info mode subcommand to report this instead.

commit 0c332d5d636bc1fa1c5b86ca21b425ad26a79569
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 17:02:57 2024 -0500

    Only need one default terminal width define

commit 70050f5602abaa4140e1eaf1ee2850e8a1b426fb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 17:01:17 2024 -0500

    Relocate data structures only used in one plugin

commit 04f7e3d2b702dc1ce3e9bd8115650047d134139d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:53:01 2024 -0500

    Unused externs

commit 2f877ddf4054fc17ba6142921603e7ade5e0bc16
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:51:53 2024 -0500

    Hide _ged_client_data struct

commit c3ff6fe4836bcdea8f272d1efbf539e679b2546b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:48:18 2024 -0500

    Move the metaball code to more specific files

commit 7ac44ffb81c69f820363fc6bada1b63d0b22cb92
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:37:38 2024 -0500

    Move rt-datatype-only metaball function to librt

commit 0efd1be0f9f94e830da72db4e8eb501e6153d592
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:27:53 2024 -0500

    Move dup-only function to dup plugin

commit ef276fb6ebfb171ad17e2da45e8f48f54f019638
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 16:10:54 2024 -0500

    Move pipe scaling into edit with other scaling codes.

commit ba7128751469bb7ab5d8ede0619e6faad6ad02a1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 15:58:21 2024 -0500

    Move _ged_pipe_append_pnt_common to pipe plugin
    
    This will take some thought long term - probably, edit should be calling
    primitive specific commands if it finds the operations being requested
    are not the generic rot/trans/scale varieties...

commit a45112085d883d31e0895f4a29e2c0eadd61106a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 15:55:35 2024 -0500

    Push pipe-specific functions not using libged data types to librt

commit 2a40812668fd3c19d7c6aad80564ebb181603737
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 15:41:26 2024 -0500

    Data type wise, these can live below libged and they're pipe specific.

commit 0b292be188e79feae91a2ee19075e2a7179ec924
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 15:20:37 2024 -0500

    Merge edarb into edit plugin

commit 37ac02f4b8b5fb98452c396f5190c860a00ffcf0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 15:04:03 2024 -0500

    draw_walk_tree is used only by draw_gather_paths

commit 6a8da4ab6e3078964039fcfb4abc93faedc41667
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 14:56:39 2024 -0500

    Consolidate more code into edit plugin

commit f4cddf26bfda1ee0c4a3e620811c2b93594e6855
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 14:40:43 2024 -0500

    Shift some editing commands into the editing plugin
    
    Lets see if we can consolidate some of these into one plugin.  Not
    subsuming the commands under edit (at least, not at this time) but there
    are some potential advantages to grouping code with a similar intent.

commit 2b7f3fe1e5a15214f856d2a296e8c72ea07c1053
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 14:35:28 2024 -0500

    Use a name more reflective of temporary nature
    
    Looks like the old name was conflicting with libnmg's nmg.h, and anyway
    this is supposed to act as a temporary catch-all while logic is being
    reorganized so make that clearer with the name.

commit 9a47f3a1389bcb4eb072a066635978ae60c64f24
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 14:02:00 2024 -0500

    Move some more declarations to a specific command

commit 9f83c3b19d5ed747e1ccd0434b2f83f483b89612
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:46:34 2024 -0500

    Shouldn't need to declare these any longer

commit f0e43ba6b9b2520e7b1452d17219c1a1f37b9bcd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:44:23 2024 -0500

    Move select-only function to select plugin

commit 0e906769adcd2a4c96e950b02da6ea6542116d40
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:41:29 2024 -0500

    Remove declaration

commit 5c852483e7a2243c08e6ba23b62b1b4135c1713f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:30:58 2024 -0500

    Move drawing specific logic to GED draw plugin

commit ccca1356ea88fbfdd957764c634376eda2d0819f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:15:03 2024 -0500

    Consolidate big E command into draw plugin.

commit 173e343d4b2a88690861535710197987b95d6e84
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 13:01:10 2024 -0500

    Add headers

commit 681303b7975d42d9f893468eddce46868413423b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 12:06:59 2024 -0500

    Relocate dl_add_path next to its use

commit 483dcab6382284f7d77a95337596984e01ed95ee
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 12:03:13 2024 -0500

    More reorg/rework of private libged display_list logic

commit 3fe86dc0bc946cf7010050b307f2beb48f1bae98
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 11:47:57 2024 -0500

    Doesn't seem to be a need to declare this

commit 16a6be60f1508b3b125d627e4c76fac41d749241
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 11:38:31 2024 -0500

    invent_solid was only ever public as a hack for MGED - can make it private now.

commit 7d9bfad8cb8da862a20945090486f812ac593be3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 11:24:48 2024 -0500

    Move logic to eliminate final MGED level use of cvt_vlblock_to_solids

commit c258d76f2f51c2e947fccbb2c60a572e2dfed329
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 10:51:38 2024 -0500

    Move labelface to libged

commit a1a21addef90d78be85c8e6212ea6a10cc1be2b7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Dec 2 10:10:03 2024 -0500

    Shift labelvert command to libged

commit 69c354492708853c534b3d153ff43890b237d66d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:17:24 2024 -0500

    struct is specific to joint2 - move

commit a3e2bc2b51f88a7bf413d30005347e32e6c61e53
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:15:34 2024 -0500

    unused

commit 00c56c637aac7d2790c45a98195e6e01309d3fd5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:13:06 2024 -0500

    Move dl_set_illum to illum.c

commit 0ca9a5687134899e473bc58276c2a525478a275e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:04:48 2024 -0500

    Move dl_set_flag to rtcheck.c

commit 5ecf4654134fcc868505afd2d666561d2df7004d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:03:51 2024 -0500

    Move dl_set_wflag to nirt.c

commit 664b2fc4685a540127339e18cc3a9b7bf2ae5bfb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:02:26 2024 -0500

    Move dl_zap to zap.c

commit e345a1c9e5eebaffe55d13774cbb938661b7df39
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 16:00:43 2024 -0500

    Move dl_how to how.c

commit f6f699b65bbc1945e7947da3274effa274ec02fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:59:28 2024 -0500

    move dl_plot function to plot.c

commit fdff6b4f8112e8c5beb0f9cb89c0d8d34e5e57cf
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:57:08 2024 -0500

    Move png specific logic to png.c

commit 7de4f0c62da510f151fe21e441307ece6f5408c3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:49:49 2024 -0500

    relocate logic specific to solid_report

commit 2ef03e4e8acb93708697a53233cd520e36a6275a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:47:26 2024 -0500

    relocate functions specific to _ged_rt_write

commit e0ffdb2586f7300252e3f5062ea5a6ae54bce35c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:44:00 2024 -0500

    Move select-only functions to select.c

commit 4c04f70467e8595578bd4a3a6c427f5e75ee6fb1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:41:36 2024 -0500

    dl_set_transparency used only in set_transparency

commit 7f287789c86148b3708bfcd5245646c081149074
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:33:31 2024 -0500

    Check for cmd recursion, as well as callback function recursion.

commit 5af5ed51be83011949a61911ed559a873d713289
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 15:24:01 2024 -0500

    Move logic specific to ps command into ps.c

commit d9e003241e961861a0334907ec878ca09daa0218
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 11:54:13 2024 -0500

    Try to add a convenient way to spot recursion in callbacks.  Probably should do the same thing for the ged_exec cmdnames directly.

commit 76a6b19bffb06e26ee0fdc8d9b580d5d1ac77942
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 10:53:35 2024 -0500

    Not yet passing contexts to dm this way, but replace ged_ctx with something a little more flexible.  May not be final form yet.

commit 6aaef8d1dc17b7e7b7577e9aaf7a1c300891d239
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 10:13:04 2024 -0500

    This issue was due to QtSvg not being present.

commit 829233b0c25439e6adf935a9627cd43b19c0bbae
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 10:11:01 2024 -0500

    Shouldn't need duplicates of the fbserv_obj function pointers in struct ged

commit 95250a715a1b87287dd2bb845e4211656c3013e8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 26 06:41:41 2024 -0500

    Remove ged_subprocess clbks from ged struct
    
    This one was trickier, but I think I found a way to eliminate the
    hardcoded struct pointers for the ert callbacks. (qged was using these
    to update the state of its raytracing button based on either a button
    launched raytrace or the ert command.)

commit 206a6a065a3b2cd26f47cf9c6e82ce3cbb701cf1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 22:23:15 2024 -0500

    Replace opendb/closedb slots in struct ged
    
    Getting more serious now - removing and replacing the opendb/closedb ged
    slots.  These were in use not just by gsh and qged but MGED as well, and
    the latter's use is the most non-trivial of any of these conversions
    thus far.

commit 86b6980831ddf928c977e1112bc3bc189d8dd76f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 21:41:58 2024 -0500

    Add some notes

commit 0367d400c8951e232b33173da6bea4ff30d00446
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 21:32:11 2024 -0500

    Remove clear and quit specific callback slots in struct ged
    
    Command-specific callback assignments remove the need for these
    particular slots in struct ged.  For the moment only gsh was utilizing
    the ged versions of these commands, but need to look into migrating
    qged/mged/anything else with quit and clear commands to do things this
    way instead.

commit 867c4edd75a27dbd8d0a9a886f5717376cc0f147
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 21:16:46 2024 -0500

    more thoughts on mged+libged

commit 179715fd86aeea2b073738859b684ef4396323f4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:45:44 2024 -0500

    Raw numbers aren't very clear - make it clearer what their role is in the function calls

commit 2081dbfaa0c4eb54aba60e09a97a190972c4e9a9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:35:31 2024 -0500

    Add a TODO note about mged cmd table.  Same probably applies in libtclcad.

commit f42e6a017890982012a056e3bd42af91e1469ed9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:25:04 2024 -0500

    Remove dupicate (and wrong) ged_interp assignment

commit 45265e4602228a034f2af0e6ce8fbe8ce0949e38
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:22:59 2024 -0500

    First successful use of a cmd-specific registered callback function to run search -exec

commit c1598344cec35daccf0c9beb56788fdccc33b2b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:12:52 2024 -0500

    Whoops, assigning wrong user pointer.

commit e02f672609098db18aa49e5044e9d006180fc509
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 16:05:59 2024 -0500

    Corrections

commit 0a311af42c211aff76ff31a4962f4356ba486fdb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 15:20:17 2024 -0500

    Allow for a "during execution" callback definition.
    
    Thinking about the search case, it's not pre or post command execution but is
    insteadn passed to search for execution *during* the command run.  Allow for
    this case in assignment and retrieval functions.

commit d50d11872a507fe68d229e9807b606b31ccb6d4b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 15:07:24 2024 -0500

    Rough in mechanism to set and get per-cmd GED callbacks
    
    Not testing this for real yet, but put in place the skeleton to associate
    callbacks with command execution via ged_exec.

commit 48fca109a54dba94a9c9bb5b59ba06735d4c0768
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 15:01:55 2024 -0500

    Oh, right - newer gcc's C++ One Definition Rule [-Werror=odr] flag is cranky about having two search copies.  Try some renaming.

commit e7084c3cf98ce9ddd9fa076dcae0f34eecda58fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 13:31:27 2024 -0500

    Add in compat code to make db_search change minimally impacting, deprecate old signature
    
    This is a breaking change if we just yank the old db_search_context type and
    change the db_search signature, so we'll put in the older code under the
    db_search_old name, list it in CHANGES, and do the deprecation for the previous
    signature.  This lets us have our code use the new signature while still
    allowing a regex to keep the old code working for a while.

commit 2a0a53f622ba5c0e5e6747a9ec2abc1433339de4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 12:47:09 2024 -0500

    Make the db_search_context container private
    
    Ultimately most of the utility of db_search_context is internal, for passing
    data around the implementation.  The caller can just pass in the callback and
    data directly to db_search and let the implementation manage it internally as
    it pleases.

commit 7392e07a25c40368f62acf280a71c580f9df677f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 12:09:26 2024 -0500

    Simplify/cleanup search callback logic

commit 4f789b8a23be57dbb652ce42112e6a94b213d162
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 11:28:31 2024 -0500

    Try creating an internal container

commit 45314f404d71433227bf54f8ceaf48c7a289cf4f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 11:00:49 2024 -0500

    Need a void to avoid -Wstrict-prototypes error.

commit 429c35054f62483ad5c659859cfa604a170ffe1b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 25 08:14:53 2024 -0500

    add some notes

commit 7d5751f8835406067f06afbf38cfd4dee6b3ec30
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Nov 23 23:33:22 2024 -0500

    Start thinking about what a hidden implementation pointer in struct ged would look like.

commit 8d78d21b57e1399fb30701589d8255280fe143ed
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 16:33:58 2024 -0500

    Explain why wdb uses local ged containers
    
    Figured out what wdb_obj is doing with its local struct ged containers -
    they're deliberately avoiding the need to reference global MGED state in
    this logic.  Update comments.

commit d789f4582b124c474e29895e584a1bea1a614be1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 13:36:28 2024 -0500

    Phew.  Looks like most of these are in the other libtclcad command table.

commit b2547932352fb708126b129ee7df6234ff586160
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 12:57:45 2024 -0500

    Convert the readily convertible cases of ged_exec to wrappers
    
    For any cases in our code where we are using ged_exec simply to fire off
    a pre-defined command, use the wrapper so we will get a compile time
    breakage in the case of a command rename or removal.
    
    Cases where we are still using ged_exec warrant scrutiny to make sure
    it's a correct usage.  There are some (gsh and qged command lines, for
    example) where the intent *is* general command execution, and a couple
    cases where there are multiple potential command names coming in from
    the caller that are passed through as-is (though the latter are
    problematic in that we're still losing the compile time validation.)
    There are definitely a few cases in libtclcad that are straight up
    broken - I tried to label them as I encountered them.

commit 4edadfd14cee0d560052949f325c60b73c317619
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 11:38:36 2024 -0500

    Remove libged TODO item - prototype complete.

commit c3014be538c3b4c68eecd61e4e92bbff13f722a4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 11:29:50 2024 -0500

    Make most of the remaining ged_exec commands in the libged code explicit wrappings.  A few are deliberately left as tests or in cases where non-specific command execution is the intent.

commit 31d7c8bce3d7338d9fe3cfcff522631943331f84
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 11:24:09 2024 -0500

    No longer have ged_ls, not validating argv[0]

commit 0671df2ed28855d9638fd8c0516b2fc2c0481cb5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:46:33 2024 -0500

    Remove unused defines

commit 805fff9ef7780e6607f60433950ef75ad2517285
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:39:30 2024 -0500

    Remove obsolete exec_mapping file

commit e6e3b7a089bed8ede0d7a56c393db64d5560b329
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:32:07 2024 -0500

    Eliminate raw ged_exec calls from the plugin code
    
    Apply the use of the autogenerated wrappers to all plugins.  Already
    helpful - caught a few cases where ged_exec was being called
    incorrectly.

commit 6f3465999f40f0d63d5aff47ac3f3bfccb67e4de
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:30:50 2024 -0500

    vrot is like mrot - we don't want a ged_exec here

commit 2c2f375b9d03e8efcf16f6e40673e5f9bf7937ec
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:21:20 2024 -0500

    argv[0] for make_pnts follow-on ged_exec can't just be a copy, or we just keep calling make_pnts without ever moving beyond the wrapper.

commit f5b491d4f5b1aaa7622d1cb13cbc3dd39c7dc245
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 10:03:51 2024 -0500

    mrot command exhibiting incorrect behavior
    
    Looks like ged_rot->ged_exec wasn't the right mapping for mrot - in this
    case, it just calls itself again with incorrect arguments and errors
    out.  Restore the older behavior of calling ged_rot_args and _ged_do_rot
    present in the original ged_rot function.

commit 02bea82bcd42cb8c1db49a0a6e53ecc47d7d4c97
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 09:21:59 2024 -0500

    Adjust how the ged_cmds are included.
    
    Simplify the prefix, use BRLCADBUILD to guard a more general inclusion
    of ged_cmds.h rather than doing it per file, and use a template for
    ged_cmds.h so we can provide better explanation.
    
    Placing ged_cmds.h in a general include location so it can potentially
    be used in other BRL-CAD code - anywhere we are hard-coding a ged_exec
    of a specific command we really should be doing this to enlist the
    compiler's help in catching renaming/removal errors.  Whether it should
    be actual public API is a separate concern, but as long as we don't
    install it and guard its include with BRLCADBUILD it's internal only.

commit 1c70cc55749ff578f07086c9b3ff3750593c5ff6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 22 08:28:00 2024 -0500

    For now keep cmd args execable with raw ged_exec
    
    Until we know the path forward for sure, keep options option.  As long
    as the raw argv strings can be fed to ged_exec successfully, we can
    update the whole codebase and still revert to basic ged_exec calls with
    a single regex.

commit e4062f3f1d0b3b4cde043cc1fb7575fc87407b75
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 22:40:06 2024 -0500

    Add a note about possible approaches for commands with many subcommands (bot/brep/edit/etc.)

commit e49134f4dc13a30d0f4e20923966cb6676db8dd8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 22:22:31 2024 -0500

    Turn off debug printing

commit 604a77baacb8ffebb95c4e3b64e057ce16f94456
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 21:58:17 2024 -0500

    Make argv[0] string setting optional
    
    If the ged_exec_* function name encodes the command name, there's no
    reason to force the user code to set it.  There's no particular harm if
    they need or want to for a specific command, so allow it, but we have
    the info to (literally) fill in the blank so go ahead and do so if there
    is one.
    
    The advantage in doing this (beyond cleaner client code) is that a
    command defined in this fashion can be automatically renamed
    successfully with find -exec and perl.  For example, if rm subsumes
    killtree then s/ged_exec_killtree/ged_exec_rm is a one-and-done if the
    calling code isn't also setting av[0] = "killtree";

commit c50666383a43285bfdb36b4ad7a97ca6c80348e9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 21:16:46 2024 -0500

    Document what the right way to prevent plugins using raw ged_exec is in the general case.  If we extend this to the libged library sources we'll need to tweak it slightly, but the same general idea should apply.

commit 4738e0eaef4d69d5ccbef5c2473fe6996a375239
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 20:54:52 2024 -0500

    Right - automatic functions need DECL wrappers
    
    This reverts commit 313f945b4a0dd2d7598c7ed87b9f3f1d603e2fcb.

commit 313f945b4a0dd2d7598c7ed87b9f3f1d603e2fcb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 19:43:29 2024 -0500

    Revert "Initial test of automatic functions for ged cmds"
    
    This reverts commit b2519bd890fc8b952b495086b2f2b39a98dd3cf2.
    
    Breaks a regression test.

commit b2519bd890fc8b952b495086b2f2b39a98dd3cf2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 16:44:27 2024 -0500

    Initial test of automatic functions for ged cmds
    
    This tests out a mechanism to set up automatic compile-time sensitivity
    to situations where commands are renamed or removed, but are being
    execed by other LIBGED commands.
    
    We have a scanner read the plugin source code files to determine the
    active GED command names.  Using that list, we then define a header and
    wrapper functions.  The wrapper functions can be called in lieu of a
    direct ged_exec.  When the code is changed and BRL-CAD is next
    reconfigured, the newly generated function set will reflect the command
    changes and callers of the wrappers will see a compile failure.
    
    This isn't a full conversion of libged to the new approach, just a few
    commands to test it out.  The goal here is to avoid a situation were we
    don't find out seldom-exercised commands are broken until many releases
    later when someone tries to run it.  It's not perfect, obviously, in
    that changed command options can still break things, but at least this
    way we will have some minimal detection of changes which are guaranteed
    to break things.

commit a0587001a14bd8673e497681fe748262a0ab9dde
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 14:05:26 2024 -0500

    Consolidate boilerplate for ged_plugins into function

commit 0dbecd520a60a4cb2afdad28bbd94da1c30693ac
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 12:13:16 2024 -0500

    List more mGed object commands to check
    
    In light of the vslew command not working, decided to try and list out
    other Tcl commands being run onthe mGed object and see if libged knew
    about them.  Not sure if all of these are actually supposed to be libged
    commands or if they work in some other way, but given the vslew
    situation...

commit 6e2e7746ca15b667060a292e089781e1d2467aad
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 11:31:18 2024 -0500

    Add a note about an experiment to try with libged

commit e9d926a8e484bf455eab657ff1a6282aa8e6cab8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 10:23:25 2024 -0500

    Fix Archer Center View button (vslew GED cmd)
    
    Got a user report that the Archer Center View button was broken as of
    BRL-CAD release 7.34.2.  Looking into it, the vslew command it is using
    was looking for a GED command that wasn't known by that name.  We want
    to call the libged slew plugin with that command, so we just have the
    plugin define "vslew" as one of the acceptable strings to run it.
    
    Looks like this probably got broken with 5f8aa3204 changing the ged_slew
    call out for a ged_exec.  In this particular case the command argv[0]
    didn't end up corresponding to the ged_* function signature it was
    replacing, since the libtclcad command was "vslew" rather than "slew".
    
    Looking through the Tcl code for $mGed commands, it looks like there may
    be others that don't have active libged definitions.  Need to
    investigate.  This is a textbook illustration of why interpreted
    languages are fragile for this sort of work...

commit 4070bee582cc0162261f37e556d541add8fb2609
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 21 10:14:17 2024 -0500

    Try flto=auto first to avoid lto-wrapper warnings

commit 388629e766aaf5fa6a4d01f3b234aaea6b1fd8dd
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Nov 18 15:58:38 2024 -0500

    fix view usage
    
    intentionally not call out qvrot in the usage line (since dir is a
    better name). But, leave it as a subcommand for legacy expectations.

commit 6f5c4bd43df4be39b65c951a541eca5ea2c1de75
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Nov 20 10:49:50 2024 -0500

    typo

commit 86f7c011862f773d38b9ce3232b2107232fb2d09
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Nov 20 10:37:59 2024 -0500

    Add more detailed instructions for URL remapping with git
    
    If we ever end up changing hosting solutions, having to work with local copies
    of the github.com repositories, etc. these notes will be needed.
    
    This is the alternative to doing a gnarly history rewrite to update submodule
    URLs - as long as a basic prefix subsitution on the URLs is sufficient, this
    appears to do the job.

commit e57dba681d4a0a015db609e8946834aa5ad47f8d
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Wed Nov 20 09:59:56 2024 -0500

    Update view.xml remove ref to aet
    
    we have both ae & aet - don't need to ref both (they are the same)

commit bf7eab079c6d2244e34052c4ffc0609984ddf49d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 19 16:08:23 2024 -0500

    Rework configure's handling of bext
    
    Changing the logic to use src/bext as the source of the SHA1 used for
    building, when BRL-CAD's configure process is responsible for producing
    bext binaries.  This will allow checkouts of older BRL-CAD releases to
    pull versions of bext that will work with their checkouts.  Previous
    releases were pulling the RELEASE branch's current state, which may be
    wildly out of sync if the cloned BRL-CAD version is older.
    
    Also switching to using main as the touchpoint for BRL-CAD, rather than
    the RELEASE branch.  For the bext repository itself, the plan is to
    switch to a more typical github workflow of doing major updates in
    branches and then merging them into main once complete, rather than
    trying to keep main and RELEASE in sync.
    
    Another feature added in this rework is the ability to recognize when a
    configure-built bext is out of date.  The logic will now automatically
    clear out the old build products and set the stage for a new build.
    (Experience has shown us that if we don't do this automatically it's
    quite common for the user to need to do it themselves due to bext
    changes being necessary for newer BRL-CAD code to compile.)

commit 192b494355f1e3c5cb8c190bd3103a7602c7f802
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 19 19:05:59 2024 -0500

    Document a way to submodule update w/ local mirror
    
    Since the URLs are baked into git submodule definitions in the history,
    git doesn't know by default how to go looking for a local checkout.
    Fortunately, it looks like the url insteadOf mechanism is able to
    address this as long as the on-disk hierarchy of our mirror matches that
    of the github URLs (which isn't hard, since it's all flat.) It's really
    pretty simple - we just swap out the github prefix of the URL with our
    local path and change the protocol.
    
    When the submodule isn't populated yet we appear to have two options -
    pass the necessary settings in via the command line -c options, or set
    them in the global config file.  (Since the submodules aren't
    initialized yet we can't use their local .git/config files.) If we don't
    want to supply the -c options it  may be worth checking into the new
    includeIf mechanism to see if it could help localize the impact of such
    settings: https://stackoverflow.com/a/71096731
    
    As long as github.com is viable this won't be an issue, but if we ever
    have to change hosting services or work strictly with a local mirror the
    submodule URLs *will* be a problem.  We can't change them in our history
    without rewriting it in a major (and sophisticated) way - we would first
    have to rewrite all of the bext history to use new URLs and update all
    SHA1 references in submodule definitions, comments and content while
    maintaining a map of old commits to new.  Once we had that map we would
    need to do the same thing with the main brlcad history.  All things
    considered, remapping the URLs seems to be far easier, less invasive and
    effective.

commit cd367160261b960d25ba3697de1cb210cc96e0bc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 19 16:34:05 2024 -0500

    Add update_bext.sh to CMakeLists.txt

commit 43a964b2f3270cb6afccc055bc00ff686cd0e048
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 19 15:11:37 2024 -0500

    initial script to update embedded bext.
    
    needs some protections for local changes to stash and pop, but should update a clean tree to latest in one step.

commit f3bd1407624d1717cbf110f883a1fcb8c1c42733
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 19 14:17:59 2024 -0500

    looks like only alternative is a post-checkout hook, but go ahead and update to tracking main.
    
    still requires git submodule update --remote

commit 3a141bd7d80096f4a14657355384059770db94b1
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Tue Nov 19 13:26:32 2024 -0500

    Update help.tcl
    
    update view help statement

commit d7f585cfa63bad482547e4d842b292e279e1dd76
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Tue Nov 19 13:16:13 2024 -0500

    Update view.xml
    
    add/expand new subcommands, fix some typos

commit 96d2425f493a47dbaf92ee6fab319645cc97e283
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 18 16:23:19 2024 -0500

    Place setup logic inside main function
    
    If I'm understanding CMake's rules for this, variables defined in
    functions will remain defined when calling nested functions.  If that is
    the case, we can just set the variables we need in our top level
    function and avoid the "global to file" setup we had previously without
    having to explicitly pass all the values we need as arguments to the
    child functions.  That's only marginally better than a global, to be
    honest, but at least the setup code is not unencapsulated logic that'll
    be run on include()

commit c19eea89b8788de3b2548026fbfa16b7290491ea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 18 15:30:20 2024 -0500

    Not running logic as a side effect of inclusion - brlcad_ext_setup encapsulates.

commit a8e8234b84870c6d3e78cc410aacc966d8db7664
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Nov 16 19:56:02 2024 -0500

    Generalize the mirror_repos.sh script
    
    Previous manual tweak only would have worked up to 200 repos - instead
    of leaving it at that, have the script keep iterating until it has
    gathered all the repositories on all pages.

commit 0c4a9369d5041915daf810a20f3fc440a0e98bf9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 15 13:02:17 2024 -0500

    Need two pages from git projects list
    
    Git API limits us to 100 repositories per page:
    https://stackoverflow.com/questions/27331849/github-api-v3-doesnt-show-all-user-repositories
    Since we have more than 100 we need page 2.  If we get more than 200 we'll need
    page three as well - ideally we should probably make this iterate until the
    page return is empty, but for now just do the simple thing.

commit e7746d9657cfe894821d75e2e914d25cfe64154e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Nov 7 12:48:58 2024 -0500

    Add a note to looking into keying off of src/bext SHA1

commit f0b5c4b21b1fa4bcf049505135399dc8ccf54de5
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Nov 7 09:09:33 2024 -0500

    mod linenoise.hpp
    
    old linenoise behavior would send commands on newline. For subprocess
    use, like we do with nirt in MGED, this is very important as the
    alternative means collecting commands like "Command_0\nCommnand_1.." and
    expecting the process to parse the newlines.

commit 78bfb346ecab8c7fe0e336debf0a9a3804e023fb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 18:19:13 2024 -0500

    renaming x is minimally impacting (and a dev cmd), but also note it should merge with 'who'

commit 151e83bae50655a7e004cc78e745bf2167c96afd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 18:15:45 2024 -0500

    rename x.xml to solid_report.xml

commit 941b237f4892eb904d8ad8a4aa8298ed29eb778b
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 18:14:15 2024 -0500

    update docs to reflect x as solid_report

commit 511a7a13aea90f020454ec41f86401679991be28
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 18:13:47 2024 -0500

    replace instances of 'x' with 'solid_report'

commit 0b489b40e8680f07c96754df815ea1873feb0ee6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 15:17:46 2024 -0500

    convert argument parsing to bu_opt (only using it for help).  document levels.

commit 6385f8e2bf0474282fdd5f2dea99803d7fcd6ff3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Nov 5 15:16:35 2024 -0500

    ws indent cleanup

commit 77d14c8874be69aec6f79523afe45e1397883dd5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 5 13:28:29 2024 -0500

    Adjustments to Windows ifdef logic

commit 372448718cd4e1b632e12117b69a5cc2fed90477
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 5 13:00:21 2024 -0500

    Delay column count initialization until we use the value
    
    Looking at previous linenoise code we were using, it appears the column
    counting didn't get triggered until later in the process.  Since the
    early triggering breaks MGED+nirt integration, just postpone the count
    until we actually need the values filled in.

commit bd6280fe27098ed2b997ebc7d607d9903b31ee10
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Nov 5 10:54:12 2024 -0500

    upd help text for 83360b5

commit 71af1299aafeca4f66fa0766640989b5c8a58121
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 5 09:41:12 2024 -0500

    The getColumns check interferes with MGED+nirt.  Should look at the other linenoise code to see what the differece is for this part.

commit a486233ee2da5241b1c905d91e646a8c1f914090
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Nov 5 08:56:21 2024 -0500

    Fix build on Linux

commit 446f430387078388c486ffcc6d99d6d8370fa293
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Nov 4 15:21:41 2024 -0500

    -Wincompatible-pointer-types cast

commit 83360b5e196be54ca743cbd82f3edc8d40179fff
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Nov 4 12:23:20 2024 -0500

    add midpoint (-m) option for bb output

commit 846764e749bba8049c76472bb7c1451c927a4232
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Nov 4 08:41:33 2024 -0500

    add view 'print' subcommand for quick viewing
    
    also reduce wording for 'view saveview' -> 'view save' and 'view autoview' -> 'view auto'

commit ac21bed76e46a209ab8ed5c3c8cb9c7da4529a15
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Nov 4 11:33:56 2024 -0500

    Adjust how stdin_input gets its callback data
    
    Another case where we will need to send more info than just an fd/chan through
    the callback if we want to eliminate globals.  In this case happens to let us
    clear a WIN32 ifdef as well.

commit c27dff49ae411af2815139b0fe2a459bb05ebe0a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 1 18:45:46 2024 -0400

    List file for CMake

commit 80c2fe61bd2fad8aec916ef5f8618f44413b1d99
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 1 16:33:28 2024 -0400

    Update bext submodule to SHA1 8ee34e8

commit c38c851ea25edc6a65a68986909580c5179c6337
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 22 16:00:36 2024 -0400

    Adjust compilation for find_package based bext copy of tinygltf

commit f3a313ef4e9ac93e6986ed08548ca4e3f58150b3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 22 16:00:04 2024 -0400

    Remove embedded tiny_gltf copies.

commit 6b213bb69dbd098c7e7f5b6eb922f52e47c2b763
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Nov 1 10:49:43 2024 -0400

    Only free c_data once

commit 617d1502313c4cd59f99db7df83581aa9818073c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 31 22:54:33 2024 -0400

    Test using a more complex data container for MGED fbserv
    
    Yikes.  If we ever want to eliminate global vars in MGED, we're going to
    need to pass more than just the fd around to these.
    
    If this is working correctly, there should be no change in functionality
    - it's a test to make sure we can pass a richer container successfully
    through this portion of the Tcl command labyrinth.

commit 8f5ce40bb3ff56a4eece247bb5025eee12cc351d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 31 14:44:31 2024 -0400

    See if we can avoid using strcasecmp

commit 23652e7f2e0c03cd63a22179a730620803a235a6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 21:48:22 2024 -0400

    Can't initialize the nirt linenoise prompt at the beginning, or we get unexpected setup ctrl chars recorded in the output and break the regression tests.  Just postpone setup until we actually need it.

commit 8f0e27751f7f97570c4bea60a233ced205acca88
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 20:16:19 2024 -0400

    Try bu_interactive in nirt as well.

commit 33f8ed110e6c83a38abf16b781dff389c0829511
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 20:14:14 2024 -0400

    See if bu_interactive will work here

commit dcce919e23134f5d96aca03b0f7175156f81b7fb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 20:11:07 2024 -0400

    Try and avoid warning

commit 8c68ce7287c8634714d5b285180059e4925f2ff1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 14:34:05 2024 -0400

    Line endings

commit 74a717ce8f3a967af962bdf065aef8d488a962f3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 11:30:36 2024 -0400

    Switch other linenoise apps to the hpp version.

commit 9f27c8adc9c90cb8cd937d2c6176abbb16da9487
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 10:55:43 2024 -0400

    list linenoise.hpp for repocheck

commit 5d3843165dca27b14b2f6c1d0ab42493135700bd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 10:31:50 2024 -0400

    Update copyright

commit 67cb22694db35c2f14335b14d40f9b5861d6021e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 10:24:39 2024 -0400

    Try to port upstream changes to damlevlim.cpp

commit 0a392fc5125c4d38b413cd74545453622de1c072
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 30 09:36:27 2024 -0400

    Simplify initialization (MSVC is saying previous style was a C++20 feature)

commit d7e890c7e8cb1ed4860201d6ecd277f4e492d456
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 21:12:09 2024 -0400

    Still not sure about multiline...

commit 8e1910f1b3196b8928dc4b3cef56555605dbe721
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 21:00:57 2024 -0400

    Replace old gsh code with new version
    
    Looking like we're pretty much a parity, with the new ability to show rt
    command's textual output without hanging.  Needs more testing,
    particularly on Windows.

commit 802c309913147dab5e7f90bafd340d1e532e858e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 20:46:28 2024 -0400

    Prompt is base on interactive or stdin input

commit 53739934a7f9988484e0328accafbfcd5ce6720c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 20:45:59 2024 -0400

    If we're non-interactive and we have nothing, it's time to quit

commit 4e8067f22cce3be1c60123da7e158c9a4c5b7ec9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 20:16:07 2024 -0400

    See if some upstream patches for Windows will work for us

commit 328b9372c8506971d445ad24320e250f2db3b1ae
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 17:22:31 2024 -0400

    No particular reason to make these non-static...

commit 6d11b3b0bbb9992f82020515fcda0d6fb138b9c2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 17:21:08 2024 -0400

    Run the code through clang-format

commit df8501e705e72030864ff297fbad46bc82f9544a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 17:15:48 2024 -0400

    Pass the prompt to the constructor

commit c7f684b7af8458554b94a8ecd1e8163e89578a89
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 17:07:44 2024 -0400

    Nix the Initialize function

commit 9b0d31c581be610de0efad68faaa7afd4f0e2e9a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 15:59:31 2024 -0400

    Put the class at the top of the file, to try and help make it clear that's the public API

commit af8e23ccd0a9cbb21fe08046c1c91c6cd6c65044
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 15:49:08 2024 -0400

    Make other operations methods on the linenoise class
    
    Line wiping and screen clearing don't depend on the linenoise state from
    a data perspective, but it feels cleaner to have all of our operations
    pertaining to linenoise be handled consistently.

commit 54bb5df73774836209bb8b7810fc497ece58e027
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 15:28:20 2024 -0400

    Don't intent namespaces

commit f4861e698db1936a449d75bcd92bafb1772a7c3d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 15:24:55 2024 -0400

    Adjust how history is handled

commit df8405f516a6b3754587b8c06168b4c0a9926e4a
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 14:29:15 2024 -0400

    Make a bunch of variables private

commit 4ee90e54501aa585810527f5eea88ad77df24a67
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 14:25:03 2024 -0400

    Make functions with state pointers methods on the class

commit 6ec97d68832a4b247b8e33f76015f1db1da3d577
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 10:05:41 2024 -0400

    Remove unneeded externs

commit 07b1c23d6a4ec7416ba52ad8bcf15f23146e0d59
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 18:37:11 2024 -0400

    Undo hack - WipeLine is being handled differently

commit ef01d3c2c43a8aed863d4129464c26c243e8c4e7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 17:18:32 2024 -0400

    linenoise.hpp and libtermio are conceptually related - group them together.
    
    linenoise.hpp is modded from the upstream for gsh purposes, so it's not
    a good bext candidate.  If this does end up replacing the C library
    version of linenoise, it'll get reused.  Stash it with libtermio header
    so all the similar functionality is in one place.

commit 20ef8d44d3742a6bc372f7576274f61f0ea03d75
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 16:46:46 2024 -0400

    Simplify line wipe function

commit c0edc8d665f12c57c682c91f59825d4d12e16946
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 16:14:55 2024 -0400

    Print output from non-interactive eval

commit 42a0634d9f05892377e4e02233a4df81ea441d44
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 16:02:42 2024 -0400

    Reorganize logic

commit cf764836bcefd1a9964fed141d4ea3e7c1d5bb12
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 14:50:25 2024 -0400

    Remove special casing of clear/quit, narrow use of USE_DM defines

commit fa1b7912c2fed9bd1c28f64ff6a529d1d7485dc4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 12:03:31 2024 -0400

    Tweak when to restore prompt

commit 377a61bf24ce0c9cc47cabea50e111cc75576c46
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 11:36:02 2024 -0400

    Successfully write out rt command output.

commit 8a52c17a3d2f80f6d42b88dd04bd5f620c43032b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Oct 27 21:30:06 2024 -0400

    Checkpoint

commit 36fe85095ba785e97874434c6669ce840abc51c8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Oct 27 10:13:41 2024 -0400

    Start roughing in callback functions.  io_handlers will be thorny.

commit 16e70714eba4efebbb0cd5f79ae6dc18ef349736
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sun Oct 27 01:09:16 2024 -0400

    Checkpoint a new approach to structuring gsh that (hopefully) will work better for showing output from async commands.

commit e569886e1acb687b9a3fe500219b6e2029c9309c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 15:30:37 2024 -0400

    Add line to Vim footer for not indenting namespaces
    
    Indenting namespaces isn't particularly helpful and produces a LOT Of
    whitespace, so update our default Vim footer to add the option from
    https://stackoverflow.com/a/8125118 to avoid it.

commit be05cdb9980402c35a8ec25a81758f697fbb8a8e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 29 11:27:33 2024 -0400

    Add a note to work on the BRL-CAD configure driven bext process.

commit d5c85b77d3f275b1e590be6ff64af30df00979a8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 28 14:36:59 2024 -0400

    Add screen clearing and quitting commands to libged
    
    These need to use callbacks (and callback pass-throughs are basically
    all they amount to since the functionality is application specific) but
    "clear" for clearing the screen and "q/quit/exit" for exiting the
    application pop up repeatedly when defining user facing applications.
    Rather than having to do ugly specific case hacks in each application's
    command evaluation wrappers over and over, just make it possible to do
    what we need via standard GED command evaluation instead.

commit fb234d51fd5b8d686509b64d53726b28db6afebd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 25 22:16:39 2024 -0400

    Remove dlopen libged mode
    
    Having moved completely to ged_exec, without the "pre-defined" command
    specific wrappers in the libged C API, the dlopen trick is no longer
    interesting.
    
    Should do some more cleanup/modernization - this is still a very handy
    tool for testing GED commands in a simple(r) environment, even if we
    don't yet properly handle async commands like rt.

commit 931161a99a5ff5f6d777d3db390a18308e154ade
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 25 13:57:29 2024 -0400

    Don't want garbage between geometry specifier and subcommand

commit e5b0dc14abfef31a90e69a13a81543a3790503c4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 24 20:43:23 2024 -0400

    List header for CMake

commit 8f57941c889febe8aeb8e87a78ec02534c088095
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 24 16:52:08 2024 -0400

    Work on edit cmd option handling

commit ce0e624cfa177fa9c4aa99af1994e34a8e6c3b3d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 24 12:19:39 2024 -0400

    Make it easier to test new commands with gsh

commit 425ce6fe4f3e15736e6a080af545ca3c9ef07f67
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 24 11:35:09 2024 -0400

    Be more specific about objecting to .gitattributes content.

commit 672dd4fb698ae83fd99f58921c9828113116d18d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 23 19:20:57 2024 -0400

    List .gitattributes

commit 71e44449a709105d3133f44c344c77116dd298bc
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 23 16:30:49 2024 -0400

    Add a TODO note for some Git experiments.

commit 7c32717e54a98f93dffa521b70ffb71fa8a5dfbb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 23 16:07:20 2024 -0400

    Too aggressive with .gitattributes check - add a TODO note

commit d49ccbad3729c1668e6daf592525052691e4af37
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 23 16:00:17 2024 -0400

    See if we can tell GitHub our .asc files aren't AGS Script

commit 04025764d058c5427ba662cadf0846e6180f837f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 22 16:23:26 2024 -0400

    No longer using meshIO at librt level
    
    If we need to output glb for debugging, we can wire it in at the time of
    need.  In normal use we don't want to enable the logic for these checks,
    since it significantly slows processing.

commit c25c0310cca20c3974ba2c120b609ed4bfebfe47
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Oct 22 01:18:26 2024 -0400

    return val isn't used or needed

commit 63bea0718b10317242180f6fbf584b22100898b8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Oct 21 12:05:10 2024 -0400

    verify arb6 editing, seems to have broken in 7.24-7.28 2014-2016 timeframe

commit 6dc5a6a294bef78105e7c60d990d28dface3362d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Mon Oct 21 09:37:25 2024 -0400

    add some checks to make sure NewFace worked

commit 9f3a497cf92d80046f0d0aadd8e17b0c10ff2107
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sun Oct 20 00:29:05 2024 -0400

    change all readers to start from 0 index with upper limit bounds checking to avoid crashing

commit 0144bdd6edc77a7c722c9269343ccc3398213ded
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 21 10:17:43 2024 -0400

    Stash BRLCAD_EXT_DIR in the cache if specified
    
    Daniel Rossberg ran into a situation were configuring, changing a
    setting in the GUI, and then re-configuring was ignoring a previously
    specified BRLCAD_EXT_DIR location.  Need to cache the BRLCAD_EXT_DIR
    value if set so we don't forget it the next time around.

commit cb0ffd07b94a26747cc89e37004485ddea8c8aee
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Oct 21 10:08:27 2024 -0400

    Remove obsolete comment - didn't end up going this route

commit a06ac0975f9c30339cfd12a0ebd5441ae12305eb
Author: Daniel Rossberg <33295041+drossberg@users.noreply.github.com>
Date:   Sun Oct 20 22:08:51 2024 +0200

    stylistic/white space changes
    
    harmonized coding style

commit 0eb932dbdf2dc723c9b91066fff674bf846268a6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Oct 19 19:50:22 2024 -0400

    fix a variety of crash cases working with old bspline nurbs.
    
    this is just enough to get iges-g to succeed without crashing or bombing, but there does still appear to be some incorrect book-keeping going on.  there are paths through the logic were specific iges entities are ending up without geometry or without a mate. there were also cases resulting in loopuse without edgeuse, though now a minimum was put in place to progress through the existing logic.  this requires a much more careful study as iges-g -t now completes but doesn't result in a usable conversion.

commit bc6f18d0fab8a7dbdad1877901110eb44c572d1e
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Oct 19 01:22:52 2024 -0400

    lets not bomb if we don't know what geometry to apply the matrix to

commit 7a880e88683b28090de407e10334446cf6968510
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Oct 19 01:14:20 2024 -0400

    fix a iges-g crash when names are null.
    
    there are other problems prior to getting in this situation, but this addresses the glaring crash.  we give unnamed objects a generic noname_# name (not thread safe, but assuming single-threaded).

commit adf6257e6b8c4ff66878245e93097b16c9b321ec
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Sat Oct 19 00:39:52 2024 -0400

    make sure our index is in a valid range for creating loops

commit 8659e8e4139386f434a800d467d31927b9e7c307
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Oct 19 00:13:57 2024 -0400

    Remove intermediate mesh checks in bot extrude
    
    Learned from upstream that these checks can be very expensive.  If this
    type of debugging becomes necessary, introduce it when working the
    problem rather than paying the overhead all the time.
    
    (On a semi-related note, there's a bug in the upstream RotateUp routine
    which appears to be behind the problems with using their Cylinder, so
    we'll watch for developments there - would still be nice to use their
    implementation (which is what their testing will also use) rather than
    our custom one-off logic.)

commit c865093f589971d67601f2f78765ef0c59f6df45
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 18 16:00:14 2024 -0400

    Revert "Similarily, use Cylinder from manifold rather than custom code."
    
    Seems to be causing an exception in the boolean logic.  Can see this
    upstream as well, so revert to our previous implementation for now.
    
    This reverts commit 8e2f81d4e76189b0dfd5e44fc654138af8ae4689.

commit 8e2f81d4e76189b0dfd5e44fc654138af8ae4689
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 18 11:37:54 2024 -0400

    Similarily, use Cylinder from manifold rather than custom code.

commit 9f607be70b5cd7c3f0c3a220e6ed043a98d69c64
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 18 11:06:51 2024 -0400

    Just use Manifold to construct a sphere rather than going through the tess routines.

commit 33e7d3a59474bd9616c356f2d25bb8efe655afb2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 17 15:16:52 2024 -0400

    Do managed files operations before other targets
    
    Got a report that common.h wasn't in place for building a test file on Windows.
    Make sure all targets depend on managed_files target so things are in place.

commit e645fca9b0fb578e1807d6f80947af7567db3eec
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 16 14:17:03 2024 -0400

    Add note about interesting looking ortho construction

commit d19ad21a1d865e9d8d88cd0f4af1b3376925b953
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 15 21:31:54 2024 -0400

    Add a note so we don't forget to look into mmesh

commit 830d8b81071afa2ea459c1bc61ea26e06f406162
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 15 19:37:13 2024 -0400

    Add a reminder to look into EXPORT targets

commit dc1b01c7989586a7bbb2dccf731b4bff740cedb9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 15 13:49:37 2024 -0400

    Add a copy of FindBRLCAD.cmake for projects to use
    
    Since we don't (yet) export BRL-CAD targets the way the newer CMake
    find_package mechanism is looking for, add a copy of FindBRLCAD.cmake
    for projects looking to locate BRL-CAD libraries to use.

commit b278268abc813a080e779431154fcc8fd13c5d06
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Oct 10 13:58:37 2024 -0400

    fix text wrapping in the notes section
    
    ran into an edge case with a long db title where a word filled the last
    available room, but was not the last word of the title and did not leave
    room for an ellipsis. Refactor the textWrapping function to not use a
    hardcoded check for the number of chars before writing the ellipsis.

commit 5be73f8fd427703dac8212229633db688cc980eb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 9 12:31:01 2024 -0400

    Remove unused tcl_pkgindex file

commit 5a1127e25d942c59551acd80cb73941b15d50e2c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 9 12:21:08 2024 -0400

    Don't think we're using FindFontconfig.cmake anymore?

commit f60382a9e9ecbc1f5d60973e48bce48acce60018
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Oct 9 15:33:24 2024 -0400

    swapped subcommand to be more intuitive

commit b0a53ed012e95338a47b5b100c9c5aa5250277b4
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Oct 9 15:31:45 2024 -0400

    update view manpage for subcommands

commit f6bb4cb179cafc6a1b02d44dcd38872814a65d2c
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Oct 7 12:52:06 2024 -0400

    combine qvrot and viewdir functionality
    
    create 'view dir' command that will return the current value using
    viewdir, or set the value using qvrot

commit de1cbd5a1fe81e72886d8e0873f38ac01456eff8
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Oct 7 12:51:36 2024 -0400

    move viewdir into libged/view

commit 883246da94d8cc217fde19b8dfe3ad5396c8d478
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Oct 7 12:49:10 2024 -0400

    add -i flag to negate values

commit 3909fc8131a0ceac92e4b9a6bb6afc2957952123
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 9 12:06:29 2024 -0400

    See if the new management of CMake find_package input paths fixes the
    Asset Import simplification.
    
    This reverts commits 241d68d792e38e429ae1bf7374bbb8434c6b0387
    and 6103b244938a6c93773f773a68ef2afdc92b3a64.

commit bafecddda6e44b560ae29b7b4bce2cf023251657
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 9 10:47:36 2024 -0400

    Adjust bext text file processing for CMake find_package
    
    Normally CMake's find_package *Config.cmake files don't hardcode paths,
    but it looks like our z_brl library path made it in as a full path.  The
    standard text processing set this path to the final install path, which
    wasn't present, and that caused problems.  Moreover, the pkgconfig files
    (which can be used by CMake, depending on how it searches) do use full
    paths, and so would have similar issues.
    
    Adjust the path setting logic so the CMake input files use the build
    directory path while they are in the build directory, and add a
    post-install rule to correct them for their final install location. We
    could in principle do this for all text files, and that might be the
    simpler route long term, but it would slow the install step
    significantly to post-process ALL text files (particularly when large
    dependencies like LLVM and Appleseed are added to the mix) so for now we
    target this specifically at find_package inputs.

commit 8b6cca55cec03a45593e3c16da52d7c2b82832fe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 8 16:39:26 2024 -0400

    Use ExclusiveGeometry method to get pointer
    
    Unlike the previous change this doesn't fix anything behavior wise with
    MGED edit operations, but per the opennurbs_model_geometry.h
    documentation this methods feels like a better fit conceptually -
    bi->brep isn't likely guaranteed to satisfy the restriction of "not
    being used to modify the geometry."

commit fc58aa48e83c0de9ec226255d407c08c8b1e8e4b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Oct 8 16:28:08 2024 -0400

    Correct memory managment for BRL-CAD brep object
    
    ON_ModelGeometryComponent* CreateForExperts documentation in OpenNURBS
    header opennurbs_model_geometry.h indicates that a true value in the
    first argument indicates the geometry object should be deleted by
    the ON_ModelGeometryComponent destructor.  That's not what we want -
    we're managing the brep object ourselves - so we need this to be false.
    
    This may be the reason doing a "sed" operation on a brep was crashing
    MGED, but needs more testing to confirm this has actually fixed it.

commit 241d68d792e38e429ae1bf7374bbb8434c6b0387
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 16:36:03 2024 -0400

    Revert "Reapply "Make a stab at replacing FindASSETIMPORT and using the built-in export targets instead.""
    
    This reverts commit 6113146ec3dd044ebcd0dc3df5ba907c9fb63d32.

commit 6103b244938a6c93773f773a68ef2afdc92b3a64
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 16:17:37 2024 -0400

    Revert "Add pugixml find_package calls to support assimp."
    
    Hmm.  OSX build is trying to look for a zlib in the final installed path
    location - that's no good.  May have to investigate the details of the
    exported CMake targets...
    
    This reverts commit ad2547992fbcc52fdfce448cd3732658ab8631be.

commit ad2547992fbcc52fdfce448cd3732658ab8631be
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 15:25:02 2024 -0400

    Add pugixml find_package calls to support assimp.

commit 6113146ec3dd044ebcd0dc3df5ba907c9fb63d32
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 15:13:33 2024 -0400

    Reapply "Make a stab at replacing FindASSETIMPORT and using the built-in export targets instead."
    
    Looks like we'll need to explicitly hunt up pugixml as well using this method...
    
    This reverts commit 657723751f22b74835ac37d15f3edcf70c8434a2.

commit 657723751f22b74835ac37d15f3edcf70c8434a2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 15:06:10 2024 -0400

    Revert "Make a stab at replacing FindASSETIMPORT and using the built-in export targets instead."
    
    Seeing CI build failures, back out for now.
    
    This reverts commit 98711282f2f1dddafa38fa408642a3535faba57f.

commit f5b1671e546bf07ed2db145f69790dc4bbc2ab2b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 11:54:29 2024 -0400

    ws

commit 98711282f2f1dddafa38fa408642a3535faba57f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 11:52:17 2024 -0400

    Make a stab at replacing FindASSETIMPORT and using the built-in export targets instead.

commit 0b3f853eda40531b7755a412bf48f84324726377
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 10:43:03 2024 -0400

    Add some notes to investigate modernizing our find_package logic
    
    Historically we've created and bundled a lot of Find*.cmake files to allow
    find_package to locate our dependencies, but modern CMake has shifted towards
    packages providing *Config.cmake files in specific locations to avoid the need
    for such files.  Some of bundled dependencies already do this, so we should be
    using those files when present.  Looks like asset import library, png and proj
    are the current candidates.
    
    Probably should also investigate patching our bundled copies of libraries to
    provide such files, in the cases where they don't already do so.  zlib in
    particular would most likely benefit from this, since we use custom naming and
    currently have to patch a large number of dependencies to teach them how to
    look for our version.  If CMake doesn't have a built in way to look for a
    package and vanilla upstream doesn't provide export targets we'll still need to
    keep some Find*.cmake files for those cases, but we should strive to minimze
    them since it's looking like the exported target approach will be simpler and
    cleaner for bundled libs.

commit bc2e86ecfcd64f3e1d54101e27adbd2872160066
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Oct 4 10:40:07 2024 -0400

    lint crashing should be addressed now - had to do with implementation of parallelism.

commit b5f33917a784d7e62fef2efd7e3c3150e118ccf4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Oct 3 17:03:38 2024 -0700

    gotta extern C it

commit cd45e7213ff1b1333036550b9504b4c8ad72530c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Oct 3 15:57:08 2024 -0500

    fix the 'x' aka 'solid_report' command.
    
    the command is set up to take 'levels' which can be negative numbers, which indicate reporting of just leaf nodes or just combs, etc.  The assumption that a dash meant help meant any negative levels throw usage.  MGED uses x -1 and x -2 for the solid and object/comb editing panels (for object selection).

commit e7ed1d31708949ba34217f6f3b8a51a78f99ac21
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 3 15:26:24 2024 -0400

    Shift stl-write to a C++ file

commit f33cff1670d0608b5c13b9d9739ee44d81b9de44
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Oct 3 12:49:24 2024 -0500

    mged gui editing appears to be broken :(

commit ef4b2a9198037f598c2f8e8567036b1609d3f435
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Oct 3 11:04:08 2024 -0400

    Try gersemi automatic CMake formatter
    
    This is the result of running the gersemi CMake automatic formatter
    (https://github.com/BlankSpruce/gersemi) on our CMake files with
    the following settings:
    
    gersemi -i  --indent 2 -l 120 --no-warn-about-unknown-commands

commit beb8a94993c41132857103de8fcf6cf5971ddd2c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 2 21:38:55 2024 -0400

    Use the status check from C++ to check for error condition

commit 7ab1d060b2b70419beb17d51b2fc57493d6099f8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 2 17:00:20 2024 -0400

    Remove a few unused defines from config_win.h
    
    With the C++17 APIs we can probably eliminate the need to define most or all of
    these, but need to look into reworking bot_dump and a few other cases where low
    level open() calls are using some of them.

commit 153a5d0125255491ec83f32018c566420d9591fd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 2 16:55:45 2024 -0400

    Of the S_IS macros, only S_ISFIFO is used and that only in pixcmp.c.  Simplify, add a note to investigate using the C++17 std::filesystem::is_fifo check to eliminate the need for pixcmp's S_ISFIFO ifdef use as well.

commit 4d0510f00b0f72a17f54672b20a67b3a8122dea2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 2 16:40:11 2024 -0400

    Use std::filesystem to implement the bu_file_directory check.

commit 6317437cc74965abae608a7abc43a44fb67779e0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Oct 2 16:36:22 2024 -0400

    Use std::filesystem to check for symbolic link

commit 3d8fa73830d6eca50a8cdef49daa14fac0109c32
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Sep 26 17:30:56 2024 +0200

    compliation errors

commit b00e712413c55e19e790c9b088caa097aa3ee9d7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Sep 25 23:33:31 2024 -0400

    fix build

commit 425e888880a4eb577d3735f83eef34771ec1a3f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Sep 25 19:02:58 2024 -0400

    Don't prefer frameworks when doing find_package

commit 44210966f0a01e70c75acd529aca7b68b1ad0b26
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 17:04:16 2024 -0400

    move to top of file

commit 15de2f29866efbfaf419df61ddcd7804eafa812c
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 17:03:27 2024 -0400

    document view subcommand updates

commit 2e22c67a66ce47506ade9b3ebf4ace4c2de3e492
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Sep 25 16:28:03 2024 -0400

    Some of the X headers on OSX are apparently causing -Wdocumentation warnings...
    
    (cherry picked from commit fddaf4d53c3e9fe6368e045273b188b5036f0cc2)

commit ebf8375fd1defbd88edd2aecf91aa47438cba866
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 16:41:50 2024 -0400

    alphabetize

commit b0f1d8b921df6bfc5be79b5b86f4346feaff3802
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 16:29:53 2024 -0400

    move qvrot into libged/view

commit 7880b87019875010eeda498035713d2dfc3c8bc2
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 15:57:26 2024 -0400

    have qvrot angle be optional. defaults to 0

commit f0b82ef9c5648a2921c6460ecaf4377bc65112c6
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 15:14:09 2024 -0400

    users are familiar with ae command - mimic usage

commit 42cbe769ec2482b7605e18955f627cff7e87ee0c
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 25 14:59:34 2024 -0400

    create view 'align' command
    
    used to align eye, center and an arbitrary point

commit 8410fd1a7cec84f9cbd464ab88157ee4dd254793
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 19 15:45:21 2024 -0400

    move saveview command into libged/view

commit bb4da6e8243809c9aee68fa5f57320dc545a4f8a
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 19 15:30:42 2024 -0400

    move autoview into libged/view

commit 12ab70332d77ad99f0f76b30b362f0ed0b6cdbc6
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 19 15:12:29 2024 -0400

    move lookat command into libged/view

commit fddaf4d53c3e9fe6368e045273b188b5036f0cc2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Sep 25 16:28:03 2024 -0400

    Some of the X headers on OSX are apparently causing -Wdocumentation warnings...

commit 354b98358ce9d5c45236194aa26581678524ef55
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 09:38:01 2024 -0400

    Check for a matching bext version branch before cloning RELEASE
    
    Avoid older releases pulling dependencies that might be too new or
    changed by first looking for a bext branch that matches the current
    BRL-CAD release.
    
    (cherry picked from commit 79bc519a3749c0687af0bc2ca148a3ff6bf845cb)

commit 00364f22367cfadfcb12356becb858cf92fa9493
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 21:54:58 2024 -0400

    Should be cloning RELEASE branch, not main

commit b1ace6be37497bc39eadda20a1beb5641140655e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 16:36:24 2024 -0400

    As with the writes, make icv_read handle file setup for the various formats.

commit bf58a27f922f602ad949f5aee48cb87962351588
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 16:08:36 2024 -0400

    Return BRLCAD_ERROR if we have a problem.

commit 2362ee2939aaedef9719237154ed5a1f6cc59a03
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 16:06:01 2024 -0400

    Make a stab at having icv_write manage the file open and close steps, with the image-specific code focused just on writing out the right data.

commit 79bc519a3749c0687af0bc2ca148a3ff6bf845cb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 09:38:01 2024 -0400

    Check for a matching bext version branch before cloning RELEASE
    
    Avoid older releases pulling dependencies that might be too new or
    changed by first looking for a bext branch that matches the current
    BRL-CAD release.

commit 54ba5b6c7040ff61444d546e3b14b111e0aeff72
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 07:04:36 2024 -0400

    Add a note to beef up the git clone logic for the release case.

commit 7f2dd97779b64de3b2c1045fb80a2e61d4f2900d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 24 06:59:35 2024 -0400

    Restore RELEASE branch checkout

commit b006e4e10262aa0d67adb7a629d949bd10f8df4c
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Sep 22 20:48:37 2024 +0200

    unnecessary Variables

commit c8c737112965fc324ce065b8e25181a65b71c7a8
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sat Sep 21 20:22:55 2024 +0200

    minor misconception

commit 4add8d8968cc08f959979ea38227e886c60a962e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 19 19:53:41 2024 -0400

    Whoops, missed a line

commit 74db75505d705aee86adb4c0f4efcf7a0fb7f30f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 19 19:52:24 2024 -0400

    Verify target

commit ab3bbb8a3b1829b002aca344b473282b29d76dba
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 19 19:50:34 2024 -0400

    Mark a few more executables as TEST so they're disabled in a BUILD_TESTING=OFF build

commit f3fe3942163de1544245fca6617af6c737f19ada
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 19 19:35:33 2024 -0400

    Match if/endif

commit adfde18ec11946b5fcc3a34378f005ccf43696d5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 19 19:33:37 2024 -0400

    Validate fuzz targets before setting options

commit 02ba341f2ea0c58c896a9224ec8c6ed7b434f6db
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Sep 18 12:59:02 2024 -0400

    write something to the file before chmod.
    
    seeing a peculiar error from bu_fchmod() on secured Windows machines where GetFileNameFromHandle throws an error about being unable to map zero-length files.  this may be a security policy, or implementation limitation, but can be accommodated by simply writing something to the file beforehand.

commit 21a12c08f6b2c9bf8bab256c74da55c0c36e3d8c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 17 18:23:50 2024 -0400

    Update to get new utahrle submodule version

commit 44494716fd7f2a92825a862bd14b1d5fe21482bf
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Tue Sep 17 10:20:21 2024 -0400

    process doesn't need read-write.  might just be ray tracing.

commit 120d720811865a1f248f1a71c2f754661fe3d755
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:48:30 2024 -0400

    Update eye_pt.xml add see also view command

commit 3697ae2a2e67a83a6435580f0d82823dfeb59816
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:46:18 2024 -0400

    Update orientation.xml add see also view

commit 69c05b2ccce7c41f235bcf2fd7b4b4d04954ec92
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:45:38 2024 -0400

    Update viewsize.xml add see also view command

commit 898451cd2991935f56413c65556cd6813a62b992
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:45:08 2024 -0400

    Update size.xml add see also view command

commit 8f7f221a8bc0b162aa560214be2c405050e9de93
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:44:10 2024 -0400

    Update center.xml add see also
    
    Add see also view command

commit 859f628d30a3ee71d567a3d84a51596cea849a6f
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:42:28 2024 -0400

    Update ae.xml add see also
    
    Add see also note to direct users to view

commit 6610802dec16cb3dcad3bae8d87a118d44153327
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 16 08:40:29 2024 -0400

    Update view.xml flesh out further
    
    Note on each subcommand what parameters remain static and which ones change

commit 36dff46d149be5e7ba40c31347057d0d5c0c628c
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Sep 15 22:26:52 2024 +0200

    getName and small errors

commit db03cb702575630ca00faf2b8db44070adeef09c
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 16:00:05 2024 -0400

    Update comb_color.xml flesh out

commit be9aa140d4dc75b07edd1a613e1934e1bcb4dae2
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:45:51 2024 -0400

    Update bigE.xml standardize

commit 3fa71f488f76d7ac2b4e348d21fc70b40d4eec72
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:45:14 2024 -0400

    Update bo.xml standardize

commit b0f9d109b8ee614fddaa09574073586f0b1b3845
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:43:51 2024 -0400

    Update cd.xml standardize

commit e24f710b4bdf42ee3b6377aeea588a49cd1507aa
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:42:59 2024 -0400

    Update clear.xml conform to standard
    
    pluralize description to conform to standard

commit 2c01bde393919bd7abf095e4699075d58a6957fc
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:37:57 2024 -0400

    Update autoview.xml pluralize first statement to conform to standard

commit 162f90078c260c45a2d8be7e294c242eeaeaa38b
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:28:16 2024 -0400

    Update units.xml standard use of mged in italics

commit 03d861c076f382c3aad3cb0f0b8627f62aff7595
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:25:35 2024 -0400

    Update Z.xml update description to conform to standard

commit 6e57de3bfa6fa609a1ca1ac17ba3625275675f2f
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 15:18:01 2024 -0400

    Update man.xml standardize sentence str
    
    edit first line to conform to standards

commit a4bb99cf9b45d46c71b41c443f5bb6831aff0995
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Fri Sep 13 14:45:20 2024 -0400

    can't use <arg> element outside of synopsis
    
    we're also calling out the subcommands twice back to back. To make it
    easier next time these need an update, remove the block in "Description"
    and put the usage alongside the subcommands's in only the "Subcommands"
    section.

commit dc1a44551dcbb415ae13560c54f1932b4f5db0dc
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 13:41:05 2024 -0400

    Update man.xml note usage with no arguments
    
    adjust arguments to optional, note usage if no argument given.

commit 8035d030072ebe7a8804ca52dd24c2fe10a8f5f1
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 12:51:12 2024 -0400

    Update units.xml normalize some language
    
    normalize language and note usage in first statement.

commit f1a3e81d94339e1984814162d8fea239026be876
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 12:44:11 2024 -0400

    Update size.xml - update to show no argument usage
    
    change arguments to optional, note no argument usage.

commit de202203b4a419b3f31c2221f459221f49d6e61e
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 12:29:35 2024 -0400

    Update center.xml add note in top line about no argument case

commit d7a5fbbb56e2d4051c3dc2f08d3529cafa965b1b
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 12:27:54 2024 -0400

    Update eye_pt.xml - update to show no arguments case
    
    change arguments to optional, note that without arguments returns current value. Description said this is always in mm but just confirmed it is in local units (in 7.40.0)

commit 568282a8ad25707fd053c96482e38c1f77406651
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 12:20:38 2024 -0400

    Update view.xml - further flesh out subcommands
    
    Also add proper formatting to options

commit 34b557dd6589e020d2b95b685741a1c4f1fb9aa7
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 11:51:26 2024 -0400

    Update ae.xml fix format of inputs
    
    also change eye position to eye point for consistency

commit d8a3433c9ef6fb9153bf9938d36285a07f717211
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Sep 13 11:42:47 2024 -0400

    Update src/bext submodule to latest RELEASE

commit f043d5c37bab866c8becda6c165cd3740bb3e8d1
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 13 11:03:49 2024 -0400

    Update ae.xml - adjust to show can be used without arguments

commit b0707c84fe99107f18194337849d726c30bbf1f7
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Sep 12 19:37:53 2024 -0400

    Match capitalization on github.com website

commit fb76e893dd509cd78119aca537459b4e6f837f24
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Sep 11 19:38:40 2024 -0400

    Update bext submodule to latest RELEASE

commit 960fb1ca4546a399caca3bb2e67fbe20bcf60313
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Sep 11 00:31:08 2024 +0200

    all sections

commit f4bc99de427c948b77a68faa7dcd95183be51756
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Sep 9 23:45:04 2024 -0400

    revert/rework 5e4af9d - exit if no layout can be found
    
    rework the error condition to not use bu_exit because if gist is doing a
    folder run it needs to move on to the next db instead of exiting.

commit f82a1698145d7f518c5b9c337840fec46803171b
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 5 15:16:28 2024 -0400

    make it more clear what's going on here

commit 24c03c579da25023bffdb20a6b2937848818d5b7
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 5 15:14:02 2024 -0400

    make -F not so fragile

commit 249ec9d71a49bf4d066a45b6fd904f34c210aa85
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Sep 5 12:47:21 2024 -0400

    logic error when checking for input file / dir

commit 435577a2f8cd3d5367d627087f7b31591db4af26
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Sep 9 19:40:41 2024 -0400

    Whoops, got too fancy - just check the CTest var

commit a399cd39026eeda2b82676c085476c5d2ca955fa
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Sep 9 15:22:20 2024 -0400

    Disable test exec builds if BUILD_TESTING=OFF
    
    Allow for a more minimal compilation if testing is off - disable the
    compilation of test executables based on CTest's BUILD_TESTING variable.
    If that variable is off CTest tests won't be available in any case.
    Allows for more minimalist compilations as well when using
    BRLCAD_COMPONENTS, which is the original user case prompting the suggest
    to support disabling them.

commit 8012562f1d2445bbe4a00f608ff9467e7958e1f6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Sep 9 14:13:40 2024 -0400

    Go with utf-8 by default for Visual Studio

commit 52ae498dd18a7bcee4ce9b9b12bf9068a13413fe
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 9 13:48:53 2024 -0400

    Update view.xml fix missing close para tag

commit 6a7d204afef3a5925968b0717d731f67d92a6d75
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 9 09:31:50 2024 -0400

    Update help.tcl eyepoint -> eye point
    
    trying to keep things consistant

commit a4a476e8c1e7bd6e7ae1eb5473ac7cf21c9d1813
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 9 09:31:11 2024 -0400

    Update helplib.tcl eyepoint -> eye point
    
    trying to keep things consistant

commit 5389d0b854271941396099b59a0b7b1f3adc6437
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 9 09:30:08 2024 -0400

    Update view.xml rework page to call out subcommands
    
    Move descriptions of subcommands into a subcommands section, add some examples for ypr

commit d7c4f1483afceb9d4693c9da0254002a3b6ed58d
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Sep 9 08:42:50 2024 -0400

    Update help.tcl - add keywords to view help statement
    
    Update a view help statement to include keywords to be searched with apropos. Also update reset to describe current behavior.

commit 1264878ae7b4466c8f54e7644657a90a4cfea7d0
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Sep 8 22:20:47 2024 +0200

    sections

commit 32583343313345ca98dcf7f46ebc8536592ec521
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Fri Sep 6 11:19:47 2024 -0400

    Update helplib.tcl -update lookat help line
    
    adjust lookat note so that it mentions eyepoint (and will come up if using apropos to search eyepoint)

commit 5e4af9d2271382216e74212a1893fa059dc74cce
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Sep 4 10:31:41 2024 -0400

    exit if no layout can be found
    
    if we get to this point and something has gone wrong (ie it is unable to
    find a layout), we need to abort.
    
    Current problem was observed with our m35 model. The tops objects are
    'scenes' and have the component sitting on a halfspace groundplane with
    lights. The halfspace in particular screws things up as we rely on the
    bounding box size (which is inf) and orthogonal views (bottom view is a
    blank white square).
    This is a tricky problem to solve auto-magically. So for now, just punt
    and make the user manually specify the correct component.

commit ea9b9fecea4917e49f40e082e2beee447dbbeae1
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 3 14:45:27 2024 -0400

    No longer using ext tirectory in misc/tools

commit 0cf18cb03dc03397d978b46357e3cef44b49583c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 3 14:43:08 2024 -0400

    Remove concurrentqueue.h header

commit e60775cf459fa62ac36912805bb48af47b475692
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Sep 3 14:15:37 2024 -0400

    Move test using libged to libged tests dir

commit 6bb41c8c0250e1306522c38ea486c8f34818be6f
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Sep 3 11:39:09 2024 -0400

    avoid memcpy, initialize directly

commit c7587877cd44dc2c36fe125779414cf9d4286a16
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Aug 31 21:25:37 2024 -0400

    Shouldn't be using libwdb in a librt test - need to fix, or move test.

commit c924466b25760b5c32949cf11b732c4d1d93f2f3
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Aug 30 12:47:38 2024 -0400

    Add RLE to DLL import definitions for libicv

commit e94a4064f3d8a8885b22c4c19c39109fd00af8ce
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Aug 27 10:52:10 2024 -0400

    Replace lint concurrentqueue with bu_parallel
    
    Back to basics - lint using concurrentqueue.h didn't agree with the new
    BoT raytracing code, so use standard bu_parallel instead.
    
    For future reference - concurrentqueue issue appears to be some sort of
    memory issue - running with one CPU worked, and running in valgrind
    worked without errors (arrgh) but 2 or more CPUs crashed at bot.c:1480:
    
    (gdb) l
    
    1475
    1476        RT_GET_SEG(segp, ap->a_resource);
    1477        segp->seg_stp = stp;
    1478        segp->seg_in = hits[i]; /* struct copy */
    1479        trip = (triangle_s *)hits[i].hit_private;
    1480        BOT_UNORIENTED_NORM(ap, &segp->seg_in, trip->face_norm, IN_SEG);
    1481        segp->seg_out = hits[i+1];  /* struct copy */
    1482        trip = (triangle_s *)hits[i+1].hit_private;
    1483        BOT_UNORIENTED_NORM(ap, &segp->seg_out, trip->face_norm, OUT_SEG);
    1484        BU_LIST_INSERT(&(seghead->l), &(segp->l));
    (gdb) print segp->seg_in
    
    $35 = {hit_magic = 0, hit_dist = 0, hit_point = {0, 0, 0}, hit_normal = {0, 0, 0}, hit_vpriv = {0, 0, 0},
      hit_private = 0x0, hit_surfno = 0, hit_rayp = 0x0}
    (gdb) print i
    
    $36 = 8
    (gdb) print hits[i]
    
    $37 = {hit_magic = 543713652, hit_dist = 1.9994999999998984, hit_point = {0, 0, 0}, hit_normal = {0, 0, 0},
      hit_vpriv = {-0.99999999999999978, 0.3333333333333337, 0.33333333333331677}, hit_private = 0x55555721dd18,
      hit_surfno = 1705, hit_rayp = 0x7ffde2bff960}
    (gdb) print trip
    
    $39 = (triangle_s *) 0x0
    (gdb) print (triangle_s *)hits[i].hit_private
    
    $40 = (triangle_s *) 0x55555721dd18

commit 57b5a4cd4dc3a5b82e63852d027b94283dbbfe6e
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 27 13:08:27 2024 -0400

    use the param correctly..

commit 5def054ea61ed3550ca4e59411147e2217b1dc78
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 26 22:22:32 2024 +0200

    small fix

commit fc1756c4bd1cad3e325e977b8aecf54ab6fe413b
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 26 22:14:04 2024 +0200

    implementation of Geometry::addBeamResultant() to creat an extruded beam

commit ce8f1755de8506319bad772dd743183ed83305f6
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 26 11:56:32 2024 +0200

    extrude class and some modifications

commit c37ac63467fef36346c019d0e5d1bc00d6771987
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Aug 25 17:05:08 2024 +0200

    SketchClass

commit b59a4395e80a6e0fef2c2c4616ca7d81153bbecd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Aug 23 16:29:22 2024 -0400

    Test using upstream GeometricTools directly for lseg_lseg
    
    Trying out using the C++ header-only GeometricTools implementation under
    the hood of libbg.
    
    We originally translated the code to C for direct embedding, but since
    we're now using newer C++ standards in our own code we may be able to
    replace all of our embedded copies of the GeometricTools algorithms with
    direct usages (as well as leveraging a number of other algorithms
    present in the GeometricTools code - in particular, their oriented
    bounding box and convex hull implementations may be good candidates to
    replace our current 3rd party codes.)
    
    Deliberately starting small to get a sense of the implications, but
    leveraging the upstream maintained code in favor of our refactored
    copies is desirable - these sorts of problems can be tricky in corner
    case scenarios, so it would be advantageous to leverage any upstream
    improvements in the algorithms.

commit 179746c931a7553b0c1c262f6c781a9d67753371
Author: Ali haydar <lgoogl696@gmail.com>
Date:   Fri Aug 23 20:15:38 2024 +0200

    Update k_parser.cpp

commit d2f194d0a5bfe08a88f4de8ad068009c964dcc85
Author: Ali haydar <lgoogl696@gmail.com>
Date:   Fri Aug 23 19:43:02 2024 +0200

    Update k-g.cpp
    
    The third node will be used later for defining the cross-section plain for beams with asymmetric cross-section

commit fa697b262aabd1ad173a6b7671eb83a599f3c1ed
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Aug 23 11:31:51 2024 +0200

    third node will be used later with the other types of sections.

commit 96480fdf0efecf57f8992d18cbee1768bb093898
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Aug 22 10:45:39 2024 -0400

    Note issue in Archer when editing certain comb trees
    
    Looks like there's some sort of Archer specific weakness handling comb trees -
    when trying to apply a color, some (but not all) comb trees ended up being
    corrupted.  MGED was able to complete the same operation without issue.

commit ad78397a2186c12736761843ead2df7ae1d0152f
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Aug 21 20:14:34 2024 +0200

    new line

commit ff03a84955e2ba7e0ea25f6e95dfa6c78b51c614
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Aug 21 13:57:15 2024 -0400

    Make note of a BoT raytracing failure with lint
    
    Crash observed trying to run lint on the facetize output of havoc:
    
    facetize -r havoc havoc.bot
    lint -V havoc.bot
    
    Crash is in the BoT shotlining code, somehow getting a null trip pointer
    at bot.c:1480

commit 1ecaced1946738f367272829a01e91c8f5c08ed0
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Aug 20 15:15:51 2024 -0400

    This doesn't fix the BoT lod error, but it should at least avoid crashing.

commit f44a46c71b6750b170af94c8da8b9439b8d234ba
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Aug 20 15:01:02 2024 -0400

    initialize childnodes, don't realloc if nchildnodes[i] == 0

commit a0e7f4de4cd361bde930b89087fdce048790e312
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 14:59:06 2024 -0400

    prettier spacing with the redraw checkbox gone

commit 9b31e3f6ad44551ced914e862bc64a42ea55ded6
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 14:57:14 2024 -0400

    fix LOD Configuration tool
    
    update LOD configuration tool to reflect 'redraw' subcommand removal
    (ab4d33f)

commit dd6171742d94b0ffc91130983fca8b1ac8fdb4d9
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 11:21:10 2024 -0400

    add simple progress bar feedback
    
    when the execution got moved to gchecker (fdd3918), the progress bar for
    this tool essentially became useless. In a perfect world we'd probably
    have some sort of signal to poll progress and report back or refactor
    gchecker to run one suite at a time. But, tcl doesn't easily accomodate
    signal sending, and a refactor would be overkill just for a progress
    bar.
    
    In the meantime, give very basic status text to let the user know that
    their click is doing *something*.

commit 86b9d738bcf57160e5accc13bbafa98d01a92d6b
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 11:06:04 2024 -0400

    use -f

commit 610a4d64bb1c23d7be3411bffb4621d8d44cab02
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 11:04:13 2024 -0400

    smarter default location hunting
    
    gchecker writes the the current working directory - not where the .g
    file is

commit e49c27e6bdcb144a0a74ca739970e7bf355baa52
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 10:59:12 2024 -0400

    close forgotten fp's

commit 72e2e0c2432df2488da1f1e84b6b0952f3a08829
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 10:56:07 2024 -0400

    correctly catch gchecker errors
    
    our raytracing tools log to stderr, which 'exec' treats as an error. So,
    use the status plus last error code to determine if gchecker actaully
    failed or it was just raytrace logging.

commit 7cf2b3ba96059730b5c4ac35d85aa375f3faeeea
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 09:26:28 2024 -0400

    need to close gedp

commit c355d377d9ae9880aed03cdecd8a88772fa30930
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Aug 20 08:57:20 2024 -0400

    add 'force' flag to gchecker

commit 205965666b9abadeaff24fb9b8e6317054a738b2
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Aug 20 09:17:39 2024 -0400

    Make a note to look into CMinx and see if it might be useful.

commit 7e066eac5c30ef48e912890c46927934073a90d5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Aug 19 17:12:09 2024 -0400

    Set up to work on integrating mmesh for decimation.

commit bb040907bf2214326c9a0ca46c967c04d6483cc6
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 19 22:22:14 2024 +0200

    Pipe clean up

commit 8ca81d575a7bf83537fd609039cfabeb44b1332d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Aug 19 13:51:41 2024 -0400

    Revert "Update libbg SPSR to use upstream header-only mode"
    
    Restore older working SPSR code while we try to figure out what we're
    doing wrong with the newer code.

commit c36e09e27201af5dcbddd820649b4cb984eb8a99
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Aug 19 13:49:00 2024 -0400

    Update libbg SPSR to use upstream header-only mode
    
    Not working yet, but we seem to be able to feed our data in using this
    approach and get *something* out, so checkpoint now to document how to
    use their templates and streams.  Probably can refine this further, but
    it does compile and run.
    
    At the moment the decimation routine explodes with a bunch of SHOULD NOT
    HAPPEN errors and crashes super hard (brings down the desktop, in fact.)

commit 7554e0982fa4fbdcb919cae91f670be0184792b1
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 19 18:08:08 2024 +0200

    export error fix

commit 9607c363bd88a4971f31b60fcd64040dd4642573
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Aug 16 19:49:33 2024 +0200

    Pipe class

commit ead785b0a94e4882ba5ee206f6ed29595f601edd
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Aug 16 09:40:26 2024 -0400

    Call out the bext submodule in HACKING steps
    
    Modernizing the release instructions here is still a work in progress,
    but call out the submodule update as a step.  Target for testing is now
    just distcheck.

commit e8241067f27ac8b6a4b3f5d6391cc708afcbf28a
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Aug 15 13:12:47 2024 +0200

    first try with Pipe premative

commit f593c78063e37a4a85d1bb794b651522ec03ef9d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Aug 14 15:16:04 2024 -0400

    Limit the get_dbip ugliness to f_db.c
    
    As far as I can tell, this is the only use in BRL-CAD of get_dbip.
    Still very ugly usage, but confine it to this file to prepare for
    getting rid of libged's dbip/get_dbip command plugin.

commit a248e798bc2cac3bc6506a587b0310517be1c7ee
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Aug 14 12:27:47 2024 -0400

    Adjust approx comparison tols for drawing tests
    
    Couple of these were a little too tight, failing on OSX.

commit bcc2e1dfa6fa8631c9e0c2acecbdd22171634719
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Aug 14 12:08:45 2024 -0400

    Adjust rel tol for libged select drawing test
    
    Mac select test is failing because of trying to tessellate tor at tol
    0.0001:
    
    Attempting to triangulate tor...
    cut_unimonotone(): infinite loop 0x60000231aac0
    
    cut_unimonotone(): infinite loop
    
    LoD test avoids a similar failure by using 0.0002, so use that.  A
    tol rel 0.0001 setting should work (and does on other platforms) so
    that's an issue, but for the moment adjust to something that gives us
    geometry so we can do the drawing test.
    
    Fallback methods failing is yet another concern - specifically, the way
    SPSR decimate fails with bu_mtx_trylock and bu_mtx_lock failures.

commit 92542429905cfa16084a4364a97db59264ec3590
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Tue Aug 13 21:46:28 2024 +0200

    beam class

commit 9c00040a9381de5d88d8acfd70a1bdf78c6aca2c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Aug 13 13:46:01 2024 -0400

    Try enabling check for OSX on the Github runner

commit 5b1e5adf473d2ed9bc7e45fdb979918d1332f144
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 12 18:13:13 2024 +0200

    preparations for section type (CST= 1)Tubular (circular only)

commit 1a3c4e401845bbb45ae5e257b65d53044ac51979
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Aug 12 10:36:45 2024 -0400

    Werror fixes

commit c5416cbab77a3feaaeec84caf04221e764f6498c
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Wed Aug 7 09:25:09 2024 -0400

    have summary be useful for objects

commit 649705ee379ee539865176fc8a8b3b6d0df1f225
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Aug 9 19:16:48 2024 +0200

    SECTION_BEAM

commit ee32e3165e74fadd3bf42c5f6fd58e0e6a3c0122
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Aug 9 16:55:49 2024 +0200

    ++region_id

commit 9dfd6faf75364eed0564e18e8a05da0bf0fd6412
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 9 02:01:18 2024 -0400

    fix some more spelling mistakes found in doc files

commit b7bc05d10355d493c120df3dc51f2febb2591316
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 9 01:47:18 2024 -0400

    scan+fix remainder of easily found app code spelling errors.
    
    fixed over 190 oopsies.

commit e222c61265b29b085f4aa5f58721bd6c82d0b1b6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 9 01:46:59 2024 -0400

    scan+fix remainder of easily found app code spelling errors.
    
    fixed over 190 oopsies.

commit cb26e21a9f4fa3a64cf305c85c621bd4567512a6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 9 01:11:58 2024 -0400

    find more carlisms spelling errors in public headers

commit 69609442c8798948d50261af9c6992b5ae826e6f
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 9 01:00:48 2024 -0400

    remove the print statements.
    
    they can be reconstituted easily enough.  comment on how simple this test actually is, basic sanity check.

commit 63d29d65983720fea5c2571941a41c8adbda36aa
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 03:27:58 2024 -0400

    more spelling corrections, done with all our libs

commit c8510ebb0477f0e8fa1a5e0ce47ac219feb4ecae
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:55:50 2024 -0400

    more carlness.  fix a slew of spelling errors in libs.

commit 968e164a9a7b6c4fe83ec4185d9557f807f2ee56
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:55:00 2024 -0400

    down to just the lod failures

commit e166cacfc49885d9b4965187f7aa4e4fc8b614ec
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:47:01 2024 -0400

    channeling my inner carl.  fix more spelling mistakes.

commit 9d2acb90f3e120b5528f157860d5fd4159260208
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:38:00 2024 -0400

    need carl.  fix handful of spelling errors.

commit 77ba67785d5b6c3a48b3ddca89f19b8bbca58ef6
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:24:08 2024 -0400

    symbols prefixed with underscores are reserved for libc and compilers

commit 8e3b8bbae618749a980b101325f616dcd890c923
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:09:41 2024 -0400

    value of marking static, remove unused func.
    
    should be reinstated as bu_str_isdigit() if that route is taken.

commit ab84d9f24e0be8032a510a4edac7077f8b4cb536
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 02:06:47 2024 -0400

    document bu_str_isprint()

commit c9f2bcba815bb95de1645a77342d8ccea9f92fc5
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 01:53:11 2024 -0400

    ws style indent consistency cleanup.  make all funcs static.

commit 0f26360adda493197f257378052d377982818573
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 01:00:07 2024 -0400

    ws

commit 70beb6d3a85a96839c3683ca9dd31bd5a5d27ad2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 8 00:59:34 2024 -0400

    refactor file+dir teardown into a function to ensure clean start.
    
    encountered some build dirs were leaving files around, which can happen when the test fails or the testing is interrupted.  so this ensures we delete what we expect to create if it exists at the very start (as well as at the end when we pass).  that way files will still be there for inspection if/when the test fails (hence no atexit()).

commit afe6b2a638243e277c65208a112a17a58547158a
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Aug 7 21:57:08 2024 +0200

    some elements

commit 6ed88bc581b38a0c96504fcb74679fd319b59bfd
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 14:29:47 2024 -0400

    vmath arg love too, when it's fastf

commit 38b1c886edd51ac803690cce1facb0e6207751d2
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Aug 7 20:26:54 2024 +0200

    region_id

commit 62a305e35c833bdd75c07f25686bc2e471f6c0eb
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 14:16:55 2024 -0400

    more vmath love

commit b696af8313a96d1be8c4449dc7d00d80e904be9d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 14:11:39 2024 -0400

    more vmath, works with fastf_t rgb arrays too

commit a2a81febacbadcb2b95cfd9e070ac294c91c1230
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Aug 7 20:09:56 2024 +0200

    mk_lcomb

commit 36faba58cab847b9d159abcf3c437255cafd6aed
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 14:09:15 2024 -0400

    floating point sensitivity if we don't actually save the multiplication.
    
    could be improved as this is currently testing round-trip consistency which is not guaranteed as we don't have associative property with floating point math.

commit bb06e53a2932d80c070a8786cba127762247094c
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 13:24:08 2024 -0400

    fix bu_file test failure by adapting our test.
    
    test previously assumed we're running on a unix-like filesystem with distinct read/write/execute bits that are set a particular way by default.  this was both wrong for different umask settings as well as different filesystems (e.g., exfat) that are fixed-permissive (akin to immutable 777 everywhere).  thus, changed the test to force the files permissive with an bu_fchmod(777) where we can at least ensure read/write/execute are set (and we can't reliably check if unset after bu_fchmod(000) or variations thereof without knowing the FS).
    
    also added a few more checks to make sure files exist and do not exist at the expected times.

commit 238e63051e7cf5d25060d3cc6127a085096f927d
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Wed Aug 7 12:44:56 2024 -0400

    make sure the directory was made before proceeding

commit 805c6303e1fa18e0045016b848546cf972c73ed8
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Aug 5 16:17:50 2024 -0400

    Werror=pedantic

commit b2937c3a05836d46c41a165229bbf2a97ca83175
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 5 22:10:21 2024 +0200

    small modifications and element pulley

commit 63f7dde36b824b6668a184c68919b15d6140bb68
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Aug 5 20:56:55 2024 +0200

    region color

commit 0367adc5742269f0bc881f1682c2f6f3a91b0319
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Sat Aug 3 14:33:49 2024 -0400

    Wrap primary BRLCAD_ExternalDeps logic in a function so it doesn't execute simply by doing the include

commit 663dfb3f3dff8dc63e053fccd0186aa1a108e367
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sat Aug 3 13:49:33 2024 +0200

    handling  element beam options

commit ef9220a35bae83046ccf833b021fe38f4a74db74
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 19:41:11 2024 -0600

    autoformat comments for consistency

commit 46ca92df6309551299ee5536ea53b215339bdaa3
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 19:34:54 2024 -0600

    annotate major issues making this file+code exceptionally difficult to read, follow, and maintain.

commit 3dbddcf97e98cdee7bce67918aa36683b138f9b4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 19:22:51 2024 -0600

    try to say same preamble with less verbosity.
    
    cuts to the essential info a bit more.  Leaving secondary configuration detail (which unfortunately dominates the header) even though this documentation is not really discoverable.  Might be better relcated to HACKING.

commit 7cda3843ae15d448d8c8ea796d83b4aec94390b9
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 18:46:43 2024 -0600

    can simplify even a bit more to just notify when going auto.

commit 1dffb07522d6ade28951cebe86324e212a5f3c68
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 18:30:34 2024 -0600

    simplify BRLCAD_EXT_DIR reporting to improve usability.
    
    there's really only two audiences of concern, someone that doesn't know (the default) and someone that does but needs to be warned in case that wasn't their intention.  Also simply helps to say the same thing in fewer words.

commit 36e8043a5d2dae153c0508d1ed454a01099c48b8
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 15:18:25 2024 -0600

    Revert "bye bye bext"
    Didn't realize this is a submodule.  Will have to see if we can document it as such somehow.
    
    This reverts commit 4b5588ddfb49c3ab26e3c17b4bdeceadea86d9f2.

commit 527f9e5d0997632d1496ddf6695971c8432d9d0a
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 14:58:10 2024 -0600

    auto ws cleanup

commit cf34d4c45ffc67af5d5123260e2310a5862d2c79
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 14:53:46 2024 -0600

    documented bu_parallel_id and friends better. just a few check failures to go.

commit 69d906dbdac51fc6e13822b6126fee2ff13e7496
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 14:53:20 2024 -0600

    document how per-cpu containers and IDs are supposed to work.
    
    disambiguate bu_parallel_id() vs bu_thread_id() a little better too.

commit af04ca7bb437a6725e982d2c94748f06b146d5a4
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Aug 2 14:36:48 2024 -0600

    still not right, got to allocate MAX_PSW.
    
    bu_parallel's interface does not guarantee 0-based or 1-based indexing.  it just happens that some environments will be one thread (e.g., -P1) or the parent process (0) will kick off N threads that end up 1-indexed.  however, an application (or plugin or library) could have kicked off threads in which case per-cpu indexing will be in some arbitrary 0-to-MAX_PSW range.  thus calling sites allocate MAX_PSW even if unused to guarantee lock-free contention and give maximum performance.

commit bd8577d7c606faa90660d513c4ca27f588dafaea
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Aug 2 11:15:32 2024 -0400

    Allow for 0 or 1 indexing with bu_parallel_id
    
    Got bit by this with the new BoT raytracing - on Windows,
    bu_parallel_id() starts counting from 1, so the thread indexing into the
    hit array was offset accordingly.  On Linux, however, bu_parallel_id()
    DOES return 0 - so that offset generated an invalid index and
    segfault.
    
    Simplest approach appears to be to increase the hit array allocation by
    1, to allow either indexing approach to succeed.  Additional cost of a
    single unused hit container is negligible and avoids any other need for
    conditional logic.

commit a2d4fb5cf22df43c4896cddb4b27cc7ab032cc36
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Aug 2 11:09:36 2024 -0400

    Add a note to check bu_parallel_id indexing

commit 4b5588ddfb49c3ab26e3c17b4bdeceadea86d9f2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 1 19:04:49 2024 -0600

    bye bye bext

commit 9d0d2d2d49f6de005f5063938625efd3f1ae51b2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Thu Aug 1 19:04:35 2024 -0600

    need to mark the externals SYSTEM or we get warnings/errors on mac

commit c98cdfb406369d6b577149a0662578260b01e356
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Aug 1 13:43:23 2024 -0400

    revert 42057b9, fix per-cpu-array accessing
    
    Incorrect diagnosis of the original problem. Access violations were
    being caused by a bad method for calculating indices. Using the OS's
    thread ID % number_cpus had no guarantee for uniqueness and often
    collilde (for example 100%4 and 104%4) - meaning hits were being added
    from bot_shot_hlbvh_flat() at the same time they were being sorted in
    rt_bot_makesegs().
    
    Proper fix is to use bu_parallel_id(), which is calculated and managed
    by bu_parallel.

commit f4c3d7f897e8ae678ce080308bdafd4186cfa7a4
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Jul 31 17:53:56 2024 +0200

    minor fix

commit 8d68d75d2c2940fc0d96546371a57ddfca57f1df
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Jul 31 17:46:34 2024 +0200

    a solution for handling element options

commit 7c387658f5636dd1f4694ba5a0c60c47dc20059d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 31 10:46:27 2024 -0400

    Do some setup in summary command to get ready to accept object arguments

commit 73a01a7039b3fc918b8ad5e4309cb54c4d258497
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Jul 30 14:02:38 2024 -0400

    add some Windows TODOs

commit 42057b97588a6e1ea9fade65bfd99eab779b28b3
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Tue Jul 30 13:44:22 2024 -0400

    naive fix for bot raytracing on Windows
    
    with the recent hlbvh work merge, Windows raytracing for bots was
    broken. This was caused by indices being based on the current thread id
    (gathered with bu_thread_id()). On Windows, the thread ID is often
    recycled from recently closed threads which means indexing into the
    hit_array is not guaranteed unique. This lead to bad rt images and
    memory access vioations.
    
    To temporarily fix the issue, we need to allocate the hit_da container
    on the stack before doing shot calculations. This will almost certainly
    have some form of performance implication but the extent has not yet
    been tested.

commit 0eef223c3496cc5a423b2da88f9b9e561fa712b6
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Tue Jul 30 11:11:45 2024 -0400

    Make valgrind on Ubuntu happy by doing some initializations

commit e91c0585f41cf48dc0b8c6eec77a9fba39c8325e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jul 29 21:22:11 2024 -0400

    Not sure if it's a libdm issue per-say, but add some notes to look into Zink and VulkanSceneGraph.

commit 79ddee2fd93c7090ee68b51fb21498590894ec64
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Jul 29 13:54:26 2024 -0400

    fix signedness comparison

commit f70a0777a240a35530c8bf2577db17ac498be029
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Jul 29 11:39:10 2024 -0400

    fix flat search + exec bug
    
    when doing a flat search with | in mged, the path was being built with
    db_path_to_string which always assumes the path is starting from the
    root - and therefore prepends a forward slash. However, this is not
    always the case. Bug was noticed when using a 'search | .. -exec ..' as
    the exec inputs would have a leading slash and would break.

commit 863e431bf3007932b126e677930229a5df4235da
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Mon Jul 29 11:36:48 2024 -0400

    add some unit tests for db_search
    
    stand up some basic db_search tests in librt. Nothing terribly
    exhaustive yet, but this provides a baseline / entry point for
    more tests

commit e543412ea1e3e709602cc621ca48b78b55bdc359
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Mon Jul 29 09:21:57 2024 -0400

    Update tol.xml - dist specified in mm
    
    update man page to show dist specified mm not model units

commit 76faea6e5670b140d876134f4c335608b5405a36
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sat Jul 27 18:03:43 2024 +0200

    distinction between command and option

commit 00d89932ed124ce3a465c098b666bf59f3e651cc
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jul 26 22:18:31 2024 +0000

    break up the wall and document a bit

commit 76b215abe895b1c0c91107f3ba584ccf84086bc2
Author: Christopher Sean Morrison <brlcad@gmail.com>
Date:   Fri Jul 26 21:53:08 2024 +0000

    document BRLCAD_EXT_PARALLEL since parallel bext builds are not yet reliable (Tcl chokes)

commit b4de1517ab06b7fa5ef9552a8791b4aed12f7281
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 26 17:05:18 2024 -0400

    Needs to be ON, not just defined

commit ac2ff509ea170174bd0a794d8d97808a4bebf92c
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 26 17:02:45 2024 -0400

    Allow for the possibility of a Doxygen-only configure so we don't have to build bext

commit 306d8c9e3df074abb872e91fb28c89ac2a4f58ff
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 26 11:21:01 2024 -0400

    Update mirror script to update pre-existing clones, if present

commit daf20816b1597f069cf755b6715fe00eca50f187
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 26 10:21:27 2024 -0400

    Stash a script to pull mirrors of all BRL-CAD git repos

commit ebd29ac66c23990ba5b7a2070192cb56d74df43d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 26 09:36:27 2024 -0400

    Bump version numbers in main to next dev cycle

commit f01665b5297387d04ebd3ffa861b61910e452294
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 22:42:03 2024 -0400

    Another MSVC build fix

commit 0a3aef7db7eada9920ace6752a8894f7034e4138
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 20:00:42 2024 -0400

    Compile adjustments for MSVC and OSX

commit 4568e2f5728bb2250ec908414e84f5a1c36b68cd
Author: f4alt <christopherjmacgregor@gmail.com>
Date:   Thu Jul 25 16:01:31 2024 -0400

    need to launch subprocess with env vars
    
    in funky build environments, where we had to build with specific env
    variables set, we need to make sure to propagate said variables

commit e4901e40ca4161323dcf22fd3137f5f6bb18a1ae
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 16:05:05 2024 -0400

    Get lh BoTs rendering.  This also gets regress-bots passing.

commit 4105bd4dc9b82a18374e4b541e14be206fcbdd92
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 15:54:13 2024 -0400

    Revert "Back out the hlbvh changes - breaking regress-bot."
    
    This reverts commit f5f0149868412c37427c6df229b4fb57870d912e.
    
    Going to try an adjustment to bot prep for lh bots

commit 3047c284ba94488a9740bda1dddf9abdb6d55f79
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Jul 25 20:25:00 2024 +0200

    size_t

commit e3a7761cdd2c33be70ed41c407dc4ca9c1d23a5c
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Jul 25 20:19:28 2024 +0200

    reference

commit e35da3b72570c930761b4a40cd8461e481783566
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Jul 25 19:16:34 2024 +0200

    small fixes

commit f5f0149868412c37427c6df229b4fb57870d912e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 11:01:51 2024 -0400

    Back out the hlbvh changes - breaking regress-bot.  Doing this in a single commit so it can easily be restored.

commit 5d61e3d994397efa364a361002b9f3cba8f0a851
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 25 10:48:03 2024 -0400

    Add header for bg_isect_tri_ray

commit 66a37b84f7ccd0b9c7ddf8e6e0c8f5bbd7355bbb
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 18:39:03 2024 -0400

    Allow perturbing of arbn as well

commit 8086c0e172d36a26af086c2a6152940a314a182b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 17:48:49 2024 -0400

    Take the perturb routines for a test drive with qged.
    
    Not a cure-all, apparently, but potentially useful none the less.
    Working with r.ant5 from havoc, perturbing the primitives and then
    facetizing produces a bot that still won't pass lint, but seems to have
    fewer failures.  Following up with bot strip, bot repair and bot
    decimate was able to get to a clean BoT.

commit 53e78aca3afe97d02d33f56f09f5d5bf661bd363
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 13:24:23 2024 -0400

    Fix ctrl images

commit 5bdd73cd1c434beabb3e2e4d6853b0aa5e994cbe
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 13:15:04 2024 -0400

    rt_arb_calc_planes assumes a non-NULL vls

commit 87072190930cbf96c2de4e591ece71c66e029882
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 12:38:59 2024 -0400

    Re-enable arb perturb adjustment

commit 9c7f2f3f7b5649e0782e0701f68689407df39de9
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Wed Jul 24 12:31:46 2024 -0400

    ARBN keeping us honest again - bg_plane_pt_nrml needs to be synced with the other functions

commit 6270203e5a1fb79c536944034e9085306e7a6ef7
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Tue Jul 23 16:41:27 2024 +0200

    one line fix

commit b196c36d9f3e97a0325af16cb631a44f9a65de80
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Tue Jul 23 09:54:57 2024 -0400

    Update facetize.xml - add note about tolerances
    
    Add note about tolerance and direct users to tol man page.

commit 63b07e9026fcfd27f8c72c9c38af56a2d0ae5ce1
Author: joshbaker22 <141415098+joshbaker22@users.noreply.github.com>
Date:   Tue Jul 23 09:26:24 2024 -0400

    Update tol.xml abs in mm
    
    adjust note in man page stating that absolute tolerance is specified in model units (testing shows it is specified in mm)

commit b1995c437f4e385acc3c81c9159c1c69cec6a89e
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jul 22 20:22:29 2024 -0400

    Clear a few static analyzer warnings

commit 49240327d31c00d2445fb92c047c758bc05d98bf
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Jul 22 21:09:08 2024 +0200

    VMOVE

commit e31eb950efae236da510296a12ec64cb38d16837
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Jul 22 21:00:24 2024 +0200

    AddArb

commit 7b4f444a73335daffc8b13069edd27ddea9b4694
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Mon Jul 22 11:15:48 2024 -0400

    Make various corrections to polygon and projection logic
    
    Hello rabbit hole.  When trying to construct ARBN primitives from ARB8
    primitives, found a problem with the closest point calculation that was
    being masked in other use cases.  Also saw an issue where passing
    point_t rather than a pointer to the point_t was causing a problem.
    
    Correct the libbg plane/point unit tests, updated a few of the ell
    drawing images which were showing pixel differences after fixing the
    projection issue, and verified the qged polygon drawing works.

commit 8066eef42617d79c2a2704217a9d2327a28d7e50
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jul 21 23:24:08 2024 +0200

    arb4...arb7

commit 250d14f0249fc61a8de947dc46b0bb886e22d990
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jul 21 22:30:03 2024 +0200

    cleaning

commit 3bb2f40fe940a4e468a26467b7aba330c475f7f5
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 19 23:36:12 2024 -0400

    OK.  Able to (finally) generate valid ARBN primitives, but still some unanswered questions.

commit 9d95c0fbba04009e3ba064a50a55710554e87e8b
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 19 17:09:21 2024 -0400

    Use mk_rcc, start setting up to look at arb8 (not working yet)

commit b0a7fbfa3ea77fc41f7e0a05376765f51f23009d
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Fri Jul 19 16:42:13 2024 -0400

    Set up some logic to exercise perturb code.  Just tgc so far.

commit 644c59c3509af2766242c0610ebf556355d487a4
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 18 16:10:15 2024 -0400

    Checkpoint some exploratory perturbation work
    
    Thinking about how bumping the primitive parameters might work, using
    tgc and arb8 as the initial focus (those are likely sources for coplanar
    faces in models - of 2429 primitives in havoc.g, 2137 are either tgc or
    arb8.)

commit cc0dd1cecdcf6b154becf740728c48f3e2dc25ff
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 18 11:24:10 2024 -0400

    Stub in a functab entry for a perturb function

commit 55fb3fb422b8ba8005d074f0b4dc8d9bb3103a3f
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 18 10:34:49 2024 -0400

    Add a note to look into what we can do to automatically tweak solids out of coplanarity.

commit c57b3170348d1fea4aadf950bea9ccc07f9ad424
Author: Clifford Yapp <238416+starseeker@users.noreply.github.com>
Date:   Thu Jul 18 10:10:08 2024 -0400

    Add a note to look into updating our SPSR code

commit 2df94d19af27ece7937826925d67307bb64a67db
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Jul 15 21:43:39 2024 +0200

    dot

commit 1f8fad791fde27e9ee9eb5527ca4fdc19f04de37
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jul 14 22:25:58 2024 +0200

    updated Names

commit 71473a5142f03b83e4712b12bde1252639c654fa
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Jul 12 15:11:42 2024 +0200

    pssing a refernce to Geomtry so I don't delete the objects twice which will cause memory access error

commit e22e89fc43b20d82912803428b13f10322197739
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Wed Jul 10 17:55:11 2024 +0200

    a conseptulization of geomtry.write() still need to modify arb.write() so I don't name the arbs twice

commit 514d959bb981465a179194b581762574a6ec7894
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Jul 8 19:35:26 2024 +0200

    getNames

commit 9ee645233e445245b9b8d47e20b4b00b7bedb872
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jul 7 22:15:45 2024 +0200

    toupper

commit 86e96b05431dfc5f36de5e8a8fcacb452e2569b9
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Jul 5 16:45:50 2024 +0200

    Geomtry class

commit c30bebc194d40baa55a7d5b56d015e065e192a71
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Jul 4 17:59:42 2024 +0200

    Case insensitive keywords

commit 9a6f3722d9b18410bece31b79f436dffe90b3897
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jun 23 21:59:14 2024 +0200

    cleaning up

commit b46cf185e2f59010b1396822ec8daba9c87c2eb1
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Tue Jun 18 20:43:04 2024 +0200

    modifications for comma separated files and non default only format

commit 090faa81d1a113924e870cd978367a378109100a
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Mon Jun 17 14:40:33 2024 +0200

    split_key and nodehalfline

commit 9bf69c7942c29ea6e144fd9a099319eccd3e70f6
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Jun 14 14:11:04 2024 +0200

    draft realted to formats

commit 6cd66781a5ed0cd7fdf82f67efa45ace864a01ba
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Tue Jun 11 20:28:34 2024 +0200

    update with comment

commit 267ce68d063d2cabfe7bdcaeca10ebc9ec6adf5f
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Tue Jun 11 15:10:07 2024 +0200

    function to read node standard format

commit ac794e1606b7bce94e25afcff73fa3b92bbbc574
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jun 9 15:31:58 2024 +0200

    bigger or equal

commit 01cfc8bac759f8869e7ccc9628051addd04b189a
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sun Jun 9 15:02:05 2024 +0200

    test rt_db_get_internal updated

commit 92f004b61a1e22d2c9471db12c4a8fff27ac7b59
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sat Jun 8 22:33:24 2024 +0200

    test directory

commit d85e44937f46c6f845bbce579918c74c5b4418c5
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Sat Jun 8 22:12:37 2024 +0200

    test rt_db_get_internal()

commit e0d4b6d098f6a5bdb7676ce3796dde5720e1342a
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Fri Jun 7 21:28:51 2024 +0200

    update pull request

commit 468a80c374c219d8badd106833336ef990750b25
Author: louisgoogl <lgoogl696@gmail.com>
Date:   Thu Jun 6 23:31:51 2024 +0200

    Handling unexpected command *PART_ADAPTIVE_FAILURE

commit 2764e3a4d44be70dc3839706a4c528571c78cf13
Author: Ali haydar <lgoogl696@gmail.com>
Date:   Thu May 30 20:00:35 2024 +0200

    Update k-g.cpp
    
    deleting some code from k-g which was leftover from previous development.

commit 600b5c559e0aef05508fe914c33baf1e1f0f1ddd
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sun Apr 21 11:08:13 2024 -0500

    Fix indenting on the hit sort

commit 5ac712c69e3afa8e9f59d3c5d8e4d8d179b7153c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sat Apr 20 22:06:25 2024 -0500

    Remove btg.h from CMakeLists.txt in librt

commit 618310632195f640d58bb98d29f28c1de25b972d
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sat Apr 20 21:13:17 2024 -0500

    refactored make_oriented_segs to leverage dynamic arrays and get rid of MAXHITS

commit 058d4b491cddb3a2934f1b33def9f03d7662019a
Author: Daniel Rossberg <33295041+drossberg@users.noreply.github.com>
Date:   Sat Apr 20 16:32:54 2024 +0200

    minor changes
    
    w/s, comments, clarification

commit f479804583c4d629b2fd2e8e421c15079908d0aa
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sat Apr 20 09:15:47 2024 -0500

    Delete btg.h file as no one uses that interface anymore

commit 79cdf32ebdddc82d31a886d9c18cc6154729dba7
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sat Apr 20 09:13:36 2024 -0500

    Remove code in btg.c and btgf.c as it is not used anymore. Those files are now stubs for the tie interface, one for the double interface and one for the float interface.

commit ee9fb6f25309187d063dc5b64621bdbdb8e60d03
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 16:52:09 2024 -0500

    Add license information to cut_hlbvh.h

commit 49fa4ac54c32f6389719d164c0cc43f791b3e3ea
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 12:13:39 2024 -0500

    collapse hlbvh_shot_raw and hlbvh_shot_flat functions together, just exposing a stubs to the user

commit 9399f969e3f639d9d47b6657c69cedc4f7be877f
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 11:57:17 2024 -0500

    Propogate stack size change back to hlbvh_shot methods

commit 15f05b247540bab8bb72ffe6eadd50bef1b0b453
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 11:53:00 2024 -0500

    Remove old comment

commit ff2aad53fc833188bcf9cc837b67d4e990c722de
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 11:50:20 2024 -0500

    Fix -Wc++-compat warning

commit 1db97ca3fc12e0aed6b291b4fd59d601f1da4901
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 19 11:48:58 2024 -0500

    Fix macro DA_APPEND to be less compiler-specific without throwing warnings. We can resimplify with typeof after C23 becomes standard

commit c561b7fb03df4c762aaa22e423834a88cf0cca57
Author: Daniel Rossberg <33295041+drossberg@users.noreply.github.com>
Date:   Fri Apr 19 16:56:03 2024 +0200

    a more feature-rich version og the LS-Dyna keyword file to BRL-CAD converter

commit 10dec2ac4401338ddabb9a74d410a9e3959f7378
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sun Apr 7 14:21:56 2024 -0500

    Added new file cut_hlbvh.h to ignored files in CMakeLists.txt

commit 7a52ec55760632da389c1553d27b08fd97935679
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sun Apr 7 14:20:02 2024 -0500

    Deleted g_bot_include.c and updated the CMake to reflect that

commit 5bac1fe397d0393aed63b18eb78d391d31cbcbb2
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 17 14:16:49 2024 -0500

    remove extra #undef since we got rid of the initial define earlier

commit 5c8fe47945d04b9409f79e196cd8dc0659d2aee4
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 17 12:33:26 2024 -0500

    Fix typo

commit aef6fec9d8404f2803bba825983c6db75ddc54e9
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 16:34:38 2024 -0500

    Delete unused line of code

commit 86bdce49622a68ce74870d308ec12771aff3b0f7
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 14:19:30 2024 -0500

    Delete unneeded check in rt_bot_free

commit 4e20b8e635e53eb8eb9313f4eab0af36c1723d82
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 14:18:25 2024 -0500

    change variable type to get rid of warning

commit 3742c200efcc74a68a2659ec8ddd81a1b0a64fac
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 14:18:01 2024 -0500

    Add comment about functionality of vertex_normals in spatial_partition_s

commit 1d471c0ea13c6307c58415c9973b49ea5d07736b
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 13:55:53 2024 -0500

    Update MAXHITS to depend on DA_INIT_CAPACITY, we should remove MAXHITS when btg.c no longer exists

commit f26409983ec3d47364293066afe094559042a6b0
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 13:42:58 2024 -0500

    Get rid of a bunch of unused includes. These might be used in, and therefore break, the OpenCL pipeline or the new implementation of rt_bot_vertex_fuse(). If so, these can be added back later.

commit dbd3096270717aa7182c3b82b21f405aedc33628
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 16 13:22:41 2024 -0500

    Remove internal references to 'tie' and replace with 'spatial_partition' or sps for 'spatial partitioning structure'.

commit 8979ccb8a9fb6df896dca0bb076f0ba92aba2548
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Mon Apr 15 02:06:23 2024 -0500

    remove old line that was initally there to get rid of an unused variable error

commit 2803fb79b8e2d745f14e5835a4730a4d199adb15
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Apr 12 21:12:17 2024 -0500

    Update comments

commit 4f9b6cf22365c9e842d84f5ad95771aed84ddcaf
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 11 23:20:33 2024 -0500

    Added a stack size and checking for stack overflow in bot_shot_hlbvh_flat

commit 16b17e01606b4edbd78ab7ff2a440839df180eea
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 11 23:18:19 2024 -0500

    Fixed some old comments

commit 48c9463a7c6cae9daf26acbb713ec1148e50ab3b
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 11 23:17:18 2024 -0500

    Changed RT_EXPORT to extern - this code is meant to be used interally by librt

commit b0036fa9c2684096c3e1ced514996931f6b195d5
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 11 23:14:00 2024 -0500

    Looked at some data and decided on a good default for RT_DEFAULT_MINTIE

commit 2015612c3df39926903d36e933d1490ec696ab94
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 21:58:56 2024 -0500

    Disable unavoidable warnings in macros

commit e63eec99504404593f12868c90bebf759ede1294
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 15:01:14 2024 -0500

    Removed unused variable and parameter in rt_bot_oriented_segs

commit ed1daa9ff889de20c3490d3d3d9588557347060c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 15:00:07 2024 -0500

    Removed unused parameter in rt_bot_unoriented_segs

commit 46358469d6b94c191fbba64e1de8a0c7e0ae63a9
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 14:58:14 2024 -0500

    Eliminated unused variables and parameters in rt_bot_surface_segs

commit 082d5324ec3189487c0c156106a48822a1034ba4
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 14:28:57 2024 -0500

    Deleted code that supported raw bvh_build_node mode, because we saw in performance testing (for both memory and time) that the memory win was worth the time hit.

commit 05ddefa9ea278a8ce1517a1223156616b1dc784e
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 11:30:08 2024 -0500

    Add flattened shot function

commit b76268276323e9598b888604823107d8175b5a0d
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 10 11:29:16 2024 -0500

    Fix very long line

commit 3e6470de05bd1f7331995788ece7b305f9ee8143
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 14:40:01 2024 -0500

    Modified bot.c to have an #if switch between flattened and raw modes

commit ab8738aa1ea3219524be7553510359830e2ac48c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 14:38:56 2024 -0500

    Add flattening wrapper; correct exported function to be the wrapper; Add functions to use 'bvh_flat_node's instead of 'bvh_build_node's; disambiguate between flat and raw functions

commit 4a11c250ee6a826bb7775205df6099236ff8c037
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 13:43:50 2024 -0500

    Change hlbvh_shot to hlbvh_shot_raw and update cut_hlbvh.h

commit 61e3b9056bfbf2e8a27f1618eecd5da584f78cb8
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 13:25:46 2024 -0500

    Move the location of hlbvh_shot to be below hlbvh_create

commit 141b8d5c02ca040a3ce3bacbc7454b43b4839d90
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 13:19:26 2024 -0500

    Added a bvh_flat_node structure to cut_hlbvh and copied out flatten_bvh_node fron the OpenCL code and modified it to compile

commit 3883fa35901cda046400d4ac4a070f7b51366ef3
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 9 10:56:38 2024 -0500

    Actually plug in LIBRT_BOT_MINTIE into the parameter in hlbvh_create

commit 5517e727c8326050b29568cc6b5b0504d99449a5
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sun Apr 7 15:27:40 2024 -0500

    Fixup a comment

commit 75a020b2bfe5c12166e002a88fa50e2b88b4509b
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 4 15:41:27 2024 -0500

    Add deallocations of dynamic hit arrays into rt_bot_free

commit 338874ab2db765e8687103f38a59ef7116ef54af
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Apr 4 15:40:13 2024 -0500

    Add caching of bu_avail_cpus in tie_s, because we were spending a lot of time asking about it

commit 197d5ea0a55d2cd7b45eef0f1ddaf94e398db8f0
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 3 16:14:29 2024 -0500

    integrate bot_shot_hlbvh into rt_bot_shot

commit 35780fceb85b97d61a42fec8e94323aaa6bd030b
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Apr 3 16:07:34 2024 -0500

    pull code over from cut_hlbvh.c and inline the triangle intersection and hit registering into it

commit 6d0f178183b0fea1305b8f0ddbd6f85ea31fdd83
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 16:06:47 2024 -0500

    remove recursive bvh_build_node shooting implementation

commit 01e18513b65062af8e0d078d63056c8924580873
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 15:51:24 2024 -0500

    precompute inverse of r_dir for speed in while_populate_leaf_list of cut_hlbvh.c

commit ee3c762bb584bff27776ae1acfd32963f0b69ae8
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 15:45:35 2024 -0500

    Convert recursive bvh_build_node checking into a while loop

commit 771d5057e01a8d2a44840da5f91d72f9e2fb5d7b
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 13:46:22 2024 -0500

    set up thread-local hit arrays

commit a2394bdb6e538d23e96b19ba969c1bd085d67f4c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 13:45:40 2024 -0500

    Added macro-based dynamic array management to bot.c

commit 0333ee26b98421dd93c5b007310108be31599a60
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Apr 2 13:43:51 2024 -0500

    Added comment message for hlbvh_shot in cut_hlbvh.c

commit b4ba068d31920bed09db42ab8a1f9b6340801456
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 22:18:25 2024 -0500

    Change rt_bot_prep triangle copy to reduce generated warnings

commit f9df7546cc8d0c5e590a25bf39bc623a2886cec0
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 22:17:33 2024 -0500

    Removed unused code

commit 3b23c997b26996e9e700aae81da552cc9994bf09
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 21:11:30 2024 -0500

    move code around so that segment code is between bot interface code and loading code; update comment on rt_bot_shot; add forward declare for rt_bot_makesegs for rt_bot_shot

commit 0f632503c8c8e057f3c24e330c7a0ea1262923b8
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 16:58:44 2024 -0500

    Delete unused function rt_bot_piece_hitsegs

commit 5af2e143cc16fd1af10512446261744fbd47853e
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 16:20:04 2024 -0500

    Removed unneeded functions from bot.c and table.cpp

commit 2e0a7e46e4a236c228df55ef275ddec181a231ee
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 16:09:01 2024 -0500

    Fix call to bu_free in rt_bot_free

commit f8fc3ea55143976c5da27e7183312f4bd678ae49
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 15:50:55 2024 -0500

    Change use of ordered_faces[i] to bot_ip_index for readability in copying triangles in rt_bot_prep

commit b188667c7c2cd0d4d65e6ea4e68b876e71e509ac
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 14:11:25 2024 -0500

    add freeing of batched vertex normal memory

commit 1964e42fc167f65a57826821c432f28137cc610c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 14:11:00 2024 -0500

    fix normal check to be sure face is in bounds

commit d2ed652ec57d989480792f1f929c36b60d1d32ae
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 13:51:42 2024 -0500

    batch allocate vertex normals

commit 25cf04ef757430b3acf0d468d21533f35e5e5b5c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 13:50:43 2024 -0500

    Change large callocs into mallocs in rt_bot_prep

commit f05f0f3a68ad78394464468bba95db97157c257e
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 12:38:04 2024 -0500

    Added normal debug prints

commit 6be48c8e4414947cd4babf988952bb718fb46464
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 28 11:06:40 2024 -0500

    Get the indexes for the normals with the correct triangle index; Triangle normals are now working!!!!

commit a953f93022ef118fd2f6f02ba43bace920e62c1f
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Mar 27 16:47:33 2024 -0500

    Actually index into the correct normal array

commit 089c04fcf48f28f8b210cb49e1bc56264f0be4cf
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Mar 27 16:43:35 2024 -0500

    Fix triangle intersection code

commit ff57ecbde0f68912f643bd3fb346d1d65277d7f4
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 26 16:44:39 2024 -0500

    We have completely changed over to using triangle_s, however the issue remains.

commit 118b2372158168ad0bad3ee231e279397f984d3a
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 26 13:26:04 2024 -0500

    In the process of modifying bot.c to use triangle_s instead of tri_specific_float or tri_specific_double, we currently compile but will segfault on a blind cast in rt_bot_makesegs

commit 2664914341afd650ff42b5469a5d19b2696ffe8a
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 26 08:23:40 2024 -0500

    removed old include

commit 7356a6bf46b123456c022428e12229fafca0c26c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 26 08:22:03 2024 -0500

    Moved hlbvh include stuff from space_partition.h to cut_hlbvh.h; moved bvh_build_node definition into cut_hlbvh.h

commit 2b848576a33c3b3751c5b040ec003cdf55e46fa0
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Mon Mar 25 15:26:54 2024 -0500

    Fix BVH exit condition for realz this time

commit 9d3bd165ddbcd15ad9ac0da3cd8cec0c154c36f9
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Wed Mar 20 13:34:37 2024 -0500

    Simplfy AABB-ray check in hlbvh with FMIN and FMAX macros; make assert for children more explicit; add comments

commit e1817cf31ab3181630f12e342420de0e9c275780
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 19 17:24:53 2024 -0500

    Got rid of old comment

commit c8e74a13eb122c9b43c5a9576bd92d7eae567609
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 19 17:24:13 2024 -0500

    Removed extranious rt_bot_bbox call in rt_bot_prep; Replaced triangle bounds calculation in rt_bot_prep with macro; Modified stp global bounds setting to give better radii; turned the rt_bot_norm function into a stub because it was causing segfaults - replicated side-effects into rt_bot_shot

commit 86ad546e4869489f6f371df450df11e896832014
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Mar 19 16:46:20 2024 -0500

    Added parenthesis to BBOX_NONDEGEN macro

commit f645a2970fb827ee91d092abec5cbf1c595915b1
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Mon Mar 18 03:08:51 2024 -0500

    fix conditions for aabb in hlbvh and triangle intersection

commit 69e1f460fd5a19955370d5c881dfa1344d5c02a7
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Sat Mar 16 22:00:47 2024 -0500

    Add hit sorting; Fix spacing; Add comments

commit 7f39c941b6dc09b9902a406bd93a2a1c49d8e99d
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Mar 15 23:25:16 2024 -0500

    Actually init stp box stuff; normalize calculated triangle normal; fill out rt_bot_free; convert triangle_s to points and vects; update hlbvh code to read as triangle agnostic (which it was); add todos

commit 37105a0fae1480bd0bdc972f90e85c4c01d36083
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Fri Mar 15 17:16:20 2024 -0500

    Got shot compiling

commit 2cabdee0a3c6a74853f7df44cd0e14bb5ad4ea44
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 14 14:59:30 2024 -0500

    Added ordering of triangles, preliminary tie structure, and hooked it all up

commit d6b4f60a605b431177ce7308b848e2da8763605c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Thu Mar 14 14:40:10 2024 -0500

    Got hlbvh build working!

commit 19549a932675b023a9279086a255501a2187ba4c
Author: TheZouave007 <shadow.sprint256@gmail.com>
Date:   Tue Feb 6 17:32:16 2024 -0600

    Add include and scoping so that file will compile on my machine

commit 06deccfad026b7f9f80cc44b9121eb8185ba3f28
Author: Kenneth Davis <kenneth.s.davis@gmail.com>
Date:   Fri Dec 29 09:50:05 2023 -0600

    add rt_version to brlcad.def refs #109

commit 254d02916964c5d5a7b94b45fda84252c5ca26c5
Author: Kenneth Davis <kenneth.s.davis@gmail.com>
Date:   Fri Dec 29 08:39:12 2023 -0600

    rework the region fix file message for readability refs #101

commit f4dfedee81f230c4b880a63954d9fd89579c7679
Author: Kenneth Davis <kenneth.s.davis@gmail.com>
Date:   Thu Dec 28 11:47:33 2023 -0600

    consider the failure to open a regexp file a 'soft' error refs #101

commit a1805426f101fb8aa42b8ee9b2190a39713d4cd4
Author: Kenneth Davis <kenny.davis@peopletec.com>
Date:   Tue Dec 12 13:21:06 2023 -0600

    adjust outdated comment

commit b7fed1c11b196d7c79bfa1e477935961e930ece6
Author: Kenneth Davis <kenny.davis@peopletec.com>
Date:   Tue Dec 12 13:17:06 2023 -0600

    protect the call to bu_hook_call with a semaphore

commit e40ed969994f3cb5b9f613cea9468ccc0969fe13
Author: Kenneth Davis <kenny.davis@peopletec.com>
Date:   Tue Dec 12 13:21:06 2023 -0600

    adjust outdated comment

commit 6fb322a01b5d509e810f62d92a72acd2f2251fa1
Author: Kenneth Davis <kenny.davis@peopletec.com>
Date:   Tue Dec 12 13:17:06 2023 -0600

    protect the call to bu_hook_call with a semaphore
