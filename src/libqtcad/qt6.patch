diff --git a/misc/CMake/BRLCAD_User_Options.cmake b/misc/CMake/BRLCAD_User_Options.cmake
index 9eb4de2227..2ec6a60c54 100644
--- a/misc/CMake/BRLCAD_User_Options.cmake
+++ b/misc/CMake/BRLCAD_User_Options.cmake
@@ -208,17 +208,17 @@ option(BRLCAD_ENABLE_QT "Enable features requiring Qt" OFF)
 mark_as_advanced(BRLCAD_ENABLE_QT)
 if (BRLCAD_ENABLE_QT)
 
-  find_package(Qt5 COMPONENTS Core Widgets Gui OpenGL Network)
+  find_package(Qt6 COMPONENTS Core Widgets Gui OpenGL OpenGLWidgets Network)
 
-  if(NOT Qt5Widgets_FOUND AND BRLCAD_ENABLE_QT)
-    message("QT interface requested, but QT5 is not found - disabling")
+  if(NOT Qt6Widgets_FOUND AND BRLCAD_ENABLE_QT)
+    message("QT interface requested, but QT6 is not found - disabling")
     set(BRLCAD_ENABLE_QT OFF)
-  endif(NOT Qt5Widgets_FOUND AND BRLCAD_ENABLE_QT)
+  endif(NOT Qt6Widgets_FOUND AND BRLCAD_ENABLE_QT)
 
 endif (BRLCAD_ENABLE_QT)
-mark_as_advanced(Qt5Widgets_DIR)
-mark_as_advanced(Qt5Core_DIR)
-mark_as_advanced(Qt5Gui_DIR)
+mark_as_advanced(Qt6Widgets_DIR)
+mark_as_advanced(Qt6Core_DIR)
+mark_as_advanced(Qt6Gui_DIR)
 
 # Enable features requiring OpenSceneGraph
 option(BRLCAD_ENABLE_OSG "Enable features requiring OpenSceneGraph" OFF)
diff --git a/src/brlman/CMakeLists.txt b/src/brlman/CMakeLists.txt
index 2334bfcacb..90bfed9b73 100644
--- a/src/brlman/CMakeLists.txt
+++ b/src/brlman/CMakeLists.txt
@@ -25,8 +25,8 @@ endif (NOT BRLCAD_ENABLE_QT AND TARGET libtclcad)
 
 # Qt version of brlman GUI
 if (BRLCAD_ENABLE_QT)
-  find_package(Qt5 COMPONENTS Core Widgets Gui)
-  set(brlman_libs libqtcad Qt5::Widgets Qt5::Gui ${brlman_libs})
+  find_package(Qt6 COMPONENTS Core Widgets Gui)
+  set(brlman_libs libqtcad Qt6::Widgets Qt6::Gui ${brlman_libs})
 endif (BRLCAD_ENABLE_QT)
 
 list(REMOVE_DUPLICATES BRLMAN_INCLUDE_DIRS)
diff --git a/src/isst/CMakeLists.txt b/src/isst/CMakeLists.txt
index 62450a0e2e..e834183965 100644
--- a/src/isst/CMakeLists.txt
+++ b/src/isst/CMakeLists.txt
@@ -44,8 +44,8 @@ if(BRLCAD_ENABLE_QT AND BRLCAD_ENABLE_OPENGL)
     set(OPENGL_LIBS ${OPENGL_gl_LIBRARY})
   endif (OPENGL_gl_LIBRARY)
 
-  QT5_WRAP_CPP(moc_srcs ${moc_headers})
-  BRLCAD_ADDEXEC(qisst "${isst_srcs};${moc_srcs}" "libbu;librt;libgcv;librender;Qt5::Core;Qt5::Widgets;Qt5::OpenGL;${OPENGL_LIBS}")
+  QT6_WRAP_CPP(moc_srcs ${moc_headers})
+  BRLCAD_ADDEXEC(qisst "${isst_srcs};${moc_srcs}" "libbu;librt;libgcv;librender;Qt6::Core;Qt6::Widgets;Qt6::OpenGL;Qt6::OpenGLWidgets;${OPENGL_LIBS}")
 endif(BRLCAD_ENABLE_QT AND BRLCAD_ENABLE_OPENGL)
 
 set(isst_ignore_srcs
diff --git a/src/isst/isstgl.cpp b/src/isst/isstgl.cpp
index 7a32e6a5d7..aae817ea75 100644
--- a/src/isst/isstgl.cpp
+++ b/src/isst/isstgl.cpp
@@ -339,13 +339,13 @@ void isstGL::keyPressEvent(QKeyEvent *k) {
 
 void isstGL::mouseMoveEvent(QMouseEvent *e) {
 
-    bu_log("(%d,%d)\n", e->x(), e->y());
+    bu_log("(%f,%f)\n", e->position().x(), e->position().y());
     if (x_prev > -INT_MAX && y_prev > -INT_MAX) {
-	bu_log("Delta: (%d,%d)\n", e->x() - x_prev, e->y() - y_prev);
+	bu_log("Delta: (%f,%f)\n", e->position().x() - x_prev, e->position().y() - y_prev);
     }
 
-    x_prev = e->x();
-    y_prev = e->y();
+    x_prev = e->position().x();
+    y_prev = e->position().y();
 
     QOpenGLWidget::mouseMoveEvent(e);
 }
diff --git a/src/isst/main_window.h b/src/isst/main_window.h
index 37246fec56..66005ff35a 100644
--- a/src/isst/main_window.h
+++ b/src/isst/main_window.h
@@ -28,7 +28,7 @@
 #define ISST_MAINWINDOW_H
 
 #include <QMainWindow>
-#include <QtWidgets/QOpenGLWidget>
+#include <QOpenGLWidget>
 #include <QDockWidget>
 #include <QMenu>
 #include <QMenuBar>
diff --git a/src/libdm/qtgl/CMakeLists.txt b/src/libdm/qtgl/CMakeLists.txt
index bf6b0d1d38..04494a5c0d 100644
--- a/src/libdm/qtgl/CMakeLists.txt
+++ b/src/libdm/qtgl/CMakeLists.txt
@@ -7,7 +7,7 @@ set(QTGL_SRCS
 if(BRLCAD_ENABLE_QT AND BRLCAD_ENABLE_OPENGL)
 
   find_package(OpenGL)
-  find_package(Qt5 COMPONENTS Core Widgets OpenGL)
+  find_package(Qt6 COMPONENTS Core Widgets OpenGL)
 
   include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}
@@ -29,12 +29,12 @@ if(BRLCAD_ENABLE_QT AND BRLCAD_ENABLE_OPENGL)
     set(OPENGL_LIBS ${OPENGL_gl_LIBRARY})
   endif (OPENGL_gl_LIBRARY)
 
-  QT5_WRAP_CPP(qtgl_moc_srcs qtglwin.h)
+  QT6_WRAP_CPP(qtgl_moc_srcs qtglwin.h)
   set(QTGL_SRCS ${QTGL_SRCS} ${qtgl_moc_srcs})
 
   dm_plugin_library(dm-qtgl SHARED ${QTGL_SRCS})
   target_link_libraries(dm-qtgl
-    libqtcad libdmgl libdm libbu Qt5::Core Qt5::Widgets Qt5::OpenGL ${OPENGL_LIBS})
+    libqtcad libdmgl libdm libbu Qt6::Core Qt6::Widgets Qt6::OpenGL Qt6::OpenGLWidgets ${OPENGL_LIBS})
   set_property(TARGET dm-qtgl APPEND PROPERTY COMPILE_DEFINITIONS BRLCADBUILD HAVE_CONFIG_H)
   VALIDATE_STYLE(dm-qtgl "${QTGL_SRCS}")
 
diff --git a/src/libdm/qtgl/dm-qtgl.h b/src/libdm/qtgl/dm-qtgl.h
index 7e5659b13d..8fa2e7bd6c 100644
--- a/src/libdm/qtgl/dm-qtgl.h
+++ b/src/libdm/qtgl/dm-qtgl.h
@@ -38,7 +38,7 @@
 #endif
 
 #ifdef __cplusplus
-#include <QtWidgets/QOpenGLWidget>
+#include <QOpenGLWidget>
 #endif
 
 extern "C" {
diff --git a/src/libdm/swrast/CMakeLists.txt b/src/libdm/swrast/CMakeLists.txt
index 1f19b5038f..2cb25e73f0 100644
--- a/src/libdm/swrast/CMakeLists.txt
+++ b/src/libdm/swrast/CMakeLists.txt
@@ -9,7 +9,7 @@ if(BRLCAD_ENABLE_QT)
 
   # Qt is used for the stand-alone FB window, but other than that should not be
   # used by swrast code.
-  find_package(Qt5 COMPONENTS Core Widgets)
+  find_package(Qt6 COMPONENTS Core Widgets)
 
   include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}
@@ -26,11 +26,11 @@ if(BRLCAD_ENABLE_QT)
   # system OpenGL libs
   add_definitions(-DUSE_MGL_NAMESPACE)
 
-  QT5_WRAP_CPP(swrast_moc_srcs swrastwin.h)
+  QT6_WRAP_CPP(swrast_moc_srcs swrastwin.h)
   set(SWRAST_SRCS ${SWRAST_SRCS} ${swrast_moc_srcs})
 
   dm_plugin_library(dm-swrast SHARED ${SWRAST_SRCS})
-  target_link_libraries(dm-swrast libqtcad libdm libbu osmesa Qt5::Core Qt5::Widgets)
+  target_link_libraries(dm-swrast libqtcad libdm libbu osmesa Qt6::Core Qt6::Widgets)
   set_property(TARGET dm-swrast APPEND PROPERTY COMPILE_DEFINITIONS BRLCADBUILD HAVE_CONFIG_H OSMESA)
   VALIDATE_STYLE(dm-swrast "${SWRAST_SRCS}")
 
diff --git a/src/libpkg/example_qt/CMakeLists.txt b/src/libpkg/example_qt/CMakeLists.txt
index 1ba751f4ea..ccf943ac63 100644
--- a/src/libpkg/example_qt/CMakeLists.txt
+++ b/src/libpkg/example_qt/CMakeLists.txt
@@ -1,6 +1,6 @@
 if (BRLCAD_ENABLE_QT)
 
-  find_package(Qt5 COMPONENTS Core Network Widgets)
+  find_package(Qt6 COMPONENTS Core Network Widgets)
 
   # Include directories needed by libpkg users
   set(PKG_EXAMPLE_INCLUDES
@@ -11,9 +11,9 @@ if (BRLCAD_ENABLE_QT)
   LIST(REMOVE_DUPLICATES PKG_EXAMPLE_INCLUDES)
   include_directories(${PKG_EXAMPLE_INCLUDES})
 
-  QT5_WRAP_CPP(pkg_moc_srcs ncp.h)
+  QT6_WRAP_CPP(pkg_moc_srcs ncp.h)
 
-  BRLCAD_ADDEXEC(qt_test_server "server.cpp;${pkg_moc_srcs}" "libbu;libpkg;Qt5::Core;Qt5::Network;Qt5::Widgets" NO_INSTALL)
+  BRLCAD_ADDEXEC(qt_test_server "server.cpp;${pkg_moc_srcs}" "libbu;libpkg;Qt6::Core;Qt6::Network;Qt6::Widgets" NO_INSTALL)
   BRLCAD_ADDEXEC(qt_test_client client.cpp "libbu;libpkg" NO_INSTALL)
 endif (BRLCAD_ENABLE_QT)
 
diff --git a/src/libqtcad/CMakeLists.txt b/src/libqtcad/CMakeLists.txt
index 8109911315..0e5e86c738 100644
--- a/src/libqtcad/CMakeLists.txt
+++ b/src/libqtcad/CMakeLists.txt
@@ -9,10 +9,10 @@ if(BRLCAD_ENABLE_QT)
     endif (OPENGL_gl_LIBRARY)
   endif (BRLCAD_ENABLE_OPENGL)
   if (OPENGL_LIBS)
-    find_package(Qt5 COMPONENTS Core Widgets Gui OpenGL)
-    set(OPENGL_LIBS "Qt5::OpenGL;${OPENGL_LIBS}")
+    find_package(Qt6 COMPONENTS Core Widgets Gui OpenGL OpenGLWidgets)
+    set(OPENGL_LIBS "Qt6::OpenGL;Qt6::OpenGLWidgets;${OPENGL_LIBS}")
   else (OPENGL_LIBS)
-    find_package(Qt5 COMPONENTS Core Widgets Gui)
+    find_package(Qt6 COMPONENTS Core Widgets Gui)
   endif (OPENGL_LIBS)
 
   include_directories(
@@ -88,9 +88,9 @@ if(BRLCAD_ENABLE_QT)
 
   set(USE_OBJECT_LIBS OFF)
 
-  QT5_WRAP_CPP(qtcad_moc_srcs ${qtcad_moc_headers})
-  QT5_ADD_RESOURCES(qtcad_qrc qtcad_resources.qrc)
-  BRLCAD_ADDLIB(libqtcad "${qtcad_srcs};${qtcad_moc_srcs};${qtcad_qrc}" "libged;libdm;librt;libbu;Qt5::Core;Qt5::Widgets;${OPENGL_LIBS}")
+  QT6_WRAP_CPP(qtcad_moc_srcs ${qtcad_moc_headers})
+  QT6_ADD_RESOURCES(qtcad_qrc qtcad_resources.qrc)
+  BRLCAD_ADDLIB(libqtcad "${qtcad_srcs};${qtcad_moc_srcs};${qtcad_qrc}" "libged;libdm;librt;libbu;Qt6::Core;Qt6::Widgets;${OPENGL_LIBS}")
   if (OPENGL_LIBS)
     set_property(TARGET libqtcad APPEND PROPERTY COMPILE_DEFINITIONS "QT_SYSTEM_OPENGL")
   endif (OPENGL_LIBS)
diff --git a/src/libqtcad/QFlowLayout.cpp b/src/libqtcad/QFlowLayout.cpp
index 20b5bf4a7d..dcb112ad93 100644
--- a/src/libqtcad/QFlowLayout.cpp
+++ b/src/libqtcad/QFlowLayout.cpp
@@ -150,7 +150,7 @@ QSize QFlowLayout::minimumSize() const
     foreach (item, itemList)
         size = size.expandedTo(item->minimumSize());
 
-    size += QSize(2*margin(), 2*margin());
+    //size += QSize(2*margin(), 2*margin());
     return size;
 }
 
diff --git a/src/libqtcad/QToolPalette.cpp b/src/libqtcad/QToolPalette.cpp
index c0fb2f5c0c..fd168ef686 100644
--- a/src/libqtcad/QToolPalette.cpp
+++ b/src/libqtcad/QToolPalette.cpp
@@ -159,7 +159,7 @@ void
 QToolPalette::button_layout_resize()
 {
     div_t layout_dim = div(button_container->size().width()-1, icon_width);
-    div_t layout_grid = div(elements.count(), layout_dim.quot);
+    div_t layout_grid = div((int)elements.count(), (int)layout_dim.quot);
     if (layout_grid.rem > 0) {
 	button_container->setMinimumHeight((layout_grid.quot + 1) * icon_height);
 	button_container->setMaximumHeight((layout_grid.quot + 1) * icon_height);
diff --git a/src/libqtcad/QtConsole.cpp b/src/libqtcad/QtConsole.cpp
index 519299132a..90136ccdfa 100644
--- a/src/libqtcad/QtConsole.cpp
+++ b/src/libqtcad/QtConsole.cpp
@@ -346,7 +346,7 @@ QtConsole::QtConsole(QWidget* Parent) :
   Implementation(new pqImplementation(*this))
 {
   QVBoxLayout* const l = new QVBoxLayout(this);
-  l->setMargin(0);
+  //l->setMargin(0);
   l->addWidget(this->Implementation);
   QObject::connect(this, &QtConsole::queued_log, this, &QtConsole::printStringBeforePrompt);
 }
diff --git a/src/libqtcad/QtGL.cpp b/src/libqtcad/QtGL.cpp
index 334998a6c5..c52eec78fe 100644
--- a/src/libqtcad/QtGL.cpp
+++ b/src/libqtcad/QtGL.cpp
@@ -219,7 +219,7 @@ void QtGL::mousePressEvent(QMouseEvent *e) {
 	emit changed();
     }
 
-    bu_log("X,Y: %d, %d\n", e->x(), e->y());
+    bu_log("X,Y: %f, %f\n", e->position().x(), e->position().y());
 
     QOpenGLWidget::mousePressEvent(e);
 }
@@ -243,8 +243,8 @@ void QtGL::mouseMoveEvent(QMouseEvent *e)
     }
 
     // Current positions are the new previous positions
-    x_prev = e->x();
-    y_prev = e->y();
+    x_prev = e->position().x();
+    y_prev = e->position().y();
 
     QOpenGLWidget::mouseMoveEvent(e);
 }
diff --git a/src/libqtcad/QtSW.cpp b/src/libqtcad/QtSW.cpp
index c8a11cc66d..55732b0ed2 100644
--- a/src/libqtcad/QtSW.cpp
+++ b/src/libqtcad/QtSW.cpp
@@ -229,7 +229,7 @@ void QtSW::mousePressEvent(QMouseEvent *e) {
 	emit changed();
     }
 
-    bu_log("X,Y: %d, %d\n", e->x(), e->y());
+    bu_log("X,Y: %f, %f\n", e->position().x(), e->position().y());
 
     QWidget::mousePressEvent(e);
 }
@@ -253,8 +253,8 @@ void QtSW::mouseMoveEvent(QMouseEvent *e)
     }
 
     // Current positions are the new previous positions
-    x_prev = e->x();
-    y_prev = e->y();
+    x_prev = e->position().x();
+    y_prev = e->position().y();
 
     QWidget::mouseMoveEvent(e);
 }
diff --git a/src/libqtcad/bindings.cpp b/src/libqtcad/bindings.cpp
index f1b6196b45..2448e7a843 100644
--- a/src/libqtcad/bindings.cpp
+++ b/src/libqtcad/bindings.cpp
@@ -141,8 +141,8 @@ int CADmouseMoveEvent(struct bview *v, int x_prev, int y_prev, QMouseEvent *e)
 	bu_log("Right\n");
     }
 
-    int dx = e->x() - x_prev;
-    int dy = e->y() - y_prev;
+    int dx = e->position().x() - x_prev;
+    int dy = e->position().y() - y_prev;
 
     if (view_flags == BV_SCALE) {
 	int mdelta = (abs(dx) > abs(dy)) ? dx : -dy;
diff --git a/src/qged/CMakeLists.txt b/src/qged/CMakeLists.txt
index 4d75f6a036..6365099c69 100644
--- a/src/qged/CMakeLists.txt
+++ b/src/qged/CMakeLists.txt
@@ -40,14 +40,14 @@ if (BRLCAD_ENABLE_QT)
   set_property(SOURCE main_window.cpp APPEND PROPERTY
     COMPILE_DEFINITIONS "QGED_PLUGIN_SUFFIX=\"${CMAKE_SHARED_LIBRARY_SUFFIX}\"")
 
-  QT5_WRAP_CPP(moc_srcs ${moc_headers})
+  QT6_WRAP_CPP(moc_srcs ${moc_headers})
 
   # https://github.com/Alexhuszagh/BreezeStyleSheets
-  QT5_ADD_RESOURCES(theme_qrc theme/breeze.qrc)
+  QT6_ADD_RESOURCES(theme_qrc theme/breeze.qrc)
 
   add_executable(qged main.cpp ${qged_srcs} ${moc_srcs} ${theme_qrc})
   # Note - Network is needed for async embedded raytracing display
-  target_link_libraries(qged libqtcad libged librt libbu Qt5::Widgets Qt5::Network)
+  target_link_libraries(qged libqtcad libged librt libbu Qt6::Widgets Qt6::Network)
   target_compile_definitions(qged PRIVATE BRLCADBUILD HAVE_CONFIG_H)
   install(TARGETS qged
     RUNTIME DESTINATION ${BIN_DIR}
diff --git a/src/qged/attributes.cpp b/src/qged/attributes.cpp
index d9045233d0..5a9953c816 100644
--- a/src/qged/attributes.cpp
+++ b/src/qged/attributes.cpp
@@ -93,7 +93,7 @@ CADAttributesModel::add_Children(const char *name, QKeyValNode *curr_node)
 {
     if (BU_STR_EQUAL(name, "color")) {
 	QString val(bu_avs_get(avs, name));
-	QStringList vals = val.split(QRegExp("/"));
+	QStringList vals = val.split(QRegularExpression("/"));
 	(void)add_pair("r", vals.at(0).toLocal8Bit(), curr_node, db5_standardize_attribute(name));
 	(void)add_pair("g", vals.at(1).toLocal8Bit(), curr_node, db5_standardize_attribute(name));
 	(void)add_pair("b", vals.at(2).toLocal8Bit(), curr_node, db5_standardize_attribute(name));
diff --git a/src/qged/event_filter.cpp b/src/qged/event_filter.cpp
index df5cc6848f..6c3df6091e 100644
--- a/src/qged/event_filter.cpp
+++ b/src/qged/event_filter.cpp
@@ -39,7 +39,7 @@ bool EditStateFilter::eventFilter(QObject *, QEvent *e)
     if (!c || !c->w)
 	return false;
     QWidget *vcp = c->w->vc->tpalette;
-    QPoint gpos = m_e->globalPos();
+    QPoint gpos = m_e->globalPosition().toPoint();
     if (vcp) {
 	QRect lrect = vcp->geometry();
 	QPoint mpos = vcp->mapFromGlobal(gpos);
diff --git a/src/qged/plugins/polygon/CMakeLists.txt b/src/qged/plugins/polygon/CMakeLists.txt
index 95c262ead0..6a506ca1fe 100644
--- a/src/qged/plugins/polygon/CMakeLists.txt
+++ b/src/qged/plugins/polygon/CMakeLists.txt
@@ -28,11 +28,11 @@ set(polygon_moc_hdrs
 
 if(BRLCAD_ENABLE_QT)
 
-  QT5_WRAP_CPP(polygon_moc_srcs ${polygon_moc_hdrs})
-  QT5_ADD_RESOURCES(icon_qrc icon.qrc)
+  QT6_WRAP_CPP(polygon_moc_srcs ${polygon_moc_hdrs})
+  QT6_ADD_RESOURCES(icon_qrc icon.qrc)
 
   qged_plugin(qged_polygon SHARED ${polygon_srcs} ${polygon_moc_srcs} ${icon_qrc})
-  target_link_libraries(qged_polygon libqtcad libged librt libbu Qt5::Widgets)
+  target_link_libraries(qged_polygon libqtcad libged librt libbu Qt6::Widgets)
   set_property(TARGET qged_polygon APPEND PROPERTY COMPILE_DEFINITIONS BRLCADBUILD HAVE_CONFIG_H)
   VALIDATE_STYLE(qged_polygon polygon_tool.cpp polygon_control.cpp)
   PLUGIN_SETUP(qged_polygon qged)
diff --git a/src/qged/plugins/polygon/QPolyCreate.cpp b/src/qged/plugins/polygon/QPolyCreate.cpp
index b246221175..ac1fbb7f0a 100644
--- a/src/qged/plugins/polygon/QPolyCreate.cpp
+++ b/src/qged/plugins/polygon/QPolyCreate.cpp
@@ -589,8 +589,8 @@ QPolyCreate::eventFilter(QObject *, QEvent *e)
 	gedp->ged_gvp->gv_prevMouseX = gedp->ged_gvp->gv_mouse_x;
 	gedp->ged_gvp->gv_prevMouseY = gedp->ged_gvp->gv_mouse_y;
 
-	gedp->ged_gvp->gv_mouse_x = m_e->x();
-	gedp->ged_gvp->gv_mouse_y = m_e->y();
+	gedp->ged_gvp->gv_mouse_x = m_e->position().x();
+	gedp->ged_gvp->gv_mouse_y = m_e->position().y();
     }
 
     if (!m_e)
@@ -620,7 +620,7 @@ QPolyCreate::eventFilter(QObject *, QEvent *e)
 		ptype = BV_POLYGON_GENERAL;
 	    }
 
-	    p = bv_create_polygon(gedp->ged_gvp, ptype, m_e->x(), m_e->y(), gedp->free_scene_obj);
+	    p = bv_create_polygon(gedp->ged_gvp, ptype, m_e->position().x(), m_e->position().y(), gedp->free_scene_obj);
 	    p->s_v = gedp->ged_gvp;
 	    struct bv_polygon *ip = (struct bv_polygon *)p->s_i_data;
 
@@ -677,8 +677,8 @@ QPolyCreate::eventFilter(QObject *, QEvent *e)
 	// the initial creation
 	struct bv_polygon *ip = (struct bv_polygon *)p->s_i_data;
 	if (ip->type == BV_POLYGON_GENERAL) {
-	    p->s_v->gv_mouse_x = m_e->x();
-	    p->s_v->gv_mouse_y = m_e->y();
+	    p->s_v->gv_mouse_x = m_e->position().x();
+	    p->s_v->gv_mouse_y = m_e->position().y();
 	    bv_update_polygon(p, BV_POLYGON_UPDATE_PT_APPEND);
 
 	    emit view_updated(&gedp->ged_gvp);
diff --git a/src/qged/plugins/polygon/QPolyMod.cpp b/src/qged/plugins/polygon/QPolyMod.cpp
index 351a4402f5..8b18b52a75 100644
--- a/src/qged/plugins/polygon/QPolyMod.cpp
+++ b/src/qged/plugins/polygon/QPolyMod.cpp
@@ -819,8 +819,8 @@ QPolyMod::eventFilter(QObject *, QEvent *e)
 	gedp->ged_gvp->gv_prevMouseX = gedp->ged_gvp->gv_mouse_x;
 	gedp->ged_gvp->gv_prevMouseY = gedp->ged_gvp->gv_mouse_y;
 
-	gedp->ged_gvp->gv_mouse_x = m_e->x();
-	gedp->ged_gvp->gv_mouse_y = m_e->y();
+	gedp->ged_gvp->gv_mouse_x = m_e->position().x();
+	gedp->ged_gvp->gv_mouse_y = m_e->position().y();
     }
 
     if (!m_e)
@@ -855,8 +855,8 @@ QPolyMod::eventFilter(QObject *, QEvent *e)
 
 	struct bv_polygon *ip = (struct bv_polygon *)p->s_i_data;
 	if (append_pnt->isChecked() && ip->type == BV_POLYGON_GENERAL) {
-	    p->s_v->gv_mouse_x = m_e->x();
-	    p->s_v->gv_mouse_y = m_e->y();
+	    p->s_v->gv_mouse_x = m_e->position().x();
+	    p->s_v->gv_mouse_y = m_e->position().y();
 	    bv_update_polygon(p, BV_POLYGON_UPDATE_PT_APPEND);
 
 	    emit view_updated(&gedp->ged_gvp);
@@ -864,8 +864,8 @@ QPolyMod::eventFilter(QObject *, QEvent *e)
 	}
 
 	if (!move_mode->isChecked() && select_pnt->isChecked() && ip->type == BV_POLYGON_GENERAL) {
-	    p->s_v->gv_mouse_x = m_e->x();
-	    p->s_v->gv_mouse_y = m_e->y();
+	    p->s_v->gv_mouse_x = m_e->position().x();
+	    p->s_v->gv_mouse_y = m_e->position().y();
 	    bv_update_polygon(p, BV_POLYGON_UPDATE_PT_SELECT);
 	    emit view_updated(&gedp->ged_gvp);
 	    return true;
diff --git a/src/qged/plugins/view_info/CMakeLists.txt b/src/qged/plugins/view_info/CMakeLists.txt
index a3fc0910e2..47d4283fbb 100644
--- a/src/qged/plugins/view_info/CMakeLists.txt
+++ b/src/qged/plugins/view_info/CMakeLists.txt
@@ -29,11 +29,11 @@ set(view_info_moc_headers
 
 if(BRLCAD_ENABLE_QT)
 
-  QT5_WRAP_CPP(view_info_moc_srcs ${view_info_moc_headers})
-  QT5_ADD_RESOURCES(icon_qrc icon.qrc)
+  QT6_WRAP_CPP(view_info_moc_srcs ${view_info_moc_headers})
+  QT6_ADD_RESOURCES(icon_qrc icon.qrc)
 
   qged_plugin(qged_view_info SHARED ${view_info_srcs} ${view_info_moc_srcs} ${icon_qrc})
-  target_link_libraries(qged_view_info libqtcad libged librt libbu Qt5::Widgets)
+  target_link_libraries(qged_view_info libqtcad libged librt libbu Qt6::Widgets)
   set_property(TARGET qged_view_info APPEND PROPERTY COMPILE_DEFINITIONS BRLCADBUILD HAVE_CONFIG_H)
   VALIDATE_STYLE(qged_view_info view_info.cpp)
   PLUGIN_SETUP(qged_view_info qged)
diff --git a/src/qged/plugins/view_settings/CMakeLists.txt b/src/qged/plugins/view_settings/CMakeLists.txt
index e625c2b7ee..67dd4005fb 100644
--- a/src/qged/plugins/view_settings/CMakeLists.txt
+++ b/src/qged/plugins/view_settings/CMakeLists.txt
@@ -24,11 +24,11 @@ set(view_settings_moc_hdrs
 
 if(BRLCAD_ENABLE_QT)
 
-  QT5_WRAP_CPP(view_settings_moc_srcs ${view_settings_moc_hdrs})
-  QT5_ADD_RESOURCES(icon_qrc icon.qrc)
+  QT6_WRAP_CPP(view_settings_moc_srcs ${view_settings_moc_hdrs})
+  QT6_ADD_RESOURCES(icon_qrc icon.qrc)
 
   qged_plugin(qged_view_settings SHARED ${view_settings_srcs} ${view_settings_moc_srcs} ${icon_qrc})
-  target_link_libraries(qged_view_settings libqtcad libged librt libbu Qt5::Widgets)
+  target_link_libraries(qged_view_settings libqtcad libged librt libbu Qt6::Widgets)
   set_property(TARGET qged_view_settings APPEND PROPERTY COMPILE_DEFINITIONS BRLCADBUILD HAVE_CONFIG_H)
   VALIDATE_STYLE(qged_view_settings view_settings.cpp)
   PLUGIN_SETUP(qged_view_settings qged)
